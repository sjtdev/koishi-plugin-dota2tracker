{
  "version": 3,
  "sources": ["../../../../../../node_modules/supports-color/browser.js", "../../../../../../node_modules/object-inspect/index.js", "../../../../../../node_modules/@satorijs/core/node_modules/path-to-regexp/src/index.ts", "../../../../../../node_modules/mime-db/db.json", "../../../../../../node_modules/mime-db/index.js", "../../../../../../node_modules/@koishijs/core/package.json", "../../../../../../node_modules/inaba/src/index.ts", "../../../../../../node_modules/cosmokit/src/misc.ts", "../../../../../../node_modules/cosmokit/src/array.ts", "../../../../../../node_modules/cosmokit/src/types.ts", "../../../../../../node_modules/cosmokit/src/string.ts", "../../../../../../node_modules/cosmokit/src/time.ts", "../../../../../../node_modules/@koishijs/utils/src/index.ts", "../../../../../../node_modules/@koishijs/utils/src/misc.ts", "../../../../../../node_modules/@koishijs/utils/src/observe.ts", "../../../../../../node_modules/@koishijs/utils/src/string.ts", "../../../../../../node_modules/@cordisjs/core/src/context.ts", "../../../../../../node_modules/@cordisjs/core/src/events.ts", "../../../../../../node_modules/@cordisjs/core/src/reflect.ts", "../../../../../../node_modules/@cordisjs/core/src/utils.ts", "../../../../../../node_modules/@cordisjs/core/src/registry.ts", "../../../../../../node_modules/@cordisjs/core/src/scope.ts", "../../../../../../node_modules/@cordisjs/core/src/service.ts", "../../../../../../node_modules/reggol/lib/browser.mjs", "../../../../../../node_modules/@cordisjs/logger/src/index.ts", "../../../../../../node_modules/schemastery/src/index.ts", "../../../../../../node_modules/@cordisjs/schema/src/index.ts", "../../../../../../node_modules/@cordisjs/timer/src/index.ts", "../../../../../../node_modules/cordis/src/index.ts", "../../../../../../node_modules/minato/src/database.ts", "../../../../../../node_modules/minato/src/utils.ts", "../../../../../../node_modules/minato/src/eval.ts", "../../../../../../node_modules/minato/src/type.ts", "../../../../../../node_modules/minato/src/model.ts", "../../../../../../node_modules/minato/src/selection.ts", "../../../../../../node_modules/minato/src/driver.ts", "../../../../../../node_modules/minato/src/error.ts", "../../../../../../node_modules/minato/src/query.ts", "../../../../../../node_modules/minato/src/index.ts", "../../../../../../node_modules/@satorijs/core/lib/index.mjs", "../../../../../../node_modules/@cordisjs/plugin-http/lib/adapter/browser.js", "../../../../../../node_modules/@cordisjs/plugin-http/lib/index.js", "../../../../../../node_modules/@satorijs/element/src/index.ts", "../../../../../../node_modules/@satorijs/protocol/lib/index.mjs", "../../../../../../node_modules/fastest-levenshtein/esm/mod.js", "../../../../../../node_modules/@koishijs/i18n-utils/src/index.ts", "../../../../../../node_modules/@koishijs/core/src/index.ts", "../../../../../../node_modules/@koishijs/core/src/context.ts", "../../../../../../node_modules/@koishijs/core/src/filter.ts", "../../../../../../node_modules/@koishijs/core/src/command/index.ts", "../../../../../../node_modules/@koishijs/core/src/command/command.ts", "../../../../../../node_modules/@koishijs/core/src/command/parser.ts", "../../../../../../node_modules/@koishijs/core/src/middleware.ts", "../../../../../../node_modules/@koishijs/core/src/database.ts", "../../../../../../node_modules/@koishijs/core/src/command/validate.ts", "../../../../../../node_modules/@koishijs/core/src/i18n.ts", "../../../../../../node_modules/@koishijs/core/src/locales/zh-CN.yml", "../../../../../../node_modules/@koishijs/core/src/locales/en-US.yml", "../../../../../../node_modules/@koishijs/core/src/session.ts", "../../../../../../node_modules/@koishijs/core/src/permission.ts", "../../../../../../node_modules/@koishijs/core/src/bot.ts", "../../../../../../node_modules/@koishijs/core/src/schema.ts"],
  "sourcesContent": ["/* eslint-env browser */\n'use strict';\n\nfunction getChromeVersion() {\n\tconst matches = /(Chrome|Chromium)\\/(?<chromeVersion>\\d+)\\./.exec(navigator.userAgent);\n\n\tif (!matches) {\n\t\treturn;\n\t}\n\n\treturn Number.parseInt(matches.groups.chromeVersion, 10);\n}\n\nconst colorSupport = getChromeVersion() >= 69 ? {\n\tlevel: 1,\n\thasBasic: true,\n\thas256: false,\n\thas16m: false\n} : false;\n\nmodule.exports = {\n\tstdout: colorSupport,\n\tstderr: colorSupport\n};\n", "var hasMap = typeof Map === 'function' && Map.prototype;\nvar mapSizeDescriptor = Object.getOwnPropertyDescriptor && hasMap ? Object.getOwnPropertyDescriptor(Map.prototype, 'size') : null;\nvar mapSize = hasMap && mapSizeDescriptor && typeof mapSizeDescriptor.get === 'function' ? mapSizeDescriptor.get : null;\nvar mapForEach = hasMap && Map.prototype.forEach;\nvar hasSet = typeof Set === 'function' && Set.prototype;\nvar setSizeDescriptor = Object.getOwnPropertyDescriptor && hasSet ? Object.getOwnPropertyDescriptor(Set.prototype, 'size') : null;\nvar setSize = hasSet && setSizeDescriptor && typeof setSizeDescriptor.get === 'function' ? setSizeDescriptor.get : null;\nvar setForEach = hasSet && Set.prototype.forEach;\nvar hasWeakMap = typeof WeakMap === 'function' && WeakMap.prototype;\nvar weakMapHas = hasWeakMap ? WeakMap.prototype.has : null;\nvar hasWeakSet = typeof WeakSet === 'function' && WeakSet.prototype;\nvar weakSetHas = hasWeakSet ? WeakSet.prototype.has : null;\nvar hasWeakRef = typeof WeakRef === 'function' && WeakRef.prototype;\nvar weakRefDeref = hasWeakRef ? WeakRef.prototype.deref : null;\nvar booleanValueOf = Boolean.prototype.valueOf;\nvar objectToString = Object.prototype.toString;\nvar functionToString = Function.prototype.toString;\nvar $match = String.prototype.match;\nvar $slice = String.prototype.slice;\nvar $replace = String.prototype.replace;\nvar $toUpperCase = String.prototype.toUpperCase;\nvar $toLowerCase = String.prototype.toLowerCase;\nvar $test = RegExp.prototype.test;\nvar $concat = Array.prototype.concat;\nvar $join = Array.prototype.join;\nvar $arrSlice = Array.prototype.slice;\nvar $floor = Math.floor;\nvar bigIntValueOf = typeof BigInt === 'function' ? BigInt.prototype.valueOf : null;\nvar gOPS = Object.getOwnPropertySymbols;\nvar symToString = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? Symbol.prototype.toString : null;\nvar hasShammedSymbols = typeof Symbol === 'function' && typeof Symbol.iterator === 'object';\n// ie, `has-tostringtag/shams\nvar toStringTag = typeof Symbol === 'function' && Symbol.toStringTag && (typeof Symbol.toStringTag === hasShammedSymbols ? 'object' : 'symbol')\n    ? Symbol.toStringTag\n    : null;\nvar isEnumerable = Object.prototype.propertyIsEnumerable;\n\nvar gPO = (typeof Reflect === 'function' ? Reflect.getPrototypeOf : Object.getPrototypeOf) || (\n    [].__proto__ === Array.prototype // eslint-disable-line no-proto\n        ? function (O) {\n            return O.__proto__; // eslint-disable-line no-proto\n        }\n        : null\n);\n\nfunction addNumericSeparator(num, str) {\n    if (\n        num === Infinity\n        || num === -Infinity\n        || num !== num\n        || (num && num > -1000 && num < 1000)\n        || $test.call(/e/, str)\n    ) {\n        return str;\n    }\n    var sepRegex = /[0-9](?=(?:[0-9]{3})+(?![0-9]))/g;\n    if (typeof num === 'number') {\n        var int = num < 0 ? -$floor(-num) : $floor(num); // trunc(num)\n        if (int !== num) {\n            var intStr = String(int);\n            var dec = $slice.call(str, intStr.length + 1);\n            return $replace.call(intStr, sepRegex, '$&_') + '.' + $replace.call($replace.call(dec, /([0-9]{3})/g, '$&_'), /_$/, '');\n        }\n    }\n    return $replace.call(str, sepRegex, '$&_');\n}\n\nvar utilInspect = require('./util.inspect');\nvar inspectCustom = utilInspect.custom;\nvar inspectSymbol = isSymbol(inspectCustom) ? inspectCustom : null;\n\nvar quotes = {\n    __proto__: null,\n    'double': '\"',\n    single: \"'\"\n};\nvar quoteREs = {\n    __proto__: null,\n    'double': /([\"\\\\])/g,\n    single: /(['\\\\])/g\n};\n\nmodule.exports = function inspect_(obj, options, depth, seen) {\n    var opts = options || {};\n\n    if (has(opts, 'quoteStyle') && !has(quotes, opts.quoteStyle)) {\n        throw new TypeError('option \"quoteStyle\" must be \"single\" or \"double\"');\n    }\n    if (\n        has(opts, 'maxStringLength') && (typeof opts.maxStringLength === 'number'\n            ? opts.maxStringLength < 0 && opts.maxStringLength !== Infinity\n            : opts.maxStringLength !== null\n        )\n    ) {\n        throw new TypeError('option \"maxStringLength\", if provided, must be a positive integer, Infinity, or `null`');\n    }\n    var customInspect = has(opts, 'customInspect') ? opts.customInspect : true;\n    if (typeof customInspect !== 'boolean' && customInspect !== 'symbol') {\n        throw new TypeError('option \"customInspect\", if provided, must be `true`, `false`, or `\\'symbol\\'`');\n    }\n\n    if (\n        has(opts, 'indent')\n        && opts.indent !== null\n        && opts.indent !== '\\t'\n        && !(parseInt(opts.indent, 10) === opts.indent && opts.indent > 0)\n    ) {\n        throw new TypeError('option \"indent\" must be \"\\\\t\", an integer > 0, or `null`');\n    }\n    if (has(opts, 'numericSeparator') && typeof opts.numericSeparator !== 'boolean') {\n        throw new TypeError('option \"numericSeparator\", if provided, must be `true` or `false`');\n    }\n    var numericSeparator = opts.numericSeparator;\n\n    if (typeof obj === 'undefined') {\n        return 'undefined';\n    }\n    if (obj === null) {\n        return 'null';\n    }\n    if (typeof obj === 'boolean') {\n        return obj ? 'true' : 'false';\n    }\n\n    if (typeof obj === 'string') {\n        return inspectString(obj, opts);\n    }\n    if (typeof obj === 'number') {\n        if (obj === 0) {\n            return Infinity / obj > 0 ? '0' : '-0';\n        }\n        var str = String(obj);\n        return numericSeparator ? addNumericSeparator(obj, str) : str;\n    }\n    if (typeof obj === 'bigint') {\n        var bigIntStr = String(obj) + 'n';\n        return numericSeparator ? addNumericSeparator(obj, bigIntStr) : bigIntStr;\n    }\n\n    var maxDepth = typeof opts.depth === 'undefined' ? 5 : opts.depth;\n    if (typeof depth === 'undefined') { depth = 0; }\n    if (depth >= maxDepth && maxDepth > 0 && typeof obj === 'object') {\n        return isArray(obj) ? '[Array]' : '[Object]';\n    }\n\n    var indent = getIndent(opts, depth);\n\n    if (typeof seen === 'undefined') {\n        seen = [];\n    } else if (indexOf(seen, obj) >= 0) {\n        return '[Circular]';\n    }\n\n    function inspect(value, from, noIndent) {\n        if (from) {\n            seen = $arrSlice.call(seen);\n            seen.push(from);\n        }\n        if (noIndent) {\n            var newOpts = {\n                depth: opts.depth\n            };\n            if (has(opts, 'quoteStyle')) {\n                newOpts.quoteStyle = opts.quoteStyle;\n            }\n            return inspect_(value, newOpts, depth + 1, seen);\n        }\n        return inspect_(value, opts, depth + 1, seen);\n    }\n\n    if (typeof obj === 'function' && !isRegExp(obj)) { // in older engines, regexes are callable\n        var name = nameOf(obj);\n        var keys = arrObjKeys(obj, inspect);\n        return '[Function' + (name ? ': ' + name : ' (anonymous)') + ']' + (keys.length > 0 ? ' { ' + $join.call(keys, ', ') + ' }' : '');\n    }\n    if (isSymbol(obj)) {\n        var symString = hasShammedSymbols ? $replace.call(String(obj), /^(Symbol\\(.*\\))_[^)]*$/, '$1') : symToString.call(obj);\n        return typeof obj === 'object' && !hasShammedSymbols ? markBoxed(symString) : symString;\n    }\n    if (isElement(obj)) {\n        var s = '<' + $toLowerCase.call(String(obj.nodeName));\n        var attrs = obj.attributes || [];\n        for (var i = 0; i < attrs.length; i++) {\n            s += ' ' + attrs[i].name + '=' + wrapQuotes(quote(attrs[i].value), 'double', opts);\n        }\n        s += '>';\n        if (obj.childNodes && obj.childNodes.length) { s += '...'; }\n        s += '</' + $toLowerCase.call(String(obj.nodeName)) + '>';\n        return s;\n    }\n    if (isArray(obj)) {\n        if (obj.length === 0) { return '[]'; }\n        var xs = arrObjKeys(obj, inspect);\n        if (indent && !singleLineValues(xs)) {\n            return '[' + indentedJoin(xs, indent) + ']';\n        }\n        return '[ ' + $join.call(xs, ', ') + ' ]';\n    }\n    if (isError(obj)) {\n        var parts = arrObjKeys(obj, inspect);\n        if (!('cause' in Error.prototype) && 'cause' in obj && !isEnumerable.call(obj, 'cause')) {\n            return '{ [' + String(obj) + '] ' + $join.call($concat.call('[cause]: ' + inspect(obj.cause), parts), ', ') + ' }';\n        }\n        if (parts.length === 0) { return '[' + String(obj) + ']'; }\n        return '{ [' + String(obj) + '] ' + $join.call(parts, ', ') + ' }';\n    }\n    if (typeof obj === 'object' && customInspect) {\n        if (inspectSymbol && typeof obj[inspectSymbol] === 'function' && utilInspect) {\n            return utilInspect(obj, { depth: maxDepth - depth });\n        } else if (customInspect !== 'symbol' && typeof obj.inspect === 'function') {\n            return obj.inspect();\n        }\n    }\n    if (isMap(obj)) {\n        var mapParts = [];\n        if (mapForEach) {\n            mapForEach.call(obj, function (value, key) {\n                mapParts.push(inspect(key, obj, true) + ' => ' + inspect(value, obj));\n            });\n        }\n        return collectionOf('Map', mapSize.call(obj), mapParts, indent);\n    }\n    if (isSet(obj)) {\n        var setParts = [];\n        if (setForEach) {\n            setForEach.call(obj, function (value) {\n                setParts.push(inspect(value, obj));\n            });\n        }\n        return collectionOf('Set', setSize.call(obj), setParts, indent);\n    }\n    if (isWeakMap(obj)) {\n        return weakCollectionOf('WeakMap');\n    }\n    if (isWeakSet(obj)) {\n        return weakCollectionOf('WeakSet');\n    }\n    if (isWeakRef(obj)) {\n        return weakCollectionOf('WeakRef');\n    }\n    if (isNumber(obj)) {\n        return markBoxed(inspect(Number(obj)));\n    }\n    if (isBigInt(obj)) {\n        return markBoxed(inspect(bigIntValueOf.call(obj)));\n    }\n    if (isBoolean(obj)) {\n        return markBoxed(booleanValueOf.call(obj));\n    }\n    if (isString(obj)) {\n        return markBoxed(inspect(String(obj)));\n    }\n    // note: in IE 8, sometimes `global !== window` but both are the prototypes of each other\n    /* eslint-env browser */\n    if (typeof window !== 'undefined' && obj === window) {\n        return '{ [object Window] }';\n    }\n    if (\n        (typeof globalThis !== 'undefined' && obj === globalThis)\n        || (typeof global !== 'undefined' && obj === global)\n    ) {\n        return '{ [object globalThis] }';\n    }\n    if (!isDate(obj) && !isRegExp(obj)) {\n        var ys = arrObjKeys(obj, inspect);\n        var isPlainObject = gPO ? gPO(obj) === Object.prototype : obj instanceof Object || obj.constructor === Object;\n        var protoTag = obj instanceof Object ? '' : 'null prototype';\n        var stringTag = !isPlainObject && toStringTag && Object(obj) === obj && toStringTag in obj ? $slice.call(toStr(obj), 8, -1) : protoTag ? 'Object' : '';\n        var constructorTag = isPlainObject || typeof obj.constructor !== 'function' ? '' : obj.constructor.name ? obj.constructor.name + ' ' : '';\n        var tag = constructorTag + (stringTag || protoTag ? '[' + $join.call($concat.call([], stringTag || [], protoTag || []), ': ') + '] ' : '');\n        if (ys.length === 0) { return tag + '{}'; }\n        if (indent) {\n            return tag + '{' + indentedJoin(ys, indent) + '}';\n        }\n        return tag + '{ ' + $join.call(ys, ', ') + ' }';\n    }\n    return String(obj);\n};\n\nfunction wrapQuotes(s, defaultStyle, opts) {\n    var style = opts.quoteStyle || defaultStyle;\n    var quoteChar = quotes[style];\n    return quoteChar + s + quoteChar;\n}\n\nfunction quote(s) {\n    return $replace.call(String(s), /\"/g, '&quot;');\n}\n\nfunction isArray(obj) { return toStr(obj) === '[object Array]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isDate(obj) { return toStr(obj) === '[object Date]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isRegExp(obj) { return toStr(obj) === '[object RegExp]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isError(obj) { return toStr(obj) === '[object Error]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isString(obj) { return toStr(obj) === '[object String]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isNumber(obj) { return toStr(obj) === '[object Number]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isBoolean(obj) { return toStr(obj) === '[object Boolean]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\n\n// Symbol and BigInt do have Symbol.toStringTag by spec, so that can't be used to eliminate false positives\nfunction isSymbol(obj) {\n    if (hasShammedSymbols) {\n        return obj && typeof obj === 'object' && obj instanceof Symbol;\n    }\n    if (typeof obj === 'symbol') {\n        return true;\n    }\n    if (!obj || typeof obj !== 'object' || !symToString) {\n        return false;\n    }\n    try {\n        symToString.call(obj);\n        return true;\n    } catch (e) {}\n    return false;\n}\n\nfunction isBigInt(obj) {\n    if (!obj || typeof obj !== 'object' || !bigIntValueOf) {\n        return false;\n    }\n    try {\n        bigIntValueOf.call(obj);\n        return true;\n    } catch (e) {}\n    return false;\n}\n\nvar hasOwn = Object.prototype.hasOwnProperty || function (key) { return key in this; };\nfunction has(obj, key) {\n    return hasOwn.call(obj, key);\n}\n\nfunction toStr(obj) {\n    return objectToString.call(obj);\n}\n\nfunction nameOf(f) {\n    if (f.name) { return f.name; }\n    var m = $match.call(functionToString.call(f), /^function\\s*([\\w$]+)/);\n    if (m) { return m[1]; }\n    return null;\n}\n\nfunction indexOf(xs, x) {\n    if (xs.indexOf) { return xs.indexOf(x); }\n    for (var i = 0, l = xs.length; i < l; i++) {\n        if (xs[i] === x) { return i; }\n    }\n    return -1;\n}\n\nfunction isMap(x) {\n    if (!mapSize || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        mapSize.call(x);\n        try {\n            setSize.call(x);\n        } catch (s) {\n            return true;\n        }\n        return x instanceof Map; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isWeakMap(x) {\n    if (!weakMapHas || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        weakMapHas.call(x, weakMapHas);\n        try {\n            weakSetHas.call(x, weakSetHas);\n        } catch (s) {\n            return true;\n        }\n        return x instanceof WeakMap; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isWeakRef(x) {\n    if (!weakRefDeref || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        weakRefDeref.call(x);\n        return true;\n    } catch (e) {}\n    return false;\n}\n\nfunction isSet(x) {\n    if (!setSize || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        setSize.call(x);\n        try {\n            mapSize.call(x);\n        } catch (m) {\n            return true;\n        }\n        return x instanceof Set; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isWeakSet(x) {\n    if (!weakSetHas || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        weakSetHas.call(x, weakSetHas);\n        try {\n            weakMapHas.call(x, weakMapHas);\n        } catch (s) {\n            return true;\n        }\n        return x instanceof WeakSet; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isElement(x) {\n    if (!x || typeof x !== 'object') { return false; }\n    if (typeof HTMLElement !== 'undefined' && x instanceof HTMLElement) {\n        return true;\n    }\n    return typeof x.nodeName === 'string' && typeof x.getAttribute === 'function';\n}\n\nfunction inspectString(str, opts) {\n    if (str.length > opts.maxStringLength) {\n        var remaining = str.length - opts.maxStringLength;\n        var trailer = '... ' + remaining + ' more character' + (remaining > 1 ? 's' : '');\n        return inspectString($slice.call(str, 0, opts.maxStringLength), opts) + trailer;\n    }\n    var quoteRE = quoteREs[opts.quoteStyle || 'single'];\n    quoteRE.lastIndex = 0;\n    // eslint-disable-next-line no-control-regex\n    var s = $replace.call($replace.call(str, quoteRE, '\\\\$1'), /[\\x00-\\x1f]/g, lowbyte);\n    return wrapQuotes(s, 'single', opts);\n}\n\nfunction lowbyte(c) {\n    var n = c.charCodeAt(0);\n    var x = {\n        8: 'b',\n        9: 't',\n        10: 'n',\n        12: 'f',\n        13: 'r'\n    }[n];\n    if (x) { return '\\\\' + x; }\n    return '\\\\x' + (n < 0x10 ? '0' : '') + $toUpperCase.call(n.toString(16));\n}\n\nfunction markBoxed(str) {\n    return 'Object(' + str + ')';\n}\n\nfunction weakCollectionOf(type) {\n    return type + ' { ? }';\n}\n\nfunction collectionOf(type, size, entries, indent) {\n    var joinedEntries = indent ? indentedJoin(entries, indent) : $join.call(entries, ', ');\n    return type + ' (' + size + ') {' + joinedEntries + '}';\n}\n\nfunction singleLineValues(xs) {\n    for (var i = 0; i < xs.length; i++) {\n        if (indexOf(xs[i], '\\n') >= 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction getIndent(opts, depth) {\n    var baseIndent;\n    if (opts.indent === '\\t') {\n        baseIndent = '\\t';\n    } else if (typeof opts.indent === 'number' && opts.indent > 0) {\n        baseIndent = $join.call(Array(opts.indent + 1), ' ');\n    } else {\n        return null;\n    }\n    return {\n        base: baseIndent,\n        prev: $join.call(Array(depth + 1), baseIndent)\n    };\n}\n\nfunction indentedJoin(xs, indent) {\n    if (xs.length === 0) { return ''; }\n    var lineJoiner = '\\n' + indent.prev + indent.base;\n    return lineJoiner + $join.call(xs, ',' + lineJoiner) + '\\n' + indent.prev;\n}\n\nfunction arrObjKeys(obj, inspect) {\n    var isArr = isArray(obj);\n    var xs = [];\n    if (isArr) {\n        xs.length = obj.length;\n        for (var i = 0; i < obj.length; i++) {\n            xs[i] = has(obj, i) ? inspect(obj[i], obj) : '';\n        }\n    }\n    var syms = typeof gOPS === 'function' ? gOPS(obj) : [];\n    var symMap;\n    if (hasShammedSymbols) {\n        symMap = {};\n        for (var k = 0; k < syms.length; k++) {\n            symMap['$' + syms[k]] = syms[k];\n        }\n    }\n\n    for (var key in obj) { // eslint-disable-line no-restricted-syntax\n        if (!has(obj, key)) { continue; } // eslint-disable-line no-restricted-syntax, no-continue\n        if (isArr && String(Number(key)) === key && key < obj.length) { continue; } // eslint-disable-line no-restricted-syntax, no-continue\n        if (hasShammedSymbols && symMap['$' + key] instanceof Symbol) {\n            // this is to prevent shammed Symbols, which are stored as strings, from being included in the string key section\n            continue; // eslint-disable-line no-restricted-syntax, no-continue\n        } else if ($test.call(/[^\\w$]/, key)) {\n            xs.push(inspect(key, obj) + ': ' + inspect(obj[key], obj));\n        } else {\n            xs.push(key + ': ' + inspect(obj[key], obj));\n        }\n    }\n    if (typeof gOPS === 'function') {\n        for (var j = 0; j < syms.length; j++) {\n            if (isEnumerable.call(obj, syms[j])) {\n                xs.push('[' + inspect(syms[j]) + ']: ' + inspect(obj[syms[j]], obj));\n            }\n        }\n    }\n    return xs;\n}\n", "const DEFAULT_DELIMITER = \"/\";\nconst NOOP_VALUE = (value: string) => value;\nconst ID_START = /^[$_\\p{ID_Start}]$/u;\nconst ID_CONTINUE = /^[$\\u200c\\u200d\\p{ID_Continue}]$/u;\nconst DEBUG_URL = \"https://git.new/pathToRegexpError\";\n\n/**\n * Encode a string into another string.\n */\nexport type Encode = (value: string) => string;\n\n/**\n * Decode a string into another string.\n */\nexport type Decode = (value: string) => string;\n\nexport interface ParseOptions {\n  /**\n   * A function for encoding input strings.\n   */\n  encodePath?: Encode;\n}\n\nexport interface PathToRegexpOptions {\n  /**\n   * Matches the path completely without trailing characters. (default: `true`)\n   */\n  end?: boolean;\n  /**\n   * Allows optional trailing delimiter to match. (default: `true`)\n   */\n  trailing?: boolean;\n  /**\n   * Match will be case sensitive. (default: `false`)\n   */\n  sensitive?: boolean;\n  /**\n   * The default delimiter for segments. (default: `'/'`)\n   */\n  delimiter?: string;\n}\n\nexport interface MatchOptions extends PathToRegexpOptions {\n  /**\n   * Function for decoding strings for params, or `false` to disable entirely. (default: `decodeURIComponent`)\n   */\n  decode?: Decode | false;\n}\n\nexport interface CompileOptions {\n  /**\n   * Function for encoding input strings for output into the path, or `false` to disable entirely. (default: `encodeURIComponent`)\n   */\n  encode?: Encode | false;\n  /**\n   * The default delimiter for segments. (default: `'/'`)\n   */\n  delimiter?: string;\n}\n\ntype TokenType =\n  | \"{\"\n  | \"}\"\n  | \"WILDCARD\"\n  | \"PARAM\"\n  | \"CHAR\"\n  | \"ESCAPED\"\n  | \"END\"\n  // Reserved for use or ambiguous due to past use.\n  | \"(\"\n  | \")\"\n  | \"[\"\n  | \"]\"\n  | \"+\"\n  | \"?\"\n  | \"!\";\n\n/**\n * Tokenizer results.\n */\ninterface LexToken {\n  type: TokenType;\n  index: number;\n  value: string;\n}\n\nconst SIMPLE_TOKENS: Record<string, TokenType> = {\n  // Groups.\n  \"{\": \"{\",\n  \"}\": \"}\",\n  // Reserved.\n  \"(\": \"(\",\n  \")\": \")\",\n  \"[\": \"[\",\n  \"]\": \"]\",\n  \"+\": \"+\",\n  \"?\": \"?\",\n  \"!\": \"!\",\n};\n\n/**\n * Escape text for stringify to path.\n */\nfunction escapeText(str: string) {\n  return str.replace(/[{}()\\[\\]+?!:*]/g, \"\\\\$&\");\n}\n\n/**\n * Escape a regular expression string.\n */\nfunction escape(str: string) {\n  return str.replace(/[.+*?^${}()[\\]|/\\\\]/g, \"\\\\$&\");\n}\n\n/**\n * Tokenize input string.\n */\nfunction* lexer(str: string): Generator<LexToken, LexToken> {\n  const chars = [...str];\n  let i = 0;\n\n  function name() {\n    let value = \"\";\n\n    if (ID_START.test(chars[++i])) {\n      value += chars[i];\n      while (ID_CONTINUE.test(chars[++i])) {\n        value += chars[i];\n      }\n    } else if (chars[i] === '\"') {\n      let pos = i;\n\n      while (i < chars.length) {\n        if (chars[++i] === '\"') {\n          i++;\n          pos = 0;\n          break;\n        }\n\n        if (chars[i] === \"\\\\\") {\n          value += chars[++i];\n        } else {\n          value += chars[i];\n        }\n      }\n\n      if (pos) {\n        throw new TypeError(`Unterminated quote at ${pos}: ${DEBUG_URL}`);\n      }\n    }\n\n    if (!value) {\n      throw new TypeError(`Missing parameter name at ${i}: ${DEBUG_URL}`);\n    }\n\n    return value;\n  }\n\n  while (i < chars.length) {\n    const value = chars[i];\n    const type = SIMPLE_TOKENS[value];\n\n    if (type) {\n      yield { type, index: i++, value };\n    } else if (value === \"\\\\\") {\n      yield { type: \"ESCAPED\", index: i++, value: chars[i++] };\n    } else if (value === \":\") {\n      const value = name();\n      yield { type: \"PARAM\", index: i, value };\n    } else if (value === \"*\") {\n      const value = name();\n      yield { type: \"WILDCARD\", index: i, value };\n    } else {\n      yield { type: \"CHAR\", index: i, value: chars[i++] };\n    }\n  }\n\n  return { type: \"END\", index: i, value: \"\" };\n}\n\nclass Iter {\n  private _peek?: LexToken;\n\n  constructor(private tokens: Generator<LexToken, LexToken>) {}\n\n  peek(): LexToken {\n    if (!this._peek) {\n      const next = this.tokens.next();\n      this._peek = next.value;\n    }\n    return this._peek;\n  }\n\n  tryConsume(type: TokenType): string | undefined {\n    const token = this.peek();\n    if (token.type !== type) return;\n    this._peek = undefined; // Reset after consumed.\n    return token.value;\n  }\n\n  consume(type: TokenType): string {\n    const value = this.tryConsume(type);\n    if (value !== undefined) return value;\n    const { type: nextType, index } = this.peek();\n    throw new TypeError(\n      `Unexpected ${nextType} at ${index}, expected ${type}: ${DEBUG_URL}`,\n    );\n  }\n\n  text(): string {\n    let result = \"\";\n    let value: string | undefined;\n    while ((value = this.tryConsume(\"CHAR\") || this.tryConsume(\"ESCAPED\"))) {\n      result += value;\n    }\n    return result;\n  }\n}\n\n/**\n * Plain text.\n */\nexport interface Text {\n  type: \"text\";\n  value: string;\n}\n\n/**\n * A parameter designed to match arbitrary text within a segment.\n */\nexport interface Parameter {\n  type: \"param\";\n  name: string;\n}\n\n/**\n * A wildcard parameter designed to match multiple segments.\n */\nexport interface Wildcard {\n  type: \"wildcard\";\n  name: string;\n}\n\n/**\n * A set of possible tokens to expand when matching.\n */\nexport interface Group {\n  type: \"group\";\n  tokens: Token[];\n}\n\n/**\n * A token that corresponds with a regexp capture.\n */\nexport type Key = Parameter | Wildcard;\n\n/**\n * A sequence of `path-to-regexp` keys that match capturing groups.\n */\nexport type Keys = Array<Key>;\n\n/**\n * A sequence of path match characters.\n */\nexport type Token = Text | Parameter | Wildcard | Group;\n\n/**\n * Tokenized path instance.\n */\nexport class TokenData {\n  constructor(public readonly tokens: Token[]) {}\n}\n\n/**\n * Parse a string for the raw tokens.\n */\nexport function parse(str: string, options: ParseOptions = {}): TokenData {\n  const { encodePath = NOOP_VALUE } = options;\n  const it = new Iter(lexer(str));\n\n  function consume(endType: TokenType): Token[] {\n    const tokens: Token[] = [];\n\n    while (true) {\n      const path = it.text();\n      if (path) tokens.push({ type: \"text\", value: encodePath(path) });\n\n      const param = it.tryConsume(\"PARAM\");\n      if (param) {\n        tokens.push({\n          type: \"param\",\n          name: param,\n        });\n        continue;\n      }\n\n      const wildcard = it.tryConsume(\"WILDCARD\");\n      if (wildcard) {\n        tokens.push({\n          type: \"wildcard\",\n          name: wildcard,\n        });\n        continue;\n      }\n\n      const open = it.tryConsume(\"{\");\n      if (open) {\n        tokens.push({\n          type: \"group\",\n          tokens: consume(\"}\"),\n        });\n        continue;\n      }\n\n      it.consume(endType);\n      return tokens;\n    }\n  }\n\n  const tokens = consume(\"END\");\n  return new TokenData(tokens);\n}\n\n/**\n * Compile a string to a template function for the path.\n */\nexport function compile<P extends ParamData = ParamData>(\n  path: Path,\n  options: CompileOptions & ParseOptions = {},\n) {\n  const { encode = encodeURIComponent, delimiter = DEFAULT_DELIMITER } =\n    options;\n  const data = path instanceof TokenData ? path : parse(path, options);\n  const fn = tokensToFunction(data.tokens, delimiter, encode);\n\n  return function path(data: P = {} as P) {\n    const [path, ...missing] = fn(data);\n    if (missing.length) {\n      throw new TypeError(`Missing parameters: ${missing.join(\", \")}`);\n    }\n    return path;\n  };\n}\n\nexport type ParamData = Partial<Record<string, string | string[]>>;\nexport type PathFunction<P extends ParamData> = (data?: P) => string;\n\nfunction tokensToFunction(\n  tokens: Token[],\n  delimiter: string,\n  encode: Encode | false,\n) {\n  const encoders = tokens.map((token) =>\n    tokenToFunction(token, delimiter, encode),\n  );\n\n  return (data: ParamData) => {\n    const result: string[] = [\"\"];\n\n    for (const encoder of encoders) {\n      const [value, ...extras] = encoder(data);\n      result[0] += value;\n      result.push(...extras);\n    }\n\n    return result;\n  };\n}\n\n/**\n * Convert a single token into a path building function.\n */\nfunction tokenToFunction(\n  token: Token,\n  delimiter: string,\n  encode: Encode | false,\n): (data: ParamData) => string[] {\n  if (token.type === \"text\") return () => [token.value];\n\n  if (token.type === \"group\") {\n    const fn = tokensToFunction(token.tokens, delimiter, encode);\n\n    return (data) => {\n      const [value, ...missing] = fn(data);\n      if (!missing.length) return [value];\n      return [\"\"];\n    };\n  }\n\n  const encodeValue = encode || NOOP_VALUE;\n\n  if (token.type === \"wildcard\" && encode !== false) {\n    return (data) => {\n      const value = data[token.name];\n      if (value == null) return [\"\", token.name];\n\n      if (!Array.isArray(value) || value.length === 0) {\n        throw new TypeError(`Expected \"${token.name}\" to be a non-empty array`);\n      }\n\n      return [\n        value\n          .map((value, index) => {\n            if (typeof value !== \"string\") {\n              throw new TypeError(\n                `Expected \"${token.name}/${index}\" to be a string`,\n              );\n            }\n\n            return encodeValue(value);\n          })\n          .join(delimiter),\n      ];\n    };\n  }\n\n  return (data) => {\n    const value = data[token.name];\n    if (value == null) return [\"\", token.name];\n\n    if (typeof value !== \"string\") {\n      throw new TypeError(`Expected \"${token.name}\" to be a string`);\n    }\n\n    return [encodeValue(value)];\n  };\n}\n\n/**\n * A match result contains data about the path match.\n */\nexport interface MatchResult<P extends ParamData> {\n  path: string;\n  params: P;\n}\n\n/**\n * A match is either `false` (no match) or a match result.\n */\nexport type Match<P extends ParamData> = false | MatchResult<P>;\n\n/**\n * The match function takes a string and returns whether it matched the path.\n */\nexport type MatchFunction<P extends ParamData> = (path: string) => Match<P>;\n\n/**\n * Supported path types.\n */\nexport type Path = string | TokenData;\n\n/**\n * Transform a path into a match function.\n */\nexport function match<P extends ParamData>(\n  path: Path | Path[],\n  options: MatchOptions & ParseOptions = {},\n): MatchFunction<P> {\n  const { decode = decodeURIComponent, delimiter = DEFAULT_DELIMITER } =\n    options;\n  const { regexp, keys } = pathToRegexp(path, options);\n\n  const decoders = keys.map((key) => {\n    if (decode === false) return NOOP_VALUE;\n    if (key.type === \"param\") return decode;\n    return (value: string) => value.split(delimiter).map(decode);\n  });\n\n  return function match(input: string) {\n    const m = regexp.exec(input);\n    if (!m) return false;\n\n    const path = m[0];\n    const params = Object.create(null);\n\n    for (let i = 1; i < m.length; i++) {\n      if (m[i] === undefined) continue;\n\n      const key = keys[i - 1];\n      const decoder = decoders[i - 1];\n      params[key.name] = decoder(m[i]);\n    }\n\n    return { path, params };\n  };\n}\n\nexport function pathToRegexp(\n  path: Path | Path[],\n  options: PathToRegexpOptions & ParseOptions = {},\n) {\n  const {\n    delimiter = DEFAULT_DELIMITER,\n    end = true,\n    sensitive = false,\n    trailing = true,\n  } = options;\n  const keys: Keys = [];\n  const sources: string[] = [];\n  const flags = sensitive ? \"\" : \"i\";\n  const paths = Array.isArray(path) ? path : [path];\n  const items = paths.map((path) =>\n    path instanceof TokenData ? path : parse(path, options),\n  );\n\n  for (const { tokens } of items) {\n    for (const seq of flatten(tokens, 0, [])) {\n      const regexp = sequenceToRegExp(seq, delimiter, keys);\n      sources.push(regexp);\n    }\n  }\n\n  let pattern = `^(?:${sources.join(\"|\")})`;\n  if (trailing) pattern += `(?:${escape(delimiter)}$)?`;\n  pattern += end ? \"$\" : `(?=${escape(delimiter)}|$)`;\n\n  const regexp = new RegExp(pattern, flags);\n  return { regexp, keys };\n}\n\n/**\n * Flattened token set.\n */\ntype Flattened = Text | Parameter | Wildcard;\n\n/**\n * Generate a flat list of sequence tokens from the given tokens.\n */\nfunction* flatten(\n  tokens: Token[],\n  index: number,\n  init: Flattened[],\n): Generator<Flattened[]> {\n  if (index === tokens.length) {\n    return yield init;\n  }\n\n  const token = tokens[index];\n\n  if (token.type === \"group\") {\n    const fork = init.slice();\n    for (const seq of flatten(token.tokens, 0, fork)) {\n      yield* flatten(tokens, index + 1, seq);\n    }\n  } else {\n    init.push(token);\n  }\n\n  yield* flatten(tokens, index + 1, init);\n}\n\n/**\n * Transform a flat sequence of tokens into a regular expression.\n */\nfunction sequenceToRegExp(tokens: Flattened[], delimiter: string, keys: Keys) {\n  let result = \"\";\n  let backtrack = \"\";\n  let isSafeSegmentParam = true;\n\n  for (let i = 0; i < tokens.length; i++) {\n    const token = tokens[i];\n\n    if (token.type === \"text\") {\n      result += escape(token.value);\n      backtrack += token.value;\n      isSafeSegmentParam ||= token.value.includes(delimiter);\n      continue;\n    }\n\n    if (token.type === \"param\" || token.type === \"wildcard\") {\n      if (!isSafeSegmentParam && !backtrack) {\n        throw new TypeError(`Missing text after \"${token.name}\": ${DEBUG_URL}`);\n      }\n\n      if (token.type === \"param\") {\n        result += `(${negate(delimiter, isSafeSegmentParam ? \"\" : backtrack)}+)`;\n      } else {\n        result += `([\\\\s\\\\S]+)`;\n      }\n\n      keys.push(token);\n      backtrack = \"\";\n      isSafeSegmentParam = false;\n      continue;\n    }\n  }\n\n  return result;\n}\n\nfunction negate(delimiter: string, backtrack: string) {\n  if (backtrack.length < 2) {\n    if (delimiter.length < 2) return `[^${escape(delimiter + backtrack)}]`;\n    return `(?:(?!${escape(delimiter)})[^${escape(backtrack)}])`;\n  }\n  if (delimiter.length < 2) {\n    return `(?:(?!${escape(backtrack)})[^${escape(delimiter)}])`;\n  }\n  return `(?:(?!${escape(backtrack)}|${escape(delimiter)})[\\\\s\\\\S])`;\n}\n\n/**\n * Stringify token data into a path string.\n */\nexport function stringify(data: TokenData) {\n  return data.tokens\n    .map(function stringifyToken(token, index, tokens): string {\n      if (token.type === \"text\") return escapeText(token.value);\n      if (token.type === \"group\") {\n        return `{${token.tokens.map(stringifyToken).join(\"\")}}`;\n      }\n\n      const isSafe =\n        isNameSafe(token.name) && isNextNameSafe(tokens[index + 1]);\n      const key = isSafe ? token.name : JSON.stringify(token.name);\n\n      if (token.type === \"param\") return `:${key}`;\n      if (token.type === \"wildcard\") return `*${key}`;\n      throw new TypeError(`Unexpected token: ${token}`);\n    })\n    .join(\"\");\n}\n\nfunction isNameSafe(name: string) {\n  const [first, ...rest] = name;\n  if (!ID_START.test(first)) return false;\n  return rest.every((char) => ID_CONTINUE.test(char));\n}\n\nfunction isNextNameSafe(token: Token | undefined) {\n  if (token?.type !== \"text\") return true;\n  return !ID_CONTINUE.test(token.value[0]);\n}\n", "{\n  \"application/1d-interleaved-parityfec\": {\n    \"source\": \"iana\"\n  },\n  \"application/3gpdash-qoe-report+xml\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"compressible\": true\n  },\n  \"application/3gpp-ims+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/3gpphal+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/3gpphalforms+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/a2l\": {\n    \"source\": \"iana\"\n  },\n  \"application/ace+cbor\": {\n    \"source\": \"iana\"\n  },\n  \"application/ace+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/ace-groupcomm+cbor\": {\n    \"source\": \"iana\"\n  },\n  \"application/activemessage\": {\n    \"source\": \"iana\"\n  },\n  \"application/activity+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/aif+cbor\": {\n    \"source\": \"iana\"\n  },\n  \"application/aif+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/alto-cdni+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/alto-cdnifilter+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/alto-costmap+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/alto-costmapfilter+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/alto-directory+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/alto-endpointcost+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/alto-endpointcostparams+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/alto-endpointprop+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/alto-endpointpropparams+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/alto-error+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/alto-networkmap+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/alto-networkmapfilter+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/alto-propmap+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/alto-propmapparams+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/alto-tips+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/alto-tipsparams+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/alto-updatestreamcontrol+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/alto-updatestreamparams+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/aml\": {\n    \"source\": \"iana\"\n  },\n  \"application/andrew-inset\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ez\"]\n  },\n  \"application/appinstaller\": {\n    \"compressible\": false,\n    \"extensions\": [\"appinstaller\"]\n  },\n  \"application/applefile\": {\n    \"source\": \"iana\"\n  },\n  \"application/applixware\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"aw\"]\n  },\n  \"application/appx\": {\n    \"compressible\": false,\n    \"extensions\": [\"appx\"]\n  },\n  \"application/appxbundle\": {\n    \"compressible\": false,\n    \"extensions\": [\"appxbundle\"]\n  },\n  \"application/at+jwt\": {\n    \"source\": \"iana\"\n  },\n  \"application/atf\": {\n    \"source\": \"iana\"\n  },\n  \"application/atfx\": {\n    \"source\": \"iana\"\n  },\n  \"application/atom+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"atom\"]\n  },\n  \"application/atomcat+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"atomcat\"]\n  },\n  \"application/atomdeleted+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"atomdeleted\"]\n  },\n  \"application/atomicmail\": {\n    \"source\": \"iana\"\n  },\n  \"application/atomsvc+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"atomsvc\"]\n  },\n  \"application/atsc-dwd+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"dwd\"]\n  },\n  \"application/atsc-dynamic-event-message\": {\n    \"source\": \"iana\"\n  },\n  \"application/atsc-held+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"held\"]\n  },\n  \"application/atsc-rdt+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/atsc-rsat+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"rsat\"]\n  },\n  \"application/atxml\": {\n    \"source\": \"iana\"\n  },\n  \"application/auth-policy+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/automationml-aml+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"aml\"]\n  },\n  \"application/automationml-amlx+zip\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"amlx\"]\n  },\n  \"application/bacnet-xdd+zip\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"application/batch-smtp\": {\n    \"source\": \"iana\"\n  },\n  \"application/bdoc\": {\n    \"compressible\": false,\n    \"extensions\": [\"bdoc\"]\n  },\n  \"application/beep+xml\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"compressible\": true\n  },\n  \"application/bufr\": {\n    \"source\": \"iana\"\n  },\n  \"application/c2pa\": {\n    \"source\": \"iana\"\n  },\n  \"application/calendar+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/calendar+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"xcs\"]\n  },\n  \"application/call-completion\": {\n    \"source\": \"iana\"\n  },\n  \"application/cals-1840\": {\n    \"source\": \"iana\"\n  },\n  \"application/captive+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/cbor\": {\n    \"source\": \"iana\"\n  },\n  \"application/cbor-seq\": {\n    \"source\": \"iana\"\n  },\n  \"application/cccex\": {\n    \"source\": \"iana\"\n  },\n  \"application/ccmp+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/ccxml+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"ccxml\"]\n  },\n  \"application/cda+xml\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"compressible\": true\n  },\n  \"application/cdfx+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"cdfx\"]\n  },\n  \"application/cdmi-capability\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"cdmia\"]\n  },\n  \"application/cdmi-container\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"cdmic\"]\n  },\n  \"application/cdmi-domain\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"cdmid\"]\n  },\n  \"application/cdmi-object\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"cdmio\"]\n  },\n  \"application/cdmi-queue\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"cdmiq\"]\n  },\n  \"application/cdni\": {\n    \"source\": \"iana\"\n  },\n  \"application/cea\": {\n    \"source\": \"iana\"\n  },\n  \"application/cea-2018+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/cellml+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/cfw\": {\n    \"source\": \"iana\"\n  },\n  \"application/cid-edhoc+cbor-seq\": {\n    \"source\": \"iana\"\n  },\n  \"application/city+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/clr\": {\n    \"source\": \"iana\"\n  },\n  \"application/clue+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/clue_info+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/cms\": {\n    \"source\": \"iana\"\n  },\n  \"application/cnrp+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/coap-group+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/coap-payload\": {\n    \"source\": \"iana\"\n  },\n  \"application/commonground\": {\n    \"source\": \"iana\"\n  },\n  \"application/concise-problem-details+cbor\": {\n    \"source\": \"iana\"\n  },\n  \"application/conference-info+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/cose\": {\n    \"source\": \"iana\"\n  },\n  \"application/cose-key\": {\n    \"source\": \"iana\"\n  },\n  \"application/cose-key-set\": {\n    \"source\": \"iana\"\n  },\n  \"application/cose-x509\": {\n    \"source\": \"iana\"\n  },\n  \"application/cpl+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"cpl\"]\n  },\n  \"application/csrattrs\": {\n    \"source\": \"iana\"\n  },\n  \"application/csta+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/cstadata+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/csvm+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/cu-seeme\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"cu\"]\n  },\n  \"application/cwl\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"cwl\"]\n  },\n  \"application/cwl+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/cwl+yaml\": {\n    \"source\": \"iana\"\n  },\n  \"application/cwt\": {\n    \"source\": \"iana\"\n  },\n  \"application/cybercash\": {\n    \"source\": \"iana\"\n  },\n  \"application/dart\": {\n    \"compressible\": true\n  },\n  \"application/dash+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"mpd\"]\n  },\n  \"application/dash-patch+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"mpp\"]\n  },\n  \"application/dashdelta\": {\n    \"source\": \"iana\"\n  },\n  \"application/davmount+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"davmount\"]\n  },\n  \"application/dca-rft\": {\n    \"source\": \"iana\"\n  },\n  \"application/dcd\": {\n    \"source\": \"iana\"\n  },\n  \"application/dec-dx\": {\n    \"source\": \"iana\"\n  },\n  \"application/dialog-info+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/dicom\": {\n    \"source\": \"iana\"\n  },\n  \"application/dicom+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/dicom+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/dii\": {\n    \"source\": \"iana\"\n  },\n  \"application/dit\": {\n    \"source\": \"iana\"\n  },\n  \"application/dns\": {\n    \"source\": \"iana\"\n  },\n  \"application/dns+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/dns-message\": {\n    \"source\": \"iana\"\n  },\n  \"application/docbook+xml\": {\n    \"source\": \"apache\",\n    \"compressible\": true,\n    \"extensions\": [\"dbk\"]\n  },\n  \"application/dots+cbor\": {\n    \"source\": \"iana\"\n  },\n  \"application/dpop+jwt\": {\n    \"source\": \"iana\"\n  },\n  \"application/dskpp+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/dssc+der\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"dssc\"]\n  },\n  \"application/dssc+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"xdssc\"]\n  },\n  \"application/dvcs\": {\n    \"source\": \"iana\"\n  },\n  \"application/ecmascript\": {\n    \"source\": \"apache\",\n    \"compressible\": true,\n    \"extensions\": [\"ecma\"]\n  },\n  \"application/edhoc+cbor-seq\": {\n    \"source\": \"iana\"\n  },\n  \"application/edi-consent\": {\n    \"source\": \"iana\"\n  },\n  \"application/edi-x12\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"application/edifact\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"application/efi\": {\n    \"source\": \"iana\"\n  },\n  \"application/elm+json\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"compressible\": true\n  },\n  \"application/elm+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/emergencycalldata.cap+xml\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"compressible\": true\n  },\n  \"application/emergencycalldata.comment+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/emergencycalldata.control+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/emergencycalldata.deviceinfo+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/emergencycalldata.ecall.msd\": {\n    \"source\": \"iana\"\n  },\n  \"application/emergencycalldata.legacyesn+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/emergencycalldata.providerinfo+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/emergencycalldata.serviceinfo+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/emergencycalldata.subscriberinfo+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/emergencycalldata.veds+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/emma+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"emma\"]\n  },\n  \"application/emotionml+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"emotionml\"]\n  },\n  \"application/encaprtp\": {\n    \"source\": \"iana\"\n  },\n  \"application/epp+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/epub+zip\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"epub\"]\n  },\n  \"application/eshop\": {\n    \"source\": \"iana\"\n  },\n  \"application/exi\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"exi\"]\n  },\n  \"application/expect-ct-report+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/express\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"exp\"]\n  },\n  \"application/fastinfoset\": {\n    \"source\": \"iana\"\n  },\n  \"application/fastsoap\": {\n    \"source\": \"iana\"\n  },\n  \"application/fdf\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"fdf\"]\n  },\n  \"application/fdt+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"fdt\"]\n  },\n  \"application/fhir+json\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"compressible\": true\n  },\n  \"application/fhir+xml\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"compressible\": true\n  },\n  \"application/fido.trusted-apps+json\": {\n    \"compressible\": true\n  },\n  \"application/fits\": {\n    \"source\": \"iana\"\n  },\n  \"application/flexfec\": {\n    \"source\": \"iana\"\n  },\n  \"application/font-sfnt\": {\n    \"source\": \"iana\"\n  },\n  \"application/font-tdpfr\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"pfr\"]\n  },\n  \"application/font-woff\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"application/framework-attributes+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/geo+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"geojson\"]\n  },\n  \"application/geo+json-seq\": {\n    \"source\": \"iana\"\n  },\n  \"application/geopackage+sqlite3\": {\n    \"source\": \"iana\"\n  },\n  \"application/geoxacml+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/geoxacml+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/gltf-buffer\": {\n    \"source\": \"iana\"\n  },\n  \"application/gml+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"gml\"]\n  },\n  \"application/gnap-binding-jws\": {\n    \"source\": \"iana\"\n  },\n  \"application/gnap-binding-jwsd\": {\n    \"source\": \"iana\"\n  },\n  \"application/gnap-binding-rotation-jws\": {\n    \"source\": \"iana\"\n  },\n  \"application/gnap-binding-rotation-jwsd\": {\n    \"source\": \"iana\"\n  },\n  \"application/gpx+xml\": {\n    \"source\": \"apache\",\n    \"compressible\": true,\n    \"extensions\": [\"gpx\"]\n  },\n  \"application/grib\": {\n    \"source\": \"iana\"\n  },\n  \"application/gxf\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"gxf\"]\n  },\n  \"application/gzip\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"gz\"]\n  },\n  \"application/h224\": {\n    \"source\": \"iana\"\n  },\n  \"application/held+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/hjson\": {\n    \"extensions\": [\"hjson\"]\n  },\n  \"application/hl7v2+xml\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"compressible\": true\n  },\n  \"application/http\": {\n    \"source\": \"iana\"\n  },\n  \"application/hyperstudio\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"stk\"]\n  },\n  \"application/ibe-key-request+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/ibe-pkg-reply+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/ibe-pp-data\": {\n    \"source\": \"iana\"\n  },\n  \"application/iges\": {\n    \"source\": \"iana\"\n  },\n  \"application/im-iscomposing+xml\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"compressible\": true\n  },\n  \"application/index\": {\n    \"source\": \"iana\"\n  },\n  \"application/index.cmd\": {\n    \"source\": \"iana\"\n  },\n  \"application/index.obj\": {\n    \"source\": \"iana\"\n  },\n  \"application/index.response\": {\n    \"source\": \"iana\"\n  },\n  \"application/index.vnd\": {\n    \"source\": \"iana\"\n  },\n  \"application/inkml+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"ink\",\"inkml\"]\n  },\n  \"application/iotp\": {\n    \"source\": \"iana\"\n  },\n  \"application/ipfix\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ipfix\"]\n  },\n  \"application/ipp\": {\n    \"source\": \"iana\"\n  },\n  \"application/isup\": {\n    \"source\": \"iana\"\n  },\n  \"application/its+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"its\"]\n  },\n  \"application/java-archive\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"jar\",\"war\",\"ear\"]\n  },\n  \"application/java-serialized-object\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"ser\"]\n  },\n  \"application/java-vm\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"class\"]\n  },\n  \"application/javascript\": {\n    \"source\": \"apache\",\n    \"charset\": \"UTF-8\",\n    \"compressible\": true,\n    \"extensions\": [\"js\"]\n  },\n  \"application/jf2feed+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/jose\": {\n    \"source\": \"iana\"\n  },\n  \"application/jose+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/jrd+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/jscalendar+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/jscontact+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/json\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"compressible\": true,\n    \"extensions\": [\"json\",\"map\"]\n  },\n  \"application/json-patch+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/json-seq\": {\n    \"source\": \"iana\"\n  },\n  \"application/json5\": {\n    \"extensions\": [\"json5\"]\n  },\n  \"application/jsonml+json\": {\n    \"source\": \"apache\",\n    \"compressible\": true,\n    \"extensions\": [\"jsonml\"]\n  },\n  \"application/jsonpath\": {\n    \"source\": \"iana\"\n  },\n  \"application/jwk+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/jwk-set+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/jwt\": {\n    \"source\": \"iana\"\n  },\n  \"application/kpml-request+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/kpml-response+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/ld+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"jsonld\"]\n  },\n  \"application/lgr+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"lgr\"]\n  },\n  \"application/link-format\": {\n    \"source\": \"iana\"\n  },\n  \"application/linkset\": {\n    \"source\": \"iana\"\n  },\n  \"application/linkset+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/load-control+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/logout+jwt\": {\n    \"source\": \"iana\"\n  },\n  \"application/lost+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"lostxml\"]\n  },\n  \"application/lostsync+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/lpf+zip\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"application/lxf\": {\n    \"source\": \"iana\"\n  },\n  \"application/mac-binhex40\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"hqx\"]\n  },\n  \"application/mac-compactpro\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"cpt\"]\n  },\n  \"application/macwriteii\": {\n    \"source\": \"iana\"\n  },\n  \"application/mads+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"mads\"]\n  },\n  \"application/manifest+json\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"compressible\": true,\n    \"extensions\": [\"webmanifest\"]\n  },\n  \"application/marc\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mrc\"]\n  },\n  \"application/marcxml+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"mrcx\"]\n  },\n  \"application/mathematica\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ma\",\"nb\",\"mb\"]\n  },\n  \"application/mathml+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"mathml\"]\n  },\n  \"application/mathml-content+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/mathml-presentation+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/mbms-associated-procedure-description+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/mbms-deregister+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/mbms-envelope+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/mbms-msk+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/mbms-msk-response+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/mbms-protection-description+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/mbms-reception-report+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/mbms-register+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/mbms-register-response+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/mbms-schedule+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/mbms-user-service-description+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/mbox\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mbox\"]\n  },\n  \"application/media-policy-dataset+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"mpf\"]\n  },\n  \"application/media_control+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/mediaservercontrol+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"mscml\"]\n  },\n  \"application/merge-patch+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/metalink+xml\": {\n    \"source\": \"apache\",\n    \"compressible\": true,\n    \"extensions\": [\"metalink\"]\n  },\n  \"application/metalink4+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"meta4\"]\n  },\n  \"application/mets+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"mets\"]\n  },\n  \"application/mf4\": {\n    \"source\": \"iana\"\n  },\n  \"application/mikey\": {\n    \"source\": \"iana\"\n  },\n  \"application/mipc\": {\n    \"source\": \"iana\"\n  },\n  \"application/missing-blocks+cbor-seq\": {\n    \"source\": \"iana\"\n  },\n  \"application/mmt-aei+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"maei\"]\n  },\n  \"application/mmt-usd+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"musd\"]\n  },\n  \"application/mods+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"mods\"]\n  },\n  \"application/moss-keys\": {\n    \"source\": \"iana\"\n  },\n  \"application/moss-signature\": {\n    \"source\": \"iana\"\n  },\n  \"application/mosskey-data\": {\n    \"source\": \"iana\"\n  },\n  \"application/mosskey-request\": {\n    \"source\": \"iana\"\n  },\n  \"application/mp21\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"m21\",\"mp21\"]\n  },\n  \"application/mp4\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mp4\",\"mpg4\",\"mp4s\",\"m4p\"]\n  },\n  \"application/mpeg4-generic\": {\n    \"source\": \"iana\"\n  },\n  \"application/mpeg4-iod\": {\n    \"source\": \"iana\"\n  },\n  \"application/mpeg4-iod-xmt\": {\n    \"source\": \"iana\"\n  },\n  \"application/mrb-consumer+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/mrb-publish+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/msc-ivr+xml\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"compressible\": true\n  },\n  \"application/msc-mixer+xml\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"compressible\": true\n  },\n  \"application/msix\": {\n    \"compressible\": false,\n    \"extensions\": [\"msix\"]\n  },\n  \"application/msixbundle\": {\n    \"compressible\": false,\n    \"extensions\": [\"msixbundle\"]\n  },\n  \"application/msword\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"doc\",\"dot\"]\n  },\n  \"application/mud+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/multipart-core\": {\n    \"source\": \"iana\"\n  },\n  \"application/mxf\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mxf\"]\n  },\n  \"application/n-quads\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"nq\"]\n  },\n  \"application/n-triples\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"nt\"]\n  },\n  \"application/nasdata\": {\n    \"source\": \"iana\"\n  },\n  \"application/news-checkgroups\": {\n    \"source\": \"iana\",\n    \"charset\": \"US-ASCII\"\n  },\n  \"application/news-groupinfo\": {\n    \"source\": \"iana\",\n    \"charset\": \"US-ASCII\"\n  },\n  \"application/news-transmission\": {\n    \"source\": \"iana\"\n  },\n  \"application/nlsml+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/node\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"cjs\"]\n  },\n  \"application/nss\": {\n    \"source\": \"iana\"\n  },\n  \"application/oauth-authz-req+jwt\": {\n    \"source\": \"iana\"\n  },\n  \"application/oblivious-dns-message\": {\n    \"source\": \"iana\"\n  },\n  \"application/ocsp-request\": {\n    \"source\": \"iana\"\n  },\n  \"application/ocsp-response\": {\n    \"source\": \"iana\"\n  },\n  \"application/octet-stream\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"bin\",\"dms\",\"lrf\",\"mar\",\"so\",\"dist\",\"distz\",\"pkg\",\"bpk\",\"dump\",\"elc\",\"deploy\",\"exe\",\"dll\",\"deb\",\"dmg\",\"iso\",\"img\",\"msi\",\"msp\",\"msm\",\"buffer\"]\n  },\n  \"application/oda\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"oda\"]\n  },\n  \"application/odm+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/odx\": {\n    \"source\": \"iana\"\n  },\n  \"application/oebps-package+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"opf\"]\n  },\n  \"application/ogg\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"ogx\"]\n  },\n  \"application/ohttp-keys\": {\n    \"source\": \"iana\"\n  },\n  \"application/omdoc+xml\": {\n    \"source\": \"apache\",\n    \"compressible\": true,\n    \"extensions\": [\"omdoc\"]\n  },\n  \"application/onenote\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"onetoc\",\"onetoc2\",\"onetmp\",\"onepkg\"]\n  },\n  \"application/opc-nodeset+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/oscore\": {\n    \"source\": \"iana\"\n  },\n  \"application/oxps\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"oxps\"]\n  },\n  \"application/p21\": {\n    \"source\": \"iana\"\n  },\n  \"application/p21+zip\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"application/p2p-overlay+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"relo\"]\n  },\n  \"application/parityfec\": {\n    \"source\": \"iana\"\n  },\n  \"application/passport\": {\n    \"source\": \"iana\"\n  },\n  \"application/patch-ops-error+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"xer\"]\n  },\n  \"application/pdf\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"pdf\"]\n  },\n  \"application/pdx\": {\n    \"source\": \"iana\"\n  },\n  \"application/pem-certificate-chain\": {\n    \"source\": \"iana\"\n  },\n  \"application/pgp-encrypted\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"pgp\"]\n  },\n  \"application/pgp-keys\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"asc\"]\n  },\n  \"application/pgp-signature\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"sig\",\"asc\"]\n  },\n  \"application/pics-rules\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"prf\"]\n  },\n  \"application/pidf+xml\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"compressible\": true\n  },\n  \"application/pidf-diff+xml\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"compressible\": true\n  },\n  \"application/pkcs10\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"p10\"]\n  },\n  \"application/pkcs12\": {\n    \"source\": \"iana\"\n  },\n  \"application/pkcs7-mime\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"p7m\",\"p7c\"]\n  },\n  \"application/pkcs7-signature\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"p7s\"]\n  },\n  \"application/pkcs8\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"p8\"]\n  },\n  \"application/pkcs8-encrypted\": {\n    \"source\": \"iana\"\n  },\n  \"application/pkix-attr-cert\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ac\"]\n  },\n  \"application/pkix-cert\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"cer\"]\n  },\n  \"application/pkix-crl\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"crl\"]\n  },\n  \"application/pkix-pkipath\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"pkipath\"]\n  },\n  \"application/pkixcmp\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"pki\"]\n  },\n  \"application/pls+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"pls\"]\n  },\n  \"application/poc-settings+xml\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"compressible\": true\n  },\n  \"application/postscript\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"ai\",\"eps\",\"ps\"]\n  },\n  \"application/ppsp-tracker+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/private-token-issuer-directory\": {\n    \"source\": \"iana\"\n  },\n  \"application/private-token-request\": {\n    \"source\": \"iana\"\n  },\n  \"application/private-token-response\": {\n    \"source\": \"iana\"\n  },\n  \"application/problem+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/problem+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/provenance+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"provx\"]\n  },\n  \"application/prs.alvestrand.titrax-sheet\": {\n    \"source\": \"iana\"\n  },\n  \"application/prs.cww\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"cww\"]\n  },\n  \"application/prs.cyn\": {\n    \"source\": \"iana\",\n    \"charset\": \"7-BIT\"\n  },\n  \"application/prs.hpub+zip\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"application/prs.implied-document+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/prs.implied-executable\": {\n    \"source\": \"iana\"\n  },\n  \"application/prs.implied-object+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/prs.implied-object+json-seq\": {\n    \"source\": \"iana\"\n  },\n  \"application/prs.implied-object+yaml\": {\n    \"source\": \"iana\"\n  },\n  \"application/prs.implied-structure\": {\n    \"source\": \"iana\"\n  },\n  \"application/prs.nprend\": {\n    \"source\": \"iana\"\n  },\n  \"application/prs.plucker\": {\n    \"source\": \"iana\"\n  },\n  \"application/prs.rdf-xml-crypt\": {\n    \"source\": \"iana\"\n  },\n  \"application/prs.vcfbzip2\": {\n    \"source\": \"iana\"\n  },\n  \"application/prs.xsf+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"xsf\"]\n  },\n  \"application/pskc+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"pskcxml\"]\n  },\n  \"application/pvd+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/qsig\": {\n    \"source\": \"iana\"\n  },\n  \"application/raml+yaml\": {\n    \"compressible\": true,\n    \"extensions\": [\"raml\"]\n  },\n  \"application/raptorfec\": {\n    \"source\": \"iana\"\n  },\n  \"application/rdap+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/rdf+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"rdf\",\"owl\"]\n  },\n  \"application/reginfo+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"rif\"]\n  },\n  \"application/relax-ng-compact-syntax\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"rnc\"]\n  },\n  \"application/remote-printing\": {\n    \"source\": \"apache\"\n  },\n  \"application/reputon+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/resource-lists+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"rl\"]\n  },\n  \"application/resource-lists-diff+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"rld\"]\n  },\n  \"application/rfc+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/riscos\": {\n    \"source\": \"iana\"\n  },\n  \"application/rlmi+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/rls-services+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"rs\"]\n  },\n  \"application/route-apd+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"rapd\"]\n  },\n  \"application/route-s-tsid+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"sls\"]\n  },\n  \"application/route-usd+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"rusd\"]\n  },\n  \"application/rpki-checklist\": {\n    \"source\": \"iana\"\n  },\n  \"application/rpki-ghostbusters\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"gbr\"]\n  },\n  \"application/rpki-manifest\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mft\"]\n  },\n  \"application/rpki-publication\": {\n    \"source\": \"iana\"\n  },\n  \"application/rpki-roa\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"roa\"]\n  },\n  \"application/rpki-signed-tal\": {\n    \"source\": \"iana\"\n  },\n  \"application/rpki-updown\": {\n    \"source\": \"iana\"\n  },\n  \"application/rsd+xml\": {\n    \"source\": \"apache\",\n    \"compressible\": true,\n    \"extensions\": [\"rsd\"]\n  },\n  \"application/rss+xml\": {\n    \"source\": \"apache\",\n    \"compressible\": true,\n    \"extensions\": [\"rss\"]\n  },\n  \"application/rtf\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"rtf\"]\n  },\n  \"application/rtploopback\": {\n    \"source\": \"iana\"\n  },\n  \"application/rtx\": {\n    \"source\": \"iana\"\n  },\n  \"application/samlassertion+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/samlmetadata+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/sarif+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/sarif-external-properties+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/sbe\": {\n    \"source\": \"iana\"\n  },\n  \"application/sbml+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"sbml\"]\n  },\n  \"application/scaip+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/scim+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/scvp-cv-request\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"scq\"]\n  },\n  \"application/scvp-cv-response\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"scs\"]\n  },\n  \"application/scvp-vp-request\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"spq\"]\n  },\n  \"application/scvp-vp-response\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"spp\"]\n  },\n  \"application/sdp\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"sdp\"]\n  },\n  \"application/secevent+jwt\": {\n    \"source\": \"iana\"\n  },\n  \"application/senml+cbor\": {\n    \"source\": \"iana\"\n  },\n  \"application/senml+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/senml+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"senmlx\"]\n  },\n  \"application/senml-etch+cbor\": {\n    \"source\": \"iana\"\n  },\n  \"application/senml-etch+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/senml-exi\": {\n    \"source\": \"iana\"\n  },\n  \"application/sensml+cbor\": {\n    \"source\": \"iana\"\n  },\n  \"application/sensml+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/sensml+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"sensmlx\"]\n  },\n  \"application/sensml-exi\": {\n    \"source\": \"iana\"\n  },\n  \"application/sep+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/sep-exi\": {\n    \"source\": \"iana\"\n  },\n  \"application/session-info\": {\n    \"source\": \"iana\"\n  },\n  \"application/set-payment\": {\n    \"source\": \"iana\"\n  },\n  \"application/set-payment-initiation\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"setpay\"]\n  },\n  \"application/set-registration\": {\n    \"source\": \"iana\"\n  },\n  \"application/set-registration-initiation\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"setreg\"]\n  },\n  \"application/sgml\": {\n    \"source\": \"iana\"\n  },\n  \"application/sgml-open-catalog\": {\n    \"source\": \"iana\"\n  },\n  \"application/shf+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"shf\"]\n  },\n  \"application/sieve\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"siv\",\"sieve\"]\n  },\n  \"application/simple-filter+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/simple-message-summary\": {\n    \"source\": \"iana\"\n  },\n  \"application/simplesymbolcontainer\": {\n    \"source\": \"iana\"\n  },\n  \"application/sipc\": {\n    \"source\": \"iana\"\n  },\n  \"application/slate\": {\n    \"source\": \"iana\"\n  },\n  \"application/smil\": {\n    \"source\": \"apache\"\n  },\n  \"application/smil+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"smi\",\"smil\"]\n  },\n  \"application/smpte336m\": {\n    \"source\": \"iana\"\n  },\n  \"application/soap+fastinfoset\": {\n    \"source\": \"iana\"\n  },\n  \"application/soap+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/sparql-query\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"rq\"]\n  },\n  \"application/sparql-results+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"srx\"]\n  },\n  \"application/spdx+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/spirits-event+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/sql\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"sql\"]\n  },\n  \"application/srgs\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"gram\"]\n  },\n  \"application/srgs+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"grxml\"]\n  },\n  \"application/sru+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"sru\"]\n  },\n  \"application/ssdl+xml\": {\n    \"source\": \"apache\",\n    \"compressible\": true,\n    \"extensions\": [\"ssdl\"]\n  },\n  \"application/ssml+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"ssml\"]\n  },\n  \"application/st2110-41\": {\n    \"source\": \"iana\"\n  },\n  \"application/stix+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/stratum\": {\n    \"source\": \"iana\"\n  },\n  \"application/swid+cbor\": {\n    \"source\": \"iana\"\n  },\n  \"application/swid+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"swidtag\"]\n  },\n  \"application/tamp-apex-update\": {\n    \"source\": \"iana\"\n  },\n  \"application/tamp-apex-update-confirm\": {\n    \"source\": \"iana\"\n  },\n  \"application/tamp-community-update\": {\n    \"source\": \"iana\"\n  },\n  \"application/tamp-community-update-confirm\": {\n    \"source\": \"iana\"\n  },\n  \"application/tamp-error\": {\n    \"source\": \"iana\"\n  },\n  \"application/tamp-sequence-adjust\": {\n    \"source\": \"iana\"\n  },\n  \"application/tamp-sequence-adjust-confirm\": {\n    \"source\": \"iana\"\n  },\n  \"application/tamp-status-query\": {\n    \"source\": \"iana\"\n  },\n  \"application/tamp-status-response\": {\n    \"source\": \"iana\"\n  },\n  \"application/tamp-update\": {\n    \"source\": \"iana\"\n  },\n  \"application/tamp-update-confirm\": {\n    \"source\": \"iana\"\n  },\n  \"application/tar\": {\n    \"compressible\": true\n  },\n  \"application/taxii+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/td+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/tei+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"tei\",\"teicorpus\"]\n  },\n  \"application/tetra_isi\": {\n    \"source\": \"iana\"\n  },\n  \"application/thraud+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"tfi\"]\n  },\n  \"application/timestamp-query\": {\n    \"source\": \"iana\"\n  },\n  \"application/timestamp-reply\": {\n    \"source\": \"iana\"\n  },\n  \"application/timestamped-data\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"tsd\"]\n  },\n  \"application/tlsrpt+gzip\": {\n    \"source\": \"iana\"\n  },\n  \"application/tlsrpt+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/tm+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/tnauthlist\": {\n    \"source\": \"iana\"\n  },\n  \"application/token-introspection+jwt\": {\n    \"source\": \"iana\"\n  },\n  \"application/toml\": {\n    \"compressible\": true,\n    \"extensions\": [\"toml\"]\n  },\n  \"application/trickle-ice-sdpfrag\": {\n    \"source\": \"iana\"\n  },\n  \"application/trig\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"trig\"]\n  },\n  \"application/ttml+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"ttml\"]\n  },\n  \"application/tve-trigger\": {\n    \"source\": \"iana\"\n  },\n  \"application/tzif\": {\n    \"source\": \"iana\"\n  },\n  \"application/tzif-leap\": {\n    \"source\": \"iana\"\n  },\n  \"application/ubjson\": {\n    \"compressible\": false,\n    \"extensions\": [\"ubj\"]\n  },\n  \"application/ulpfec\": {\n    \"source\": \"iana\"\n  },\n  \"application/urc-grpsheet+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/urc-ressheet+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"rsheet\"]\n  },\n  \"application/urc-targetdesc+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"td\"]\n  },\n  \"application/urc-uisocketdesc+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vc\": {\n    \"source\": \"iana\"\n  },\n  \"application/vcard+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vcard+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vemmi\": {\n    \"source\": \"iana\"\n  },\n  \"application/vividence.scriptfile\": {\n    \"source\": \"apache\"\n  },\n  \"application/vnd.1000minds.decision-model+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"1km\"]\n  },\n  \"application/vnd.1ob\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.3gpp-prose+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp-prose-pc3a+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp-prose-pc3ach+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp-prose-pc3ch+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp-prose-pc8+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp-v2x-local-service-information\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.3gpp.5gnas\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.3gpp.5gsa2x\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.3gpp.5gsa2x-local-service-information\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.3gpp.access-transfer-events+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.bsf+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.crs+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.current-location-discovery+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.gmop+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.gtpc\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.3gpp.interworking-data\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.3gpp.lpp\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.3gpp.mc-signalling-ear\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.3gpp.mcdata-affiliation-command+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.mcdata-info+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.mcdata-msgstore-ctrl-request+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.mcdata-payload\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.3gpp.mcdata-regroup+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.mcdata-service-config+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.mcdata-signalling\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.3gpp.mcdata-ue-config+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.mcdata-user-profile+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.mcptt-affiliation-command+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.mcptt-floor-request+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.mcptt-info+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.mcptt-location-info+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.mcptt-mbms-usage-info+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.mcptt-regroup+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.mcptt-service-config+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.mcptt-signed+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.mcptt-ue-config+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.mcptt-ue-init-config+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.mcptt-user-profile+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.mcvideo-affiliation-command+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.mcvideo-info+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.mcvideo-location-info+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.mcvideo-mbms-usage-info+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.mcvideo-regroup+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.mcvideo-service-config+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.mcvideo-transmission-request+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.mcvideo-ue-config+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.mcvideo-user-profile+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.mid-call+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.ngap\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.3gpp.pfcp\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.3gpp.pic-bw-large\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"plb\"]\n  },\n  \"application/vnd.3gpp.pic-bw-small\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"psb\"]\n  },\n  \"application/vnd.3gpp.pic-bw-var\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"pvb\"]\n  },\n  \"application/vnd.3gpp.pinapp-info+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.s1ap\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.3gpp.seal-group-doc+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.seal-info+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.seal-location-info+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.seal-mbms-usage-info+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.seal-network-qos-management-info+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.seal-ue-config-info+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.seal-unicast-info+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.seal-user-profile-info+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.sms\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.3gpp.sms+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.srvcc-ext+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.srvcc-info+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.state-and-event-info+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.ussd+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.v2x\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.3gpp.vae-info+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp2.bcmcsinfo+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp2.sms\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.3gpp2.tcap\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"tcap\"]\n  },\n  \"application/vnd.3lightssoftware.imagescal\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.3m.post-it-notes\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"pwn\"]\n  },\n  \"application/vnd.accpac.simply.aso\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"aso\"]\n  },\n  \"application/vnd.accpac.simply.imp\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"imp\"]\n  },\n  \"application/vnd.acm.addressxfer+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.acm.chatbot+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.acucobol\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"acu\"]\n  },\n  \"application/vnd.acucorp\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"atc\",\"acutc\"]\n  },\n  \"application/vnd.adobe.air-application-installer-package+zip\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"air\"]\n  },\n  \"application/vnd.adobe.flash.movie\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.adobe.formscentral.fcdt\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"fcdt\"]\n  },\n  \"application/vnd.adobe.fxp\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"fxp\",\"fxpl\"]\n  },\n  \"application/vnd.adobe.partial-upload\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.adobe.xdp+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"xdp\"]\n  },\n  \"application/vnd.adobe.xfdf\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"xfdf\"]\n  },\n  \"application/vnd.aether.imp\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.afpc.afplinedata\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.afpc.afplinedata-pagedef\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.afpc.cmoca-cmresource\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.afpc.foca-charset\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.afpc.foca-codedfont\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.afpc.foca-codepage\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.afpc.modca\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.afpc.modca-cmtable\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.afpc.modca-formdef\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.afpc.modca-mediummap\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.afpc.modca-objectcontainer\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.afpc.modca-overlay\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.afpc.modca-pagesegment\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.age\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"age\"]\n  },\n  \"application/vnd.ah-barcode\": {\n    \"source\": \"apache\"\n  },\n  \"application/vnd.ahead.space\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ahead\"]\n  },\n  \"application/vnd.airzip.filesecure.azf\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"azf\"]\n  },\n  \"application/vnd.airzip.filesecure.azs\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"azs\"]\n  },\n  \"application/vnd.amadeus+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.amazon.ebook\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"azw\"]\n  },\n  \"application/vnd.amazon.mobi8-ebook\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.americandynamics.acc\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"acc\"]\n  },\n  \"application/vnd.amiga.ami\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ami\"]\n  },\n  \"application/vnd.amundsen.maze+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.android.ota\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.android.package-archive\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"apk\"]\n  },\n  \"application/vnd.anki\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.anser-web-certificate-issue-initiation\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"cii\"]\n  },\n  \"application/vnd.anser-web-funds-transfer-initiation\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"fti\"]\n  },\n  \"application/vnd.antix.game-component\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"atx\"]\n  },\n  \"application/vnd.apache.arrow.file\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.apache.arrow.stream\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.apache.parquet\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.apache.thrift.binary\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.apache.thrift.compact\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.apache.thrift.json\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.apexlang\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.api+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.aplextor.warrp+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.apothekende.reservation+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.apple.installer+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"mpkg\"]\n  },\n  \"application/vnd.apple.keynote\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"key\"]\n  },\n  \"application/vnd.apple.mpegurl\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"m3u8\"]\n  },\n  \"application/vnd.apple.numbers\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"numbers\"]\n  },\n  \"application/vnd.apple.pages\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"pages\"]\n  },\n  \"application/vnd.apple.pkpass\": {\n    \"compressible\": false,\n    \"extensions\": [\"pkpass\"]\n  },\n  \"application/vnd.arastra.swi\": {\n    \"source\": \"apache\"\n  },\n  \"application/vnd.aristanetworks.swi\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"swi\"]\n  },\n  \"application/vnd.artisan+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.artsquare\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.astraea-software.iota\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"iota\"]\n  },\n  \"application/vnd.audiograph\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"aep\"]\n  },\n  \"application/vnd.autopackage\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.avalon+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.avistar+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.balsamiq.bmml+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"bmml\"]\n  },\n  \"application/vnd.balsamiq.bmpr\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.banana-accounting\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.bbf.usp.error\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.bbf.usp.msg\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.bbf.usp.msg+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.bekitzur-stech+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.belightsoft.lhzd+zip\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"application/vnd.belightsoft.lhzl+zip\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"application/vnd.bint.med-content\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.biopax.rdf+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.blink-idb-value-wrapper\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.blueice.multipass\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mpm\"]\n  },\n  \"application/vnd.bluetooth.ep.oob\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.bluetooth.le.oob\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.bmi\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"bmi\"]\n  },\n  \"application/vnd.bpf\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.bpf3\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.businessobjects\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"rep\"]\n  },\n  \"application/vnd.byu.uapi+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.bzip3\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.c3voc.schedule+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.cab-jscript\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.canon-cpdl\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.canon-lips\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.capasystems-pg+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.cendio.thinlinc.clientconf\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.century-systems.tcp_stream\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.chemdraw+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"cdxml\"]\n  },\n  \"application/vnd.chess-pgn\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.chipnuts.karaoke-mmd\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mmd\"]\n  },\n  \"application/vnd.ciedi\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.cinderella\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"cdy\"]\n  },\n  \"application/vnd.cirpack.isdn-ext\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.citationstyles.style+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"csl\"]\n  },\n  \"application/vnd.claymore\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"cla\"]\n  },\n  \"application/vnd.cloanto.rp9\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"rp9\"]\n  },\n  \"application/vnd.clonk.c4group\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"c4g\",\"c4d\",\"c4f\",\"c4p\",\"c4u\"]\n  },\n  \"application/vnd.cluetrust.cartomobile-config\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"c11amc\"]\n  },\n  \"application/vnd.cluetrust.cartomobile-config-pkg\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"c11amz\"]\n  },\n  \"application/vnd.cncf.helm.chart.content.v1.tar+gzip\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.cncf.helm.chart.provenance.v1.prov\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.cncf.helm.config.v1+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.coffeescript\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.collabio.xodocuments.document\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.collabio.xodocuments.document-template\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.collabio.xodocuments.presentation\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.collabio.xodocuments.presentation-template\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.collabio.xodocuments.spreadsheet\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.collabio.xodocuments.spreadsheet-template\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.collection+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.collection.doc+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.collection.next+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.comicbook+zip\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"application/vnd.comicbook-rar\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.commerce-battelle\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.commonspace\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"csp\"]\n  },\n  \"application/vnd.contact.cmsg\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"cdbcmsg\"]\n  },\n  \"application/vnd.coreos.ignition+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.cosmocaller\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"cmc\"]\n  },\n  \"application/vnd.crick.clicker\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"clkx\"]\n  },\n  \"application/vnd.crick.clicker.keyboard\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"clkk\"]\n  },\n  \"application/vnd.crick.clicker.palette\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"clkp\"]\n  },\n  \"application/vnd.crick.clicker.template\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"clkt\"]\n  },\n  \"application/vnd.crick.clicker.wordbank\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"clkw\"]\n  },\n  \"application/vnd.criticaltools.wbs+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"wbs\"]\n  },\n  \"application/vnd.cryptii.pipe+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.crypto-shade-file\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.cryptomator.encrypted\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.cryptomator.vault\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ctc-posml\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"pml\"]\n  },\n  \"application/vnd.ctct.ws+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.cups-pdf\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.cups-postscript\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.cups-ppd\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ppd\"]\n  },\n  \"application/vnd.cups-raster\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.cups-raw\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.curl\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.curl.car\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"car\"]\n  },\n  \"application/vnd.curl.pcurl\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"pcurl\"]\n  },\n  \"application/vnd.cyan.dean.root+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.cybank\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.cyclonedx+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.cyclonedx+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.d2l.coursepackage1p0+zip\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"application/vnd.d3m-dataset\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.d3m-problem\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.dart\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"dart\"]\n  },\n  \"application/vnd.data-vision.rdz\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"rdz\"]\n  },\n  \"application/vnd.datalog\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.datapackage+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.dataresource+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.dbf\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"dbf\"]\n  },\n  \"application/vnd.debian.binary-package\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.dece.data\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"uvf\",\"uvvf\",\"uvd\",\"uvvd\"]\n  },\n  \"application/vnd.dece.ttml+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"uvt\",\"uvvt\"]\n  },\n  \"application/vnd.dece.unspecified\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"uvx\",\"uvvx\"]\n  },\n  \"application/vnd.dece.zip\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"uvz\",\"uvvz\"]\n  },\n  \"application/vnd.denovo.fcselayout-link\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"fe_launch\"]\n  },\n  \"application/vnd.desmume.movie\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.dir-bi.plate-dl-nosuffix\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.dm.delegation+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.dna\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"dna\"]\n  },\n  \"application/vnd.document+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.dolby.mlp\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"mlp\"]\n  },\n  \"application/vnd.dolby.mobile.1\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.dolby.mobile.2\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.doremir.scorecloud-binary-document\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.dpgraph\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"dpg\"]\n  },\n  \"application/vnd.dreamfactory\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"dfac\"]\n  },\n  \"application/vnd.drive+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.ds-keypoint\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"kpxx\"]\n  },\n  \"application/vnd.dtg.local\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.dtg.local.flash\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.dtg.local.html\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.dvb.ait\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ait\"]\n  },\n  \"application/vnd.dvb.dvbisl+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.dvb.dvbj\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.dvb.esgcontainer\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.dvb.ipdcdftnotifaccess\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.dvb.ipdcesgaccess\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.dvb.ipdcesgaccess2\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.dvb.ipdcesgpdd\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.dvb.ipdcroaming\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.dvb.iptv.alfec-base\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.dvb.iptv.alfec-enhancement\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.dvb.notif-aggregate-root+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.dvb.notif-container+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.dvb.notif-generic+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.dvb.notif-ia-msglist+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.dvb.notif-ia-registration-request+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.dvb.notif-ia-registration-response+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.dvb.notif-init+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.dvb.pfr\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.dvb.service\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"svc\"]\n  },\n  \"application/vnd.dxr\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.dynageo\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"geo\"]\n  },\n  \"application/vnd.dzr\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.easykaraoke.cdgdownload\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ecdis-update\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ecip.rlp\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.eclipse.ditto+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.ecowin.chart\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mag\"]\n  },\n  \"application/vnd.ecowin.filerequest\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ecowin.fileupdate\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ecowin.series\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ecowin.seriesrequest\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ecowin.seriesupdate\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.efi.img\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.efi.iso\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.eln+zip\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"application/vnd.emclient.accessrequest+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.enliven\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"nml\"]\n  },\n  \"application/vnd.enphase.envoy\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.eprints.data+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.epson.esf\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"esf\"]\n  },\n  \"application/vnd.epson.msf\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"msf\"]\n  },\n  \"application/vnd.epson.quickanime\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"qam\"]\n  },\n  \"application/vnd.epson.salt\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"slt\"]\n  },\n  \"application/vnd.epson.ssf\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ssf\"]\n  },\n  \"application/vnd.ericsson.quickcall\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.erofs\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.espass-espass+zip\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"application/vnd.eszigno3+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"es3\",\"et3\"]\n  },\n  \"application/vnd.etsi.aoc+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.etsi.asic-e+zip\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"application/vnd.etsi.asic-s+zip\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"application/vnd.etsi.cug+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.etsi.iptvcommand+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.etsi.iptvdiscovery+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.etsi.iptvprofile+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.etsi.iptvsad-bc+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.etsi.iptvsad-cod+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.etsi.iptvsad-npvr+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.etsi.iptvservice+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.etsi.iptvsync+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.etsi.iptvueprofile+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.etsi.mcid+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.etsi.mheg5\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.etsi.overload-control-policy-dataset+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.etsi.pstn+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.etsi.sci+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.etsi.simservs+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.etsi.timestamp-token\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.etsi.tsl+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.etsi.tsl.der\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.eu.kasparian.car+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.eudora.data\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.evolv.ecig.profile\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.evolv.ecig.settings\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.evolv.ecig.theme\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.exstream-empower+zip\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"application/vnd.exstream-package\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ezpix-album\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ez2\"]\n  },\n  \"application/vnd.ezpix-package\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ez3\"]\n  },\n  \"application/vnd.f-secure.mobile\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.familysearch.gedcom+zip\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"application/vnd.fastcopy-disk-image\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.fdf\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"fdf\"]\n  },\n  \"application/vnd.fdsn.mseed\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mseed\"]\n  },\n  \"application/vnd.fdsn.seed\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"seed\",\"dataless\"]\n  },\n  \"application/vnd.ffsns\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ficlab.flb+zip\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"application/vnd.filmit.zfc\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.fints\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.firemonkeys.cloudcell\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.flographit\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"gph\"]\n  },\n  \"application/vnd.fluxtime.clip\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ftc\"]\n  },\n  \"application/vnd.font-fontforge-sfd\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.framemaker\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"fm\",\"frame\",\"maker\",\"book\"]\n  },\n  \"application/vnd.freelog.comic\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.frogans.fnc\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"fnc\"]\n  },\n  \"application/vnd.frogans.ltf\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"ltf\"]\n  },\n  \"application/vnd.fsc.weblaunch\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"fsc\"]\n  },\n  \"application/vnd.fujifilm.fb.docuworks\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.fujifilm.fb.docuworks.binder\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.fujifilm.fb.docuworks.container\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.fujifilm.fb.jfi+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.fujitsu.oasys\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"oas\"]\n  },\n  \"application/vnd.fujitsu.oasys2\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"oa2\"]\n  },\n  \"application/vnd.fujitsu.oasys3\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"oa3\"]\n  },\n  \"application/vnd.fujitsu.oasysgp\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"fg5\"]\n  },\n  \"application/vnd.fujitsu.oasysprs\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"bh2\"]\n  },\n  \"application/vnd.fujixerox.art-ex\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.fujixerox.art4\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.fujixerox.ddd\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ddd\"]\n  },\n  \"application/vnd.fujixerox.docuworks\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"xdw\"]\n  },\n  \"application/vnd.fujixerox.docuworks.binder\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"xbd\"]\n  },\n  \"application/vnd.fujixerox.docuworks.container\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.fujixerox.hbpl\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.fut-misnet\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.futoin+cbor\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.futoin+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.fuzzysheet\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"fzs\"]\n  },\n  \"application/vnd.ga4gh.passport+jwt\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.genomatix.tuxedo\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"txd\"]\n  },\n  \"application/vnd.genozip\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.gentics.grd+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.gentoo.catmetadata+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.gentoo.ebuild\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.gentoo.eclass\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.gentoo.gpkg\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.gentoo.manifest\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.gentoo.pkgmetadata+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.gentoo.xpak\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.geo+json\": {\n    \"source\": \"apache\",\n    \"compressible\": true\n  },\n  \"application/vnd.geocube+xml\": {\n    \"source\": \"apache\",\n    \"compressible\": true\n  },\n  \"application/vnd.geogebra.file\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ggb\"]\n  },\n  \"application/vnd.geogebra.slides\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ggs\"]\n  },\n  \"application/vnd.geogebra.tool\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ggt\"]\n  },\n  \"application/vnd.geometry-explorer\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"gex\",\"gre\"]\n  },\n  \"application/vnd.geonext\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"gxt\"]\n  },\n  \"application/vnd.geoplan\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"g2w\"]\n  },\n  \"application/vnd.geospace\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"g3w\"]\n  },\n  \"application/vnd.gerber\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.globalplatform.card-content-mgt\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.globalplatform.card-content-mgt-response\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.gmx\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"gmx\"]\n  },\n  \"application/vnd.gnu.taler.exchange+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.gnu.taler.merchant+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.google-apps.document\": {\n    \"compressible\": false,\n    \"extensions\": [\"gdoc\"]\n  },\n  \"application/vnd.google-apps.presentation\": {\n    \"compressible\": false,\n    \"extensions\": [\"gslides\"]\n  },\n  \"application/vnd.google-apps.spreadsheet\": {\n    \"compressible\": false,\n    \"extensions\": [\"gsheet\"]\n  },\n  \"application/vnd.google-earth.kml+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"kml\"]\n  },\n  \"application/vnd.google-earth.kmz\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"kmz\"]\n  },\n  \"application/vnd.gov.sk.e-form+xml\": {\n    \"source\": \"apache\",\n    \"compressible\": true\n  },\n  \"application/vnd.gov.sk.e-form+zip\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"application/vnd.gov.sk.xmldatacontainer+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"xdcf\"]\n  },\n  \"application/vnd.gpxsee.map+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.grafeq\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"gqf\",\"gqs\"]\n  },\n  \"application/vnd.gridmp\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.groove-account\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"gac\"]\n  },\n  \"application/vnd.groove-help\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ghf\"]\n  },\n  \"application/vnd.groove-identity-message\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"gim\"]\n  },\n  \"application/vnd.groove-injector\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"grv\"]\n  },\n  \"application/vnd.groove-tool-message\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"gtm\"]\n  },\n  \"application/vnd.groove-tool-template\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"tpl\"]\n  },\n  \"application/vnd.groove-vcard\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"vcg\"]\n  },\n  \"application/vnd.hal+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.hal+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"hal\"]\n  },\n  \"application/vnd.handheld-entertainment+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"zmm\"]\n  },\n  \"application/vnd.hbci\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"hbci\"]\n  },\n  \"application/vnd.hc+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.hcl-bireports\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.hdt\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.heroku+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.hhe.lesson-player\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"les\"]\n  },\n  \"application/vnd.hp-hpgl\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"hpgl\"]\n  },\n  \"application/vnd.hp-hpid\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"hpid\"]\n  },\n  \"application/vnd.hp-hps\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"hps\"]\n  },\n  \"application/vnd.hp-jlyt\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"jlt\"]\n  },\n  \"application/vnd.hp-pcl\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"pcl\"]\n  },\n  \"application/vnd.hp-pclxl\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"pclxl\"]\n  },\n  \"application/vnd.hsl\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.httphone\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.hydrostatix.sof-data\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"sfd-hdstx\"]\n  },\n  \"application/vnd.hyper+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.hyper-item+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.hyperdrive+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.hzn-3d-crossword\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ibm.afplinedata\": {\n    \"source\": \"apache\"\n  },\n  \"application/vnd.ibm.electronic-media\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ibm.minipay\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mpy\"]\n  },\n  \"application/vnd.ibm.modcap\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"afp\",\"listafp\",\"list3820\"]\n  },\n  \"application/vnd.ibm.rights-management\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"irm\"]\n  },\n  \"application/vnd.ibm.secure-container\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"sc\"]\n  },\n  \"application/vnd.iccprofile\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"icc\",\"icm\"]\n  },\n  \"application/vnd.ieee.1905\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.igloader\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"igl\"]\n  },\n  \"application/vnd.imagemeter.folder+zip\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"application/vnd.imagemeter.image+zip\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"application/vnd.immervision-ivp\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ivp\"]\n  },\n  \"application/vnd.immervision-ivu\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ivu\"]\n  },\n  \"application/vnd.ims.imsccv1p1\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ims.imsccv1p2\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ims.imsccv1p3\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ims.lis.v2.result+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.ims.lti.v2.toolconsumerprofile+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.ims.lti.v2.toolproxy+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.ims.lti.v2.toolproxy.id+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.ims.lti.v2.toolsettings+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.ims.lti.v2.toolsettings.simple+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.informedcontrol.rms+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.informix-visionary\": {\n    \"source\": \"apache\"\n  },\n  \"application/vnd.infotech.project\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.infotech.project+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.innopath.wamp.notification\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.insors.igm\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"igm\"]\n  },\n  \"application/vnd.intercon.formnet\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"xpw\",\"xpx\"]\n  },\n  \"application/vnd.intergeo\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"i2g\"]\n  },\n  \"application/vnd.intertrust.digibox\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.intertrust.nncp\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.intu.qbo\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"qbo\"]\n  },\n  \"application/vnd.intu.qfx\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"qfx\"]\n  },\n  \"application/vnd.ipfs.ipns-record\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ipld.car\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ipld.dag-cbor\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ipld.dag-json\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ipld.raw\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.iptc.g2.catalogitem+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.iptc.g2.conceptitem+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.iptc.g2.knowledgeitem+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.iptc.g2.newsitem+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.iptc.g2.newsmessage+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.iptc.g2.packageitem+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.iptc.g2.planningitem+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.ipunplugged.rcprofile\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"rcprofile\"]\n  },\n  \"application/vnd.irepository.package+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"irp\"]\n  },\n  \"application/vnd.is-xpr\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"xpr\"]\n  },\n  \"application/vnd.isac.fcs\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"fcs\"]\n  },\n  \"application/vnd.iso11783-10+zip\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"application/vnd.jam\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"jam\"]\n  },\n  \"application/vnd.japannet-directory-service\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.japannet-jpnstore-wakeup\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.japannet-payment-wakeup\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.japannet-registration\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.japannet-registration-wakeup\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.japannet-setstore-wakeup\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.japannet-verification\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.japannet-verification-wakeup\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.jcp.javame.midlet-rms\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"rms\"]\n  },\n  \"application/vnd.jisp\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"jisp\"]\n  },\n  \"application/vnd.joost.joda-archive\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"joda\"]\n  },\n  \"application/vnd.jsk.isdn-ngn\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.kahootz\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ktz\",\"ktr\"]\n  },\n  \"application/vnd.kde.karbon\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"karbon\"]\n  },\n  \"application/vnd.kde.kchart\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"chrt\"]\n  },\n  \"application/vnd.kde.kformula\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"kfo\"]\n  },\n  \"application/vnd.kde.kivio\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"flw\"]\n  },\n  \"application/vnd.kde.kontour\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"kon\"]\n  },\n  \"application/vnd.kde.kpresenter\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"kpr\",\"kpt\"]\n  },\n  \"application/vnd.kde.kspread\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ksp\"]\n  },\n  \"application/vnd.kde.kword\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"kwd\",\"kwt\"]\n  },\n  \"application/vnd.kenameaapp\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"htke\"]\n  },\n  \"application/vnd.kidspiration\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"kia\"]\n  },\n  \"application/vnd.kinar\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"kne\",\"knp\"]\n  },\n  \"application/vnd.koan\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"skp\",\"skd\",\"skt\",\"skm\"]\n  },\n  \"application/vnd.kodak-descriptor\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"sse\"]\n  },\n  \"application/vnd.las\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.las.las+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.las.las+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"lasxml\"]\n  },\n  \"application/vnd.laszip\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ldev.productlicensing\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.leap+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.liberty-request+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.llamagraphics.life-balance.desktop\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"lbd\"]\n  },\n  \"application/vnd.llamagraphics.life-balance.exchange+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"lbe\"]\n  },\n  \"application/vnd.logipipe.circuit+zip\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"application/vnd.loom\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.lotus-1-2-3\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"123\"]\n  },\n  \"application/vnd.lotus-approach\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"apr\"]\n  },\n  \"application/vnd.lotus-freelance\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"pre\"]\n  },\n  \"application/vnd.lotus-notes\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"nsf\"]\n  },\n  \"application/vnd.lotus-organizer\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"org\"]\n  },\n  \"application/vnd.lotus-screencam\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"scm\"]\n  },\n  \"application/vnd.lotus-wordpro\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"lwp\"]\n  },\n  \"application/vnd.macports.portpkg\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"portpkg\"]\n  },\n  \"application/vnd.mapbox-vector-tile\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mvt\"]\n  },\n  \"application/vnd.marlin.drm.actiontoken+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.marlin.drm.conftoken+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.marlin.drm.license+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.marlin.drm.mdcf\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.mason+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.maxar.archive.3tz+zip\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"application/vnd.maxmind.maxmind-db\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.mcd\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mcd\"]\n  },\n  \"application/vnd.mdl\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.mdl-mbsdf\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.medcalcdata\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mc1\"]\n  },\n  \"application/vnd.mediastation.cdkey\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"cdkey\"]\n  },\n  \"application/vnd.medicalholodeck.recordxr\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.meridian-slingshot\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.mermaid\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.mfer\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mwf\"]\n  },\n  \"application/vnd.mfmp\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mfm\"]\n  },\n  \"application/vnd.micro+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.micrografx.flo\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"flo\"]\n  },\n  \"application/vnd.micrografx.igx\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"igx\"]\n  },\n  \"application/vnd.microsoft.portable-executable\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.microsoft.windows.thumbnail-cache\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.miele+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.mif\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mif\"]\n  },\n  \"application/vnd.minisoft-hp3000-save\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.mitsubishi.misty-guard.trustweb\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.mobius.daf\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"daf\"]\n  },\n  \"application/vnd.mobius.dis\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"dis\"]\n  },\n  \"application/vnd.mobius.mbk\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mbk\"]\n  },\n  \"application/vnd.mobius.mqy\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mqy\"]\n  },\n  \"application/vnd.mobius.msl\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"msl\"]\n  },\n  \"application/vnd.mobius.plc\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"plc\"]\n  },\n  \"application/vnd.mobius.txf\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"txf\"]\n  },\n  \"application/vnd.modl\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.mophun.application\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mpn\"]\n  },\n  \"application/vnd.mophun.certificate\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mpc\"]\n  },\n  \"application/vnd.motorola.flexsuite\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.motorola.flexsuite.adsi\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.motorola.flexsuite.fis\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.motorola.flexsuite.gotap\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.motorola.flexsuite.kmr\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.motorola.flexsuite.ttc\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.motorola.flexsuite.wem\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.motorola.iprm\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.mozilla.xul+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"xul\"]\n  },\n  \"application/vnd.ms-3mfdocument\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ms-artgalry\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"cil\"]\n  },\n  \"application/vnd.ms-asf\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ms-cab-compressed\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"cab\"]\n  },\n  \"application/vnd.ms-color.iccprofile\": {\n    \"source\": \"apache\"\n  },\n  \"application/vnd.ms-excel\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"xls\",\"xlm\",\"xla\",\"xlc\",\"xlt\",\"xlw\"]\n  },\n  \"application/vnd.ms-excel.addin.macroenabled.12\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"xlam\"]\n  },\n  \"application/vnd.ms-excel.sheet.binary.macroenabled.12\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"xlsb\"]\n  },\n  \"application/vnd.ms-excel.sheet.macroenabled.12\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"xlsm\"]\n  },\n  \"application/vnd.ms-excel.template.macroenabled.12\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"xltm\"]\n  },\n  \"application/vnd.ms-fontobject\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"eot\"]\n  },\n  \"application/vnd.ms-htmlhelp\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"chm\"]\n  },\n  \"application/vnd.ms-ims\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ims\"]\n  },\n  \"application/vnd.ms-lrm\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"lrm\"]\n  },\n  \"application/vnd.ms-office.activex+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.ms-officetheme\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"thmx\"]\n  },\n  \"application/vnd.ms-opentype\": {\n    \"source\": \"apache\",\n    \"compressible\": true\n  },\n  \"application/vnd.ms-outlook\": {\n    \"compressible\": false,\n    \"extensions\": [\"msg\"]\n  },\n  \"application/vnd.ms-package.obfuscated-opentype\": {\n    \"source\": \"apache\"\n  },\n  \"application/vnd.ms-pki.seccat\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"cat\"]\n  },\n  \"application/vnd.ms-pki.stl\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"stl\"]\n  },\n  \"application/vnd.ms-playready.initiator+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.ms-powerpoint\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"ppt\",\"pps\",\"pot\"]\n  },\n  \"application/vnd.ms-powerpoint.addin.macroenabled.12\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ppam\"]\n  },\n  \"application/vnd.ms-powerpoint.presentation.macroenabled.12\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"pptm\"]\n  },\n  \"application/vnd.ms-powerpoint.slide.macroenabled.12\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"sldm\"]\n  },\n  \"application/vnd.ms-powerpoint.slideshow.macroenabled.12\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ppsm\"]\n  },\n  \"application/vnd.ms-powerpoint.template.macroenabled.12\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"potm\"]\n  },\n  \"application/vnd.ms-printdevicecapabilities+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.ms-printing.printticket+xml\": {\n    \"source\": \"apache\",\n    \"compressible\": true\n  },\n  \"application/vnd.ms-printschematicket+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.ms-project\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mpp\",\"mpt\"]\n  },\n  \"application/vnd.ms-tnef\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ms-windows.devicepairing\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ms-windows.nwprinting.oob\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ms-windows.printerpairing\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ms-windows.wsd.oob\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ms-wmdrm.lic-chlg-req\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ms-wmdrm.lic-resp\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ms-wmdrm.meter-chlg-req\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ms-wmdrm.meter-resp\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ms-word.document.macroenabled.12\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"docm\"]\n  },\n  \"application/vnd.ms-word.template.macroenabled.12\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"dotm\"]\n  },\n  \"application/vnd.ms-works\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"wps\",\"wks\",\"wcm\",\"wdb\"]\n  },\n  \"application/vnd.ms-wpl\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"wpl\"]\n  },\n  \"application/vnd.ms-xpsdocument\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"xps\"]\n  },\n  \"application/vnd.msa-disk-image\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.mseq\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mseq\"]\n  },\n  \"application/vnd.msgpack\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.msign\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.multiad.creator\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.multiad.creator.cif\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.music-niff\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.musician\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mus\"]\n  },\n  \"application/vnd.muvee.style\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"msty\"]\n  },\n  \"application/vnd.mynfc\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"taglet\"]\n  },\n  \"application/vnd.nacamar.ybrid+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.nato.bindingdataobject+cbor\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.nato.bindingdataobject+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.nato.bindingdataobject+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"bdo\"]\n  },\n  \"application/vnd.nato.openxmlformats-package.iepd+zip\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"application/vnd.ncd.control\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ncd.reference\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.nearst.inv+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.nebumind.line\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.nervana\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.netfpx\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.neurolanguage.nlu\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"nlu\"]\n  },\n  \"application/vnd.nimn\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.nintendo.nitro.rom\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.nintendo.snes.rom\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.nitf\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ntf\",\"nitf\"]\n  },\n  \"application/vnd.noblenet-directory\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"nnd\"]\n  },\n  \"application/vnd.noblenet-sealer\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"nns\"]\n  },\n  \"application/vnd.noblenet-web\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"nnw\"]\n  },\n  \"application/vnd.nokia.catalogs\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.nokia.conml+wbxml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.nokia.conml+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.nokia.iptv.config+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.nokia.isds-radio-presets\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.nokia.landmark+wbxml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.nokia.landmark+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.nokia.landmarkcollection+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.nokia.n-gage.ac+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"ac\"]\n  },\n  \"application/vnd.nokia.n-gage.data\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ngdat\"]\n  },\n  \"application/vnd.nokia.n-gage.symbian.install\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"n-gage\"]\n  },\n  \"application/vnd.nokia.ncd\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.nokia.pcd+wbxml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.nokia.pcd+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.nokia.radio-preset\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"rpst\"]\n  },\n  \"application/vnd.nokia.radio-presets\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"rpss\"]\n  },\n  \"application/vnd.novadigm.edm\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"edm\"]\n  },\n  \"application/vnd.novadigm.edx\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"edx\"]\n  },\n  \"application/vnd.novadigm.ext\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ext\"]\n  },\n  \"application/vnd.ntt-local.content-share\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ntt-local.file-transfer\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ntt-local.ogw_remote-access\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ntt-local.sip-ta_remote\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ntt-local.sip-ta_tcp_stream\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oai.workflows\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oai.workflows+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oai.workflows+yaml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oasis.opendocument.base\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oasis.opendocument.chart\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"odc\"]\n  },\n  \"application/vnd.oasis.opendocument.chart-template\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"otc\"]\n  },\n  \"application/vnd.oasis.opendocument.database\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"odb\"]\n  },\n  \"application/vnd.oasis.opendocument.formula\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"odf\"]\n  },\n  \"application/vnd.oasis.opendocument.formula-template\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"odft\"]\n  },\n  \"application/vnd.oasis.opendocument.graphics\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"odg\"]\n  },\n  \"application/vnd.oasis.opendocument.graphics-template\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"otg\"]\n  },\n  \"application/vnd.oasis.opendocument.image\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"odi\"]\n  },\n  \"application/vnd.oasis.opendocument.image-template\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"oti\"]\n  },\n  \"application/vnd.oasis.opendocument.presentation\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"odp\"]\n  },\n  \"application/vnd.oasis.opendocument.presentation-template\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"otp\"]\n  },\n  \"application/vnd.oasis.opendocument.spreadsheet\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"ods\"]\n  },\n  \"application/vnd.oasis.opendocument.spreadsheet-template\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ots\"]\n  },\n  \"application/vnd.oasis.opendocument.text\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"odt\"]\n  },\n  \"application/vnd.oasis.opendocument.text-master\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"odm\"]\n  },\n  \"application/vnd.oasis.opendocument.text-master-template\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oasis.opendocument.text-template\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ott\"]\n  },\n  \"application/vnd.oasis.opendocument.text-web\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"oth\"]\n  },\n  \"application/vnd.obn\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ocf+cbor\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oci.image.manifest.v1+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oftn.l10n+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oipf.contentaccessdownload+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oipf.contentaccessstreaming+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oipf.cspg-hexbinary\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oipf.dae.svg+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oipf.dae.xhtml+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oipf.mippvcontrolmessage+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oipf.pae.gem\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oipf.spdiscovery+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oipf.spdlist+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oipf.ueprofile+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oipf.userprofile+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.olpc-sugar\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"xo\"]\n  },\n  \"application/vnd.oma-scws-config\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oma-scws-http-request\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oma-scws-http-response\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oma.bcast.associated-procedure-parameter+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oma.bcast.drm-trigger+xml\": {\n    \"source\": \"apache\",\n    \"compressible\": true\n  },\n  \"application/vnd.oma.bcast.imd+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oma.bcast.ltkm\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oma.bcast.notification+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oma.bcast.provisioningtrigger\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oma.bcast.sgboot\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oma.bcast.sgdd+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oma.bcast.sgdu\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oma.bcast.simple-symbol-container\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oma.bcast.smartcard-trigger+xml\": {\n    \"source\": \"apache\",\n    \"compressible\": true\n  },\n  \"application/vnd.oma.bcast.sprov+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oma.bcast.stkm\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oma.cab-address-book+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oma.cab-feature-handler+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oma.cab-pcc+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oma.cab-subs-invite+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oma.cab-user-prefs+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oma.dcd\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oma.dcdc\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oma.dd2+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"dd2\"]\n  },\n  \"application/vnd.oma.drm.risd+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oma.group-usage-list+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oma.lwm2m+cbor\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oma.lwm2m+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oma.lwm2m+tlv\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oma.pal+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oma.poc.detailed-progress-report+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oma.poc.final-report+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oma.poc.groups+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oma.poc.invocation-descriptor+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oma.poc.optimized-progress-report+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oma.push\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oma.scidm.messages+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oma.xcap-directory+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.omads-email+xml\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"compressible\": true\n  },\n  \"application/vnd.omads-file+xml\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"compressible\": true\n  },\n  \"application/vnd.omads-folder+xml\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"compressible\": true\n  },\n  \"application/vnd.omaloc-supl-init\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.onepager\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.onepagertamp\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.onepagertamx\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.onepagertat\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.onepagertatp\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.onepagertatx\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.onvif.metadata\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.openblox.game+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"obgx\"]\n  },\n  \"application/vnd.openblox.game-binary\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.openeye.oeb\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.openofficeorg.extension\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"oxt\"]\n  },\n  \"application/vnd.openstreetmap.data+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"osm\"]\n  },\n  \"application/vnd.opentimestamps.ots\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.openxmlformats-officedocument.custom-properties+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.customxmlproperties+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.drawing+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.drawingml.chart+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.drawingml.chartshapes+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.drawingml.diagramcolors+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.drawingml.diagramdata+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.drawingml.diagramlayout+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.drawingml.diagramstyle+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.extended-properties+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.presentationml.commentauthors+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.presentationml.comments+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.presentationml.handoutmaster+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.presentationml.notesmaster+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.presentationml.notesslide+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.presentationml.presentation\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"pptx\"]\n  },\n  \"application/vnd.openxmlformats-officedocument.presentationml.presentation.main+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.presentationml.presprops+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.presentationml.slide\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"sldx\"]\n  },\n  \"application/vnd.openxmlformats-officedocument.presentationml.slide+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.presentationml.slidelayout+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.presentationml.slidemaster+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.presentationml.slideshow\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ppsx\"]\n  },\n  \"application/vnd.openxmlformats-officedocument.presentationml.slideshow.main+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.presentationml.slideupdateinfo+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.presentationml.tablestyles+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.presentationml.tags+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.presentationml.template\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"potx\"]\n  },\n  \"application/vnd.openxmlformats-officedocument.presentationml.template.main+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.presentationml.viewprops+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.calcchain+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.chartsheet+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.comments+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.connections+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.dialogsheet+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.externallink+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.pivotcachedefinition+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.pivotcacherecords+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.pivottable+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.querytable+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.revisionheaders+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.revisionlog+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.sharedstrings+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"xlsx\"]\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheetmetadata+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.table+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.tablesinglecells+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.template\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"xltx\"]\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.template.main+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.usernames+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.volatiledependencies+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.theme+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.themeoverride+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.vmldrawing\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.openxmlformats-officedocument.wordprocessingml.comments+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"docx\"]\n  },\n  \"application/vnd.openxmlformats-officedocument.wordprocessingml.document.glossary+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.wordprocessingml.document.main+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.wordprocessingml.endnotes+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.wordprocessingml.fonttable+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.wordprocessingml.footer+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.wordprocessingml.footnotes+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.wordprocessingml.numbering+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.wordprocessingml.settings+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.wordprocessingml.styles+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.wordprocessingml.template\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"dotx\"]\n  },\n  \"application/vnd.openxmlformats-officedocument.wordprocessingml.template.main+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.wordprocessingml.websettings+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-package.core-properties+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-package.digital-signature-xmlsignature+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-package.relationships+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oracle.resource+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.orange.indata\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.osa.netdeploy\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.osgeo.mapguide.package\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mgp\"]\n  },\n  \"application/vnd.osgi.bundle\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.osgi.dp\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"dp\"]\n  },\n  \"application/vnd.osgi.subsystem\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"esa\"]\n  },\n  \"application/vnd.otps.ct-kip+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oxli.countgraph\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.pagerduty+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.palm\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"pdb\",\"pqa\",\"oprc\"]\n  },\n  \"application/vnd.panoply\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.paos.xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.patentdive\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.patientecommsdoc\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.pawaafile\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"paw\"]\n  },\n  \"application/vnd.pcos\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.pg.format\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"str\"]\n  },\n  \"application/vnd.pg.osasli\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ei6\"]\n  },\n  \"application/vnd.piaccess.application-licence\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.picsel\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"efif\"]\n  },\n  \"application/vnd.pmi.widget\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"wg\"]\n  },\n  \"application/vnd.poc.group-advertisement+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.pocketlearn\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"plf\"]\n  },\n  \"application/vnd.powerbuilder6\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"pbd\"]\n  },\n  \"application/vnd.powerbuilder6-s\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.powerbuilder7\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.powerbuilder7-s\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.powerbuilder75\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.powerbuilder75-s\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.preminet\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.previewsystems.box\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"box\"]\n  },\n  \"application/vnd.proteus.magazine\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mgz\"]\n  },\n  \"application/vnd.psfs\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.pt.mundusmundi\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.publishare-delta-tree\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"qps\"]\n  },\n  \"application/vnd.pvi.ptid1\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ptid\"]\n  },\n  \"application/vnd.pwg-multiplexed\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.pwg-xhtml-print+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"xhtm\"]\n  },\n  \"application/vnd.qualcomm.brew-app-res\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.quarantainenet\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.quark.quarkxpress\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"qxd\",\"qxt\",\"qwd\",\"qwt\",\"qxl\",\"qxb\"]\n  },\n  \"application/vnd.quobject-quoxdocument\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.radisys.moml+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.radisys.msml+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.radisys.msml-audit+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.radisys.msml-audit-conf+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.radisys.msml-audit-conn+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.radisys.msml-audit-dialog+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.radisys.msml-audit-stream+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.radisys.msml-conf+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.radisys.msml-dialog+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.radisys.msml-dialog-base+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.radisys.msml-dialog-fax-detect+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.radisys.msml-dialog-fax-sendrecv+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.radisys.msml-dialog-group+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.radisys.msml-dialog-speech+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.radisys.msml-dialog-transform+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.rainstor.data\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.rapid\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.rar\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"rar\"]\n  },\n  \"application/vnd.realvnc.bed\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"bed\"]\n  },\n  \"application/vnd.recordare.musicxml\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mxl\"]\n  },\n  \"application/vnd.recordare.musicxml+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"musicxml\"]\n  },\n  \"application/vnd.relpipe\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.renlearn.rlprint\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.resilient.logic\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.restful+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.rig.cryptonote\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"cryptonote\"]\n  },\n  \"application/vnd.rim.cod\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"cod\"]\n  },\n  \"application/vnd.rn-realmedia\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"rm\"]\n  },\n  \"application/vnd.rn-realmedia-vbr\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"rmvb\"]\n  },\n  \"application/vnd.route66.link66+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"link66\"]\n  },\n  \"application/vnd.rs-274x\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ruckus.download\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.s3sms\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.sailingtracker.track\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"st\"]\n  },\n  \"application/vnd.sar\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.sbm.cid\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.sbm.mid2\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.scribus\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.sealed.3df\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.sealed.csf\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.sealed.doc\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.sealed.eml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.sealed.mht\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.sealed.net\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.sealed.ppt\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.sealed.tiff\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.sealed.xls\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.sealedmedia.softseal.html\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.sealedmedia.softseal.pdf\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.seemail\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"see\"]\n  },\n  \"application/vnd.seis+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.sema\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"sema\"]\n  },\n  \"application/vnd.semd\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"semd\"]\n  },\n  \"application/vnd.semf\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"semf\"]\n  },\n  \"application/vnd.shade-save-file\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.shana.informed.formdata\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ifm\"]\n  },\n  \"application/vnd.shana.informed.formtemplate\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"itp\"]\n  },\n  \"application/vnd.shana.informed.interchange\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"iif\"]\n  },\n  \"application/vnd.shana.informed.package\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ipk\"]\n  },\n  \"application/vnd.shootproof+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.shopkick+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.shp\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.shx\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.sigrok.session\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.simtech-mindmapper\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"twd\",\"twds\"]\n  },\n  \"application/vnd.siren+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.smaf\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mmf\"]\n  },\n  \"application/vnd.smart.notebook\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.smart.teacher\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"teacher\"]\n  },\n  \"application/vnd.smintio.portals.archive\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.snesdev-page-table\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.software602.filler.form+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"fo\"]\n  },\n  \"application/vnd.software602.filler.form-xml-zip\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.solent.sdkm+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"sdkm\",\"sdkd\"]\n  },\n  \"application/vnd.spotfire.dxp\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"dxp\"]\n  },\n  \"application/vnd.spotfire.sfs\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"sfs\"]\n  },\n  \"application/vnd.sqlite3\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.sss-cod\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.sss-dtf\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.sss-ntf\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.stardivision.calc\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"sdc\"]\n  },\n  \"application/vnd.stardivision.draw\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"sda\"]\n  },\n  \"application/vnd.stardivision.impress\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"sdd\"]\n  },\n  \"application/vnd.stardivision.math\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"smf\"]\n  },\n  \"application/vnd.stardivision.writer\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"sdw\",\"vor\"]\n  },\n  \"application/vnd.stardivision.writer-global\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"sgl\"]\n  },\n  \"application/vnd.stepmania.package\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"smzip\"]\n  },\n  \"application/vnd.stepmania.stepchart\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"sm\"]\n  },\n  \"application/vnd.street-stream\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.sun.wadl+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"wadl\"]\n  },\n  \"application/vnd.sun.xml.calc\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"sxc\"]\n  },\n  \"application/vnd.sun.xml.calc.template\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"stc\"]\n  },\n  \"application/vnd.sun.xml.draw\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"sxd\"]\n  },\n  \"application/vnd.sun.xml.draw.template\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"std\"]\n  },\n  \"application/vnd.sun.xml.impress\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"sxi\"]\n  },\n  \"application/vnd.sun.xml.impress.template\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"sti\"]\n  },\n  \"application/vnd.sun.xml.math\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"sxm\"]\n  },\n  \"application/vnd.sun.xml.writer\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"sxw\"]\n  },\n  \"application/vnd.sun.xml.writer.global\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"sxg\"]\n  },\n  \"application/vnd.sun.xml.writer.template\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"stw\"]\n  },\n  \"application/vnd.sus-calendar\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"sus\",\"susp\"]\n  },\n  \"application/vnd.svd\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"svd\"]\n  },\n  \"application/vnd.swiftview-ics\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.sybyl.mol2\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.sycle+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.syft+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.symbian.install\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"sis\",\"sisx\"]\n  },\n  \"application/vnd.syncml+xml\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"compressible\": true,\n    \"extensions\": [\"xsm\"]\n  },\n  \"application/vnd.syncml.dm+wbxml\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"extensions\": [\"bdm\"]\n  },\n  \"application/vnd.syncml.dm+xml\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"compressible\": true,\n    \"extensions\": [\"xdm\"]\n  },\n  \"application/vnd.syncml.dm.notification\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.syncml.dmddf+wbxml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.syncml.dmddf+xml\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"compressible\": true,\n    \"extensions\": [\"ddf\"]\n  },\n  \"application/vnd.syncml.dmtnds+wbxml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.syncml.dmtnds+xml\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"compressible\": true\n  },\n  \"application/vnd.syncml.ds.notification\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.tableschema+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.tao.intent-module-archive\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"tao\"]\n  },\n  \"application/vnd.tcpdump.pcap\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"pcap\",\"cap\",\"dmp\"]\n  },\n  \"application/vnd.think-cell.ppttc+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.tmd.mediaflex.api+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.tml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.tmobile-livetv\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"tmo\"]\n  },\n  \"application/vnd.tri.onesource\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.trid.tpt\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"tpt\"]\n  },\n  \"application/vnd.triscape.mxs\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mxs\"]\n  },\n  \"application/vnd.trueapp\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"tra\"]\n  },\n  \"application/vnd.truedoc\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ubisoft.webplayer\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ufdl\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ufd\",\"ufdl\"]\n  },\n  \"application/vnd.uiq.theme\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"utz\"]\n  },\n  \"application/vnd.umajin\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"umj\"]\n  },\n  \"application/vnd.unity\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"unityweb\"]\n  },\n  \"application/vnd.uoml+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"uoml\",\"uo\"]\n  },\n  \"application/vnd.uplanet.alert\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.uplanet.alert-wbxml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.uplanet.bearer-choice\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.uplanet.bearer-choice-wbxml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.uplanet.cacheop\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.uplanet.cacheop-wbxml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.uplanet.channel\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.uplanet.channel-wbxml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.uplanet.list\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.uplanet.list-wbxml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.uplanet.listcmd\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.uplanet.listcmd-wbxml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.uplanet.signal\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.uri-map\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.valve.source.material\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.vcx\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"vcx\"]\n  },\n  \"application/vnd.vd-study\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.vectorworks\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.vel+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.verimatrix.vcas\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.veritone.aion+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.veryant.thin\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ves.encrypted\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.vidsoft.vidconference\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.visio\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"vsd\",\"vst\",\"vss\",\"vsw\"]\n  },\n  \"application/vnd.visionary\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"vis\"]\n  },\n  \"application/vnd.vividence.scriptfile\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.vsf\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"vsf\"]\n  },\n  \"application/vnd.wap.sic\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.wap.slc\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.wap.wbxml\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"extensions\": [\"wbxml\"]\n  },\n  \"application/vnd.wap.wmlc\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"wmlc\"]\n  },\n  \"application/vnd.wap.wmlscriptc\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"wmlsc\"]\n  },\n  \"application/vnd.wasmflow.wafl\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.webturbo\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"wtb\"]\n  },\n  \"application/vnd.wfa.dpp\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.wfa.p2p\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.wfa.wsc\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.windows.devicepairing\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.wmc\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.wmf.bootstrap\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.wolfram.mathematica\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.wolfram.mathematica.package\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.wolfram.player\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"nbp\"]\n  },\n  \"application/vnd.wordlift\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.wordperfect\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"wpd\"]\n  },\n  \"application/vnd.wqd\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"wqd\"]\n  },\n  \"application/vnd.wrq-hp3000-labelled\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.wt.stf\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"stf\"]\n  },\n  \"application/vnd.wv.csp+wbxml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.wv.csp+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.wv.ssp+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.xacml+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.xara\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"xar\"]\n  },\n  \"application/vnd.xecrets-encrypted\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.xfdl\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"xfdl\"]\n  },\n  \"application/vnd.xfdl.webform\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.xmi+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.xmpie.cpkg\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.xmpie.dpkg\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.xmpie.plan\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.xmpie.ppkg\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.xmpie.xlim\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.yamaha.hv-dic\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"hvd\"]\n  },\n  \"application/vnd.yamaha.hv-script\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"hvs\"]\n  },\n  \"application/vnd.yamaha.hv-voice\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"hvp\"]\n  },\n  \"application/vnd.yamaha.openscoreformat\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"osf\"]\n  },\n  \"application/vnd.yamaha.openscoreformat.osfpvg+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"osfpvg\"]\n  },\n  \"application/vnd.yamaha.remote-setup\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.yamaha.smaf-audio\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"saf\"]\n  },\n  \"application/vnd.yamaha.smaf-phrase\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"spf\"]\n  },\n  \"application/vnd.yamaha.through-ngn\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.yamaha.tunnel-udpencap\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.yaoweme\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.yellowriver-custom-menu\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"cmp\"]\n  },\n  \"application/vnd.zul\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"zir\",\"zirz\"]\n  },\n  \"application/vnd.zzazz.deck+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"zaz\"]\n  },\n  \"application/voicexml+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"vxml\"]\n  },\n  \"application/voucher-cms+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vp\": {\n    \"source\": \"iana\"\n  },\n  \"application/vq-rtcpxr\": {\n    \"source\": \"iana\"\n  },\n  \"application/wasm\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"wasm\"]\n  },\n  \"application/watcherinfo+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"wif\"]\n  },\n  \"application/webpush-options+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/whoispp-query\": {\n    \"source\": \"iana\"\n  },\n  \"application/whoispp-response\": {\n    \"source\": \"iana\"\n  },\n  \"application/widget\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"wgt\"]\n  },\n  \"application/winhlp\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"hlp\"]\n  },\n  \"application/wita\": {\n    \"source\": \"iana\"\n  },\n  \"application/wordperfect5.1\": {\n    \"source\": \"iana\"\n  },\n  \"application/wsdl+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"wsdl\"]\n  },\n  \"application/wspolicy+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"wspolicy\"]\n  },\n  \"application/x-7z-compressed\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"7z\"]\n  },\n  \"application/x-abiword\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"abw\"]\n  },\n  \"application/x-ace-compressed\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"ace\"]\n  },\n  \"application/x-amf\": {\n    \"source\": \"apache\"\n  },\n  \"application/x-apple-diskimage\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"dmg\"]\n  },\n  \"application/x-arj\": {\n    \"compressible\": false,\n    \"extensions\": [\"arj\"]\n  },\n  \"application/x-authorware-bin\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"aab\",\"x32\",\"u32\",\"vox\"]\n  },\n  \"application/x-authorware-map\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"aam\"]\n  },\n  \"application/x-authorware-seg\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"aas\"]\n  },\n  \"application/x-bcpio\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"bcpio\"]\n  },\n  \"application/x-bdoc\": {\n    \"compressible\": false,\n    \"extensions\": [\"bdoc\"]\n  },\n  \"application/x-bittorrent\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"torrent\"]\n  },\n  \"application/x-blorb\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"blb\",\"blorb\"]\n  },\n  \"application/x-bzip\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"bz\"]\n  },\n  \"application/x-bzip2\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"bz2\",\"boz\"]\n  },\n  \"application/x-cbr\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"cbr\",\"cba\",\"cbt\",\"cbz\",\"cb7\"]\n  },\n  \"application/x-cdlink\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"vcd\"]\n  },\n  \"application/x-cfs-compressed\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"cfs\"]\n  },\n  \"application/x-chat\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"chat\"]\n  },\n  \"application/x-chess-pgn\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"pgn\"]\n  },\n  \"application/x-chrome-extension\": {\n    \"extensions\": [\"crx\"]\n  },\n  \"application/x-cocoa\": {\n    \"source\": \"nginx\",\n    \"extensions\": [\"cco\"]\n  },\n  \"application/x-compress\": {\n    \"source\": \"apache\"\n  },\n  \"application/x-conference\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"nsc\"]\n  },\n  \"application/x-cpio\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"cpio\"]\n  },\n  \"application/x-csh\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"csh\"]\n  },\n  \"application/x-deb\": {\n    \"compressible\": false\n  },\n  \"application/x-debian-package\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"deb\",\"udeb\"]\n  },\n  \"application/x-dgc-compressed\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"dgc\"]\n  },\n  \"application/x-director\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"dir\",\"dcr\",\"dxr\",\"cst\",\"cct\",\"cxt\",\"w3d\",\"fgd\",\"swa\"]\n  },\n  \"application/x-doom\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"wad\"]\n  },\n  \"application/x-dtbncx+xml\": {\n    \"source\": \"apache\",\n    \"compressible\": true,\n    \"extensions\": [\"ncx\"]\n  },\n  \"application/x-dtbook+xml\": {\n    \"source\": \"apache\",\n    \"compressible\": true,\n    \"extensions\": [\"dtb\"]\n  },\n  \"application/x-dtbresource+xml\": {\n    \"source\": \"apache\",\n    \"compressible\": true,\n    \"extensions\": [\"res\"]\n  },\n  \"application/x-dvi\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"dvi\"]\n  },\n  \"application/x-envoy\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"evy\"]\n  },\n  \"application/x-eva\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"eva\"]\n  },\n  \"application/x-font-bdf\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"bdf\"]\n  },\n  \"application/x-font-dos\": {\n    \"source\": \"apache\"\n  },\n  \"application/x-font-framemaker\": {\n    \"source\": \"apache\"\n  },\n  \"application/x-font-ghostscript\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"gsf\"]\n  },\n  \"application/x-font-libgrx\": {\n    \"source\": \"apache\"\n  },\n  \"application/x-font-linux-psf\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"psf\"]\n  },\n  \"application/x-font-pcf\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"pcf\"]\n  },\n  \"application/x-font-snf\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"snf\"]\n  },\n  \"application/x-font-speedo\": {\n    \"source\": \"apache\"\n  },\n  \"application/x-font-sunos-news\": {\n    \"source\": \"apache\"\n  },\n  \"application/x-font-type1\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"pfa\",\"pfb\",\"pfm\",\"afm\"]\n  },\n  \"application/x-font-vfont\": {\n    \"source\": \"apache\"\n  },\n  \"application/x-freearc\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"arc\"]\n  },\n  \"application/x-futuresplash\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"spl\"]\n  },\n  \"application/x-gca-compressed\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"gca\"]\n  },\n  \"application/x-glulx\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"ulx\"]\n  },\n  \"application/x-gnumeric\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"gnumeric\"]\n  },\n  \"application/x-gramps-xml\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"gramps\"]\n  },\n  \"application/x-gtar\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"gtar\"]\n  },\n  \"application/x-gzip\": {\n    \"source\": \"apache\"\n  },\n  \"application/x-hdf\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"hdf\"]\n  },\n  \"application/x-httpd-php\": {\n    \"compressible\": true,\n    \"extensions\": [\"php\"]\n  },\n  \"application/x-install-instructions\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"install\"]\n  },\n  \"application/x-iso9660-image\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"iso\"]\n  },\n  \"application/x-iwork-keynote-sffkey\": {\n    \"extensions\": [\"key\"]\n  },\n  \"application/x-iwork-numbers-sffnumbers\": {\n    \"extensions\": [\"numbers\"]\n  },\n  \"application/x-iwork-pages-sffpages\": {\n    \"extensions\": [\"pages\"]\n  },\n  \"application/x-java-archive-diff\": {\n    \"source\": \"nginx\",\n    \"extensions\": [\"jardiff\"]\n  },\n  \"application/x-java-jnlp-file\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"jnlp\"]\n  },\n  \"application/x-javascript\": {\n    \"compressible\": true\n  },\n  \"application/x-keepass2\": {\n    \"extensions\": [\"kdbx\"]\n  },\n  \"application/x-latex\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"latex\"]\n  },\n  \"application/x-lua-bytecode\": {\n    \"extensions\": [\"luac\"]\n  },\n  \"application/x-lzh-compressed\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"lzh\",\"lha\"]\n  },\n  \"application/x-makeself\": {\n    \"source\": \"nginx\",\n    \"extensions\": [\"run\"]\n  },\n  \"application/x-mie\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"mie\"]\n  },\n  \"application/x-mobipocket-ebook\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"prc\",\"mobi\"]\n  },\n  \"application/x-mpegurl\": {\n    \"compressible\": false\n  },\n  \"application/x-ms-application\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"application\"]\n  },\n  \"application/x-ms-shortcut\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"lnk\"]\n  },\n  \"application/x-ms-wmd\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"wmd\"]\n  },\n  \"application/x-ms-wmz\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"wmz\"]\n  },\n  \"application/x-ms-xbap\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"xbap\"]\n  },\n  \"application/x-msaccess\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"mdb\"]\n  },\n  \"application/x-msbinder\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"obd\"]\n  },\n  \"application/x-mscardfile\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"crd\"]\n  },\n  \"application/x-msclip\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"clp\"]\n  },\n  \"application/x-msdos-program\": {\n    \"extensions\": [\"exe\"]\n  },\n  \"application/x-msdownload\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"exe\",\"dll\",\"com\",\"bat\",\"msi\"]\n  },\n  \"application/x-msmediaview\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"mvb\",\"m13\",\"m14\"]\n  },\n  \"application/x-msmetafile\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"wmf\",\"wmz\",\"emf\",\"emz\"]\n  },\n  \"application/x-msmoney\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"mny\"]\n  },\n  \"application/x-mspublisher\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"pub\"]\n  },\n  \"application/x-msschedule\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"scd\"]\n  },\n  \"application/x-msterminal\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"trm\"]\n  },\n  \"application/x-mswrite\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"wri\"]\n  },\n  \"application/x-netcdf\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"nc\",\"cdf\"]\n  },\n  \"application/x-ns-proxy-autoconfig\": {\n    \"compressible\": true,\n    \"extensions\": [\"pac\"]\n  },\n  \"application/x-nzb\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"nzb\"]\n  },\n  \"application/x-perl\": {\n    \"source\": \"nginx\",\n    \"extensions\": [\"pl\",\"pm\"]\n  },\n  \"application/x-pilot\": {\n    \"source\": \"nginx\",\n    \"extensions\": [\"prc\",\"pdb\"]\n  },\n  \"application/x-pkcs12\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"p12\",\"pfx\"]\n  },\n  \"application/x-pkcs7-certificates\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"p7b\",\"spc\"]\n  },\n  \"application/x-pkcs7-certreqresp\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"p7r\"]\n  },\n  \"application/x-pki-message\": {\n    \"source\": \"iana\"\n  },\n  \"application/x-rar-compressed\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"rar\"]\n  },\n  \"application/x-redhat-package-manager\": {\n    \"source\": \"nginx\",\n    \"extensions\": [\"rpm\"]\n  },\n  \"application/x-research-info-systems\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"ris\"]\n  },\n  \"application/x-sea\": {\n    \"source\": \"nginx\",\n    \"extensions\": [\"sea\"]\n  },\n  \"application/x-sh\": {\n    \"source\": \"apache\",\n    \"compressible\": true,\n    \"extensions\": [\"sh\"]\n  },\n  \"application/x-shar\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"shar\"]\n  },\n  \"application/x-shockwave-flash\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"swf\"]\n  },\n  \"application/x-silverlight-app\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"xap\"]\n  },\n  \"application/x-sql\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"sql\"]\n  },\n  \"application/x-stuffit\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"sit\"]\n  },\n  \"application/x-stuffitx\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"sitx\"]\n  },\n  \"application/x-subrip\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"srt\"]\n  },\n  \"application/x-sv4cpio\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"sv4cpio\"]\n  },\n  \"application/x-sv4crc\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"sv4crc\"]\n  },\n  \"application/x-t3vm-image\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"t3\"]\n  },\n  \"application/x-tads\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"gam\"]\n  },\n  \"application/x-tar\": {\n    \"source\": \"apache\",\n    \"compressible\": true,\n    \"extensions\": [\"tar\"]\n  },\n  \"application/x-tcl\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"tcl\",\"tk\"]\n  },\n  \"application/x-tex\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"tex\"]\n  },\n  \"application/x-tex-tfm\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"tfm\"]\n  },\n  \"application/x-texinfo\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"texinfo\",\"texi\"]\n  },\n  \"application/x-tgif\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"obj\"]\n  },\n  \"application/x-ustar\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"ustar\"]\n  },\n  \"application/x-virtualbox-hdd\": {\n    \"compressible\": true,\n    \"extensions\": [\"hdd\"]\n  },\n  \"application/x-virtualbox-ova\": {\n    \"compressible\": true,\n    \"extensions\": [\"ova\"]\n  },\n  \"application/x-virtualbox-ovf\": {\n    \"compressible\": true,\n    \"extensions\": [\"ovf\"]\n  },\n  \"application/x-virtualbox-vbox\": {\n    \"compressible\": true,\n    \"extensions\": [\"vbox\"]\n  },\n  \"application/x-virtualbox-vbox-extpack\": {\n    \"compressible\": false,\n    \"extensions\": [\"vbox-extpack\"]\n  },\n  \"application/x-virtualbox-vdi\": {\n    \"compressible\": true,\n    \"extensions\": [\"vdi\"]\n  },\n  \"application/x-virtualbox-vhd\": {\n    \"compressible\": true,\n    \"extensions\": [\"vhd\"]\n  },\n  \"application/x-virtualbox-vmdk\": {\n    \"compressible\": true,\n    \"extensions\": [\"vmdk\"]\n  },\n  \"application/x-wais-source\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"src\"]\n  },\n  \"application/x-web-app-manifest+json\": {\n    \"compressible\": true,\n    \"extensions\": [\"webapp\"]\n  },\n  \"application/x-www-form-urlencoded\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/x-x509-ca-cert\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"der\",\"crt\",\"pem\"]\n  },\n  \"application/x-x509-ca-ra-cert\": {\n    \"source\": \"iana\"\n  },\n  \"application/x-x509-next-ca-cert\": {\n    \"source\": \"iana\"\n  },\n  \"application/x-xfig\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"fig\"]\n  },\n  \"application/x-xliff+xml\": {\n    \"source\": \"apache\",\n    \"compressible\": true,\n    \"extensions\": [\"xlf\"]\n  },\n  \"application/x-xpinstall\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"xpi\"]\n  },\n  \"application/x-xz\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"xz\"]\n  },\n  \"application/x-zmachine\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"z1\",\"z2\",\"z3\",\"z4\",\"z5\",\"z6\",\"z7\",\"z8\"]\n  },\n  \"application/x400-bp\": {\n    \"source\": \"iana\"\n  },\n  \"application/xacml+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/xaml+xml\": {\n    \"source\": \"apache\",\n    \"compressible\": true,\n    \"extensions\": [\"xaml\"]\n  },\n  \"application/xcap-att+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"xav\"]\n  },\n  \"application/xcap-caps+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"xca\"]\n  },\n  \"application/xcap-diff+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"xdf\"]\n  },\n  \"application/xcap-el+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"xel\"]\n  },\n  \"application/xcap-error+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/xcap-ns+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"xns\"]\n  },\n  \"application/xcon-conference-info+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/xcon-conference-info-diff+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/xenc+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"xenc\"]\n  },\n  \"application/xfdf\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"xfdf\"]\n  },\n  \"application/xhtml+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"xhtml\",\"xht\"]\n  },\n  \"application/xhtml-voice+xml\": {\n    \"source\": \"apache\",\n    \"compressible\": true\n  },\n  \"application/xliff+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"xlf\"]\n  },\n  \"application/xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"xml\",\"xsl\",\"xsd\",\"rng\"]\n  },\n  \"application/xml-dtd\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"dtd\"]\n  },\n  \"application/xml-external-parsed-entity\": {\n    \"source\": \"iana\"\n  },\n  \"application/xml-patch+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/xmpp+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/xop+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"xop\"]\n  },\n  \"application/xproc+xml\": {\n    \"source\": \"apache\",\n    \"compressible\": true,\n    \"extensions\": [\"xpl\"]\n  },\n  \"application/xslt+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"xsl\",\"xslt\"]\n  },\n  \"application/xspf+xml\": {\n    \"source\": \"apache\",\n    \"compressible\": true,\n    \"extensions\": [\"xspf\"]\n  },\n  \"application/xv+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"mxml\",\"xhvml\",\"xvml\",\"xvm\"]\n  },\n  \"application/yaml\": {\n    \"source\": \"iana\"\n  },\n  \"application/yang\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"yang\"]\n  },\n  \"application/yang-data+cbor\": {\n    \"source\": \"iana\"\n  },\n  \"application/yang-data+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/yang-data+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/yang-patch+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/yang-patch+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/yang-sid+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/yin+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"yin\"]\n  },\n  \"application/zip\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"zip\"]\n  },\n  \"application/zlib\": {\n    \"source\": \"iana\"\n  },\n  \"application/zstd\": {\n    \"source\": \"iana\"\n  },\n  \"audio/1d-interleaved-parityfec\": {\n    \"source\": \"iana\"\n  },\n  \"audio/32kadpcm\": {\n    \"source\": \"iana\"\n  },\n  \"audio/3gpp\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"3gpp\"]\n  },\n  \"audio/3gpp2\": {\n    \"source\": \"iana\"\n  },\n  \"audio/aac\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"adts\",\"aac\"]\n  },\n  \"audio/ac3\": {\n    \"source\": \"iana\"\n  },\n  \"audio/adpcm\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"adp\"]\n  },\n  \"audio/amr\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"amr\"]\n  },\n  \"audio/amr-wb\": {\n    \"source\": \"iana\"\n  },\n  \"audio/amr-wb+\": {\n    \"source\": \"iana\"\n  },\n  \"audio/aptx\": {\n    \"source\": \"iana\"\n  },\n  \"audio/asc\": {\n    \"source\": \"iana\"\n  },\n  \"audio/atrac-advanced-lossless\": {\n    \"source\": \"iana\"\n  },\n  \"audio/atrac-x\": {\n    \"source\": \"iana\"\n  },\n  \"audio/atrac3\": {\n    \"source\": \"iana\"\n  },\n  \"audio/basic\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"au\",\"snd\"]\n  },\n  \"audio/bv16\": {\n    \"source\": \"iana\"\n  },\n  \"audio/bv32\": {\n    \"source\": \"iana\"\n  },\n  \"audio/clearmode\": {\n    \"source\": \"iana\"\n  },\n  \"audio/cn\": {\n    \"source\": \"iana\"\n  },\n  \"audio/dat12\": {\n    \"source\": \"iana\"\n  },\n  \"audio/dls\": {\n    \"source\": \"iana\"\n  },\n  \"audio/dsr-es201108\": {\n    \"source\": \"iana\"\n  },\n  \"audio/dsr-es202050\": {\n    \"source\": \"iana\"\n  },\n  \"audio/dsr-es202211\": {\n    \"source\": \"iana\"\n  },\n  \"audio/dsr-es202212\": {\n    \"source\": \"iana\"\n  },\n  \"audio/dv\": {\n    \"source\": \"iana\"\n  },\n  \"audio/dvi4\": {\n    \"source\": \"iana\"\n  },\n  \"audio/eac3\": {\n    \"source\": \"iana\"\n  },\n  \"audio/encaprtp\": {\n    \"source\": \"iana\"\n  },\n  \"audio/evrc\": {\n    \"source\": \"iana\"\n  },\n  \"audio/evrc-qcp\": {\n    \"source\": \"iana\"\n  },\n  \"audio/evrc0\": {\n    \"source\": \"iana\"\n  },\n  \"audio/evrc1\": {\n    \"source\": \"iana\"\n  },\n  \"audio/evrcb\": {\n    \"source\": \"iana\"\n  },\n  \"audio/evrcb0\": {\n    \"source\": \"iana\"\n  },\n  \"audio/evrcb1\": {\n    \"source\": \"iana\"\n  },\n  \"audio/evrcnw\": {\n    \"source\": \"iana\"\n  },\n  \"audio/evrcnw0\": {\n    \"source\": \"iana\"\n  },\n  \"audio/evrcnw1\": {\n    \"source\": \"iana\"\n  },\n  \"audio/evrcwb\": {\n    \"source\": \"iana\"\n  },\n  \"audio/evrcwb0\": {\n    \"source\": \"iana\"\n  },\n  \"audio/evrcwb1\": {\n    \"source\": \"iana\"\n  },\n  \"audio/evs\": {\n    \"source\": \"iana\"\n  },\n  \"audio/flac\": {\n    \"source\": \"iana\"\n  },\n  \"audio/flexfec\": {\n    \"source\": \"iana\"\n  },\n  \"audio/fwdred\": {\n    \"source\": \"iana\"\n  },\n  \"audio/g711-0\": {\n    \"source\": \"iana\"\n  },\n  \"audio/g719\": {\n    \"source\": \"iana\"\n  },\n  \"audio/g722\": {\n    \"source\": \"iana\"\n  },\n  \"audio/g7221\": {\n    \"source\": \"iana\"\n  },\n  \"audio/g723\": {\n    \"source\": \"iana\"\n  },\n  \"audio/g726-16\": {\n    \"source\": \"iana\"\n  },\n  \"audio/g726-24\": {\n    \"source\": \"iana\"\n  },\n  \"audio/g726-32\": {\n    \"source\": \"iana\"\n  },\n  \"audio/g726-40\": {\n    \"source\": \"iana\"\n  },\n  \"audio/g728\": {\n    \"source\": \"iana\"\n  },\n  \"audio/g729\": {\n    \"source\": \"iana\"\n  },\n  \"audio/g7291\": {\n    \"source\": \"iana\"\n  },\n  \"audio/g729d\": {\n    \"source\": \"iana\"\n  },\n  \"audio/g729e\": {\n    \"source\": \"iana\"\n  },\n  \"audio/gsm\": {\n    \"source\": \"iana\"\n  },\n  \"audio/gsm-efr\": {\n    \"source\": \"iana\"\n  },\n  \"audio/gsm-hr-08\": {\n    \"source\": \"iana\"\n  },\n  \"audio/ilbc\": {\n    \"source\": \"iana\"\n  },\n  \"audio/ip-mr_v2.5\": {\n    \"source\": \"iana\"\n  },\n  \"audio/isac\": {\n    \"source\": \"apache\"\n  },\n  \"audio/l16\": {\n    \"source\": \"iana\"\n  },\n  \"audio/l20\": {\n    \"source\": \"iana\"\n  },\n  \"audio/l24\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"audio/l8\": {\n    \"source\": \"iana\"\n  },\n  \"audio/lpc\": {\n    \"source\": \"iana\"\n  },\n  \"audio/matroska\": {\n    \"source\": \"iana\"\n  },\n  \"audio/melp\": {\n    \"source\": \"iana\"\n  },\n  \"audio/melp1200\": {\n    \"source\": \"iana\"\n  },\n  \"audio/melp2400\": {\n    \"source\": \"iana\"\n  },\n  \"audio/melp600\": {\n    \"source\": \"iana\"\n  },\n  \"audio/mhas\": {\n    \"source\": \"iana\"\n  },\n  \"audio/midi\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"mid\",\"midi\",\"kar\",\"rmi\"]\n  },\n  \"audio/midi-clip\": {\n    \"source\": \"iana\"\n  },\n  \"audio/mobile-xmf\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mxmf\"]\n  },\n  \"audio/mp3\": {\n    \"compressible\": false,\n    \"extensions\": [\"mp3\"]\n  },\n  \"audio/mp4\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"m4a\",\"mp4a\"]\n  },\n  \"audio/mp4a-latm\": {\n    \"source\": \"iana\"\n  },\n  \"audio/mpa\": {\n    \"source\": \"iana\"\n  },\n  \"audio/mpa-robust\": {\n    \"source\": \"iana\"\n  },\n  \"audio/mpeg\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"mpga\",\"mp2\",\"mp2a\",\"mp3\",\"m2a\",\"m3a\"]\n  },\n  \"audio/mpeg4-generic\": {\n    \"source\": \"iana\"\n  },\n  \"audio/musepack\": {\n    \"source\": \"apache\"\n  },\n  \"audio/ogg\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"oga\",\"ogg\",\"spx\",\"opus\"]\n  },\n  \"audio/opus\": {\n    \"source\": \"iana\"\n  },\n  \"audio/parityfec\": {\n    \"source\": \"iana\"\n  },\n  \"audio/pcma\": {\n    \"source\": \"iana\"\n  },\n  \"audio/pcma-wb\": {\n    \"source\": \"iana\"\n  },\n  \"audio/pcmu\": {\n    \"source\": \"iana\"\n  },\n  \"audio/pcmu-wb\": {\n    \"source\": \"iana\"\n  },\n  \"audio/prs.sid\": {\n    \"source\": \"iana\"\n  },\n  \"audio/qcelp\": {\n    \"source\": \"iana\"\n  },\n  \"audio/raptorfec\": {\n    \"source\": \"iana\"\n  },\n  \"audio/red\": {\n    \"source\": \"iana\"\n  },\n  \"audio/rtp-enc-aescm128\": {\n    \"source\": \"iana\"\n  },\n  \"audio/rtp-midi\": {\n    \"source\": \"iana\"\n  },\n  \"audio/rtploopback\": {\n    \"source\": \"iana\"\n  },\n  \"audio/rtx\": {\n    \"source\": \"iana\"\n  },\n  \"audio/s3m\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"s3m\"]\n  },\n  \"audio/scip\": {\n    \"source\": \"iana\"\n  },\n  \"audio/silk\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"sil\"]\n  },\n  \"audio/smv\": {\n    \"source\": \"iana\"\n  },\n  \"audio/smv-qcp\": {\n    \"source\": \"iana\"\n  },\n  \"audio/smv0\": {\n    \"source\": \"iana\"\n  },\n  \"audio/sofa\": {\n    \"source\": \"iana\"\n  },\n  \"audio/sp-midi\": {\n    \"source\": \"iana\"\n  },\n  \"audio/speex\": {\n    \"source\": \"iana\"\n  },\n  \"audio/t140c\": {\n    \"source\": \"iana\"\n  },\n  \"audio/t38\": {\n    \"source\": \"iana\"\n  },\n  \"audio/telephone-event\": {\n    \"source\": \"iana\"\n  },\n  \"audio/tetra_acelp\": {\n    \"source\": \"iana\"\n  },\n  \"audio/tetra_acelp_bb\": {\n    \"source\": \"iana\"\n  },\n  \"audio/tone\": {\n    \"source\": \"iana\"\n  },\n  \"audio/tsvcis\": {\n    \"source\": \"iana\"\n  },\n  \"audio/uemclip\": {\n    \"source\": \"iana\"\n  },\n  \"audio/ulpfec\": {\n    \"source\": \"iana\"\n  },\n  \"audio/usac\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vdvi\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vmr-wb\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.3gpp.iufp\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.4sb\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.audiokoz\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.celp\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.cisco.nse\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.cmles.radio-events\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.cns.anp1\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.cns.inf1\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.dece.audio\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"uva\",\"uvva\"]\n  },\n  \"audio/vnd.digital-winds\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"eol\"]\n  },\n  \"audio/vnd.dlna.adts\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.dolby.heaac.1\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.dolby.heaac.2\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.dolby.mlp\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.dolby.mps\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.dolby.pl2\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.dolby.pl2x\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.dolby.pl2z\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.dolby.pulse.1\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.dra\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"dra\"]\n  },\n  \"audio/vnd.dts\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"dts\"]\n  },\n  \"audio/vnd.dts.hd\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"dtshd\"]\n  },\n  \"audio/vnd.dts.uhd\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.dvb.file\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.everad.plj\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.hns.audio\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.lucent.voice\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"lvp\"]\n  },\n  \"audio/vnd.ms-playready.media.pya\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"pya\"]\n  },\n  \"audio/vnd.nokia.mobile-xmf\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.nortel.vbk\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.nuera.ecelp4800\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ecelp4800\"]\n  },\n  \"audio/vnd.nuera.ecelp7470\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ecelp7470\"]\n  },\n  \"audio/vnd.nuera.ecelp9600\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ecelp9600\"]\n  },\n  \"audio/vnd.octel.sbc\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.presonus.multitrack\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.qcelp\": {\n    \"source\": \"apache\"\n  },\n  \"audio/vnd.rhetorex.32kadpcm\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.rip\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"rip\"]\n  },\n  \"audio/vnd.rn-realaudio\": {\n    \"compressible\": false\n  },\n  \"audio/vnd.sealedmedia.softseal.mpeg\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.vmx.cvsd\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.wave\": {\n    \"compressible\": false\n  },\n  \"audio/vorbis\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"audio/vorbis-config\": {\n    \"source\": \"iana\"\n  },\n  \"audio/wav\": {\n    \"compressible\": false,\n    \"extensions\": [\"wav\"]\n  },\n  \"audio/wave\": {\n    \"compressible\": false,\n    \"extensions\": [\"wav\"]\n  },\n  \"audio/webm\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"weba\"]\n  },\n  \"audio/x-aac\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"aac\"]\n  },\n  \"audio/x-aiff\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"aif\",\"aiff\",\"aifc\"]\n  },\n  \"audio/x-caf\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"caf\"]\n  },\n  \"audio/x-flac\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"flac\"]\n  },\n  \"audio/x-m4a\": {\n    \"source\": \"nginx\",\n    \"extensions\": [\"m4a\"]\n  },\n  \"audio/x-matroska\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"mka\"]\n  },\n  \"audio/x-mpegurl\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"m3u\"]\n  },\n  \"audio/x-ms-wax\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"wax\"]\n  },\n  \"audio/x-ms-wma\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"wma\"]\n  },\n  \"audio/x-pn-realaudio\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"ram\",\"ra\"]\n  },\n  \"audio/x-pn-realaudio-plugin\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"rmp\"]\n  },\n  \"audio/x-realaudio\": {\n    \"source\": \"nginx\",\n    \"extensions\": [\"ra\"]\n  },\n  \"audio/x-tta\": {\n    \"source\": \"apache\"\n  },\n  \"audio/x-wav\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"wav\"]\n  },\n  \"audio/xm\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"xm\"]\n  },\n  \"chemical/x-cdx\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"cdx\"]\n  },\n  \"chemical/x-cif\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"cif\"]\n  },\n  \"chemical/x-cmdf\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"cmdf\"]\n  },\n  \"chemical/x-cml\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"cml\"]\n  },\n  \"chemical/x-csml\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"csml\"]\n  },\n  \"chemical/x-pdb\": {\n    \"source\": \"apache\"\n  },\n  \"chemical/x-xyz\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"xyz\"]\n  },\n  \"font/collection\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ttc\"]\n  },\n  \"font/otf\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"otf\"]\n  },\n  \"font/sfnt\": {\n    \"source\": \"iana\"\n  },\n  \"font/ttf\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"ttf\"]\n  },\n  \"font/woff\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"woff\"]\n  },\n  \"font/woff2\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"woff2\"]\n  },\n  \"image/aces\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"exr\"]\n  },\n  \"image/apng\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"apng\"]\n  },\n  \"image/avci\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"avci\"]\n  },\n  \"image/avcs\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"avcs\"]\n  },\n  \"image/avif\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"avif\"]\n  },\n  \"image/bmp\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"bmp\",\"dib\"]\n  },\n  \"image/cgm\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"cgm\"]\n  },\n  \"image/dicom-rle\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"drle\"]\n  },\n  \"image/dpx\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"dpx\"]\n  },\n  \"image/emf\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"emf\"]\n  },\n  \"image/fits\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"fits\"]\n  },\n  \"image/g3fax\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"g3\"]\n  },\n  \"image/gif\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"gif\"]\n  },\n  \"image/heic\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"heic\"]\n  },\n  \"image/heic-sequence\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"heics\"]\n  },\n  \"image/heif\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"heif\"]\n  },\n  \"image/heif-sequence\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"heifs\"]\n  },\n  \"image/hej2k\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"hej2\"]\n  },\n  \"image/hsj2\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"hsj2\"]\n  },\n  \"image/ief\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ief\"]\n  },\n  \"image/j2c\": {\n    \"source\": \"iana\"\n  },\n  \"image/jls\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"jls\"]\n  },\n  \"image/jp2\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"jp2\",\"jpg2\"]\n  },\n  \"image/jpeg\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"jpeg\",\"jpg\",\"jpe\"]\n  },\n  \"image/jph\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"jph\"]\n  },\n  \"image/jphc\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"jhc\"]\n  },\n  \"image/jpm\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"jpm\",\"jpgm\"]\n  },\n  \"image/jpx\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"jpx\",\"jpf\"]\n  },\n  \"image/jxl\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"jxl\"]\n  },\n  \"image/jxr\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"jxr\"]\n  },\n  \"image/jxra\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"jxra\"]\n  },\n  \"image/jxrs\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"jxrs\"]\n  },\n  \"image/jxs\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"jxs\"]\n  },\n  \"image/jxsc\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"jxsc\"]\n  },\n  \"image/jxsi\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"jxsi\"]\n  },\n  \"image/jxss\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"jxss\"]\n  },\n  \"image/ktx\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ktx\"]\n  },\n  \"image/ktx2\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ktx2\"]\n  },\n  \"image/naplps\": {\n    \"source\": \"iana\"\n  },\n  \"image/pjpeg\": {\n    \"compressible\": false\n  },\n  \"image/png\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"png\"]\n  },\n  \"image/prs.btif\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"btif\",\"btf\"]\n  },\n  \"image/prs.pti\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"pti\"]\n  },\n  \"image/pwg-raster\": {\n    \"source\": \"iana\"\n  },\n  \"image/sgi\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"sgi\"]\n  },\n  \"image/svg+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"svg\",\"svgz\"]\n  },\n  \"image/t38\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"t38\"]\n  },\n  \"image/tiff\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"tif\",\"tiff\"]\n  },\n  \"image/tiff-fx\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"tfx\"]\n  },\n  \"image/vnd.adobe.photoshop\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"psd\"]\n  },\n  \"image/vnd.airzip.accelerator.azv\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"azv\"]\n  },\n  \"image/vnd.cns.inf2\": {\n    \"source\": \"iana\"\n  },\n  \"image/vnd.dece.graphic\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"uvi\",\"uvvi\",\"uvg\",\"uvvg\"]\n  },\n  \"image/vnd.djvu\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"djvu\",\"djv\"]\n  },\n  \"image/vnd.dvb.subtitle\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"sub\"]\n  },\n  \"image/vnd.dwg\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"dwg\"]\n  },\n  \"image/vnd.dxf\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"dxf\"]\n  },\n  \"image/vnd.fastbidsheet\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"fbs\"]\n  },\n  \"image/vnd.fpx\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"fpx\"]\n  },\n  \"image/vnd.fst\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"fst\"]\n  },\n  \"image/vnd.fujixerox.edmics-mmr\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mmr\"]\n  },\n  \"image/vnd.fujixerox.edmics-rlc\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"rlc\"]\n  },\n  \"image/vnd.globalgraphics.pgb\": {\n    \"source\": \"iana\"\n  },\n  \"image/vnd.microsoft.icon\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"ico\"]\n  },\n  \"image/vnd.mix\": {\n    \"source\": \"iana\"\n  },\n  \"image/vnd.mozilla.apng\": {\n    \"source\": \"iana\"\n  },\n  \"image/vnd.ms-dds\": {\n    \"compressible\": true,\n    \"extensions\": [\"dds\"]\n  },\n  \"image/vnd.ms-modi\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mdi\"]\n  },\n  \"image/vnd.ms-photo\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"wdp\"]\n  },\n  \"image/vnd.net-fpx\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"npx\"]\n  },\n  \"image/vnd.pco.b16\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"b16\"]\n  },\n  \"image/vnd.radiance\": {\n    \"source\": \"iana\"\n  },\n  \"image/vnd.sealed.png\": {\n    \"source\": \"iana\"\n  },\n  \"image/vnd.sealedmedia.softseal.gif\": {\n    \"source\": \"iana\"\n  },\n  \"image/vnd.sealedmedia.softseal.jpg\": {\n    \"source\": \"iana\"\n  },\n  \"image/vnd.svf\": {\n    \"source\": \"iana\"\n  },\n  \"image/vnd.tencent.tap\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"tap\"]\n  },\n  \"image/vnd.valve.source.texture\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"vtf\"]\n  },\n  \"image/vnd.wap.wbmp\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"wbmp\"]\n  },\n  \"image/vnd.xiff\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"xif\"]\n  },\n  \"image/vnd.zbrush.pcx\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"pcx\"]\n  },\n  \"image/webp\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"webp\"]\n  },\n  \"image/wmf\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"wmf\"]\n  },\n  \"image/x-3ds\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"3ds\"]\n  },\n  \"image/x-cmu-raster\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"ras\"]\n  },\n  \"image/x-cmx\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"cmx\"]\n  },\n  \"image/x-freehand\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"fh\",\"fhc\",\"fh4\",\"fh5\",\"fh7\"]\n  },\n  \"image/x-icon\": {\n    \"source\": \"apache\",\n    \"compressible\": true,\n    \"extensions\": [\"ico\"]\n  },\n  \"image/x-jng\": {\n    \"source\": \"nginx\",\n    \"extensions\": [\"jng\"]\n  },\n  \"image/x-mrsid-image\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"sid\"]\n  },\n  \"image/x-ms-bmp\": {\n    \"source\": \"nginx\",\n    \"compressible\": true,\n    \"extensions\": [\"bmp\"]\n  },\n  \"image/x-pcx\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"pcx\"]\n  },\n  \"image/x-pict\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"pic\",\"pct\"]\n  },\n  \"image/x-portable-anymap\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"pnm\"]\n  },\n  \"image/x-portable-bitmap\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"pbm\"]\n  },\n  \"image/x-portable-graymap\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"pgm\"]\n  },\n  \"image/x-portable-pixmap\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"ppm\"]\n  },\n  \"image/x-rgb\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"rgb\"]\n  },\n  \"image/x-tga\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"tga\"]\n  },\n  \"image/x-xbitmap\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"xbm\"]\n  },\n  \"image/x-xcf\": {\n    \"compressible\": false\n  },\n  \"image/x-xpixmap\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"xpm\"]\n  },\n  \"image/x-xwindowdump\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"xwd\"]\n  },\n  \"message/bhttp\": {\n    \"source\": \"iana\"\n  },\n  \"message/cpim\": {\n    \"source\": \"iana\"\n  },\n  \"message/delivery-status\": {\n    \"source\": \"iana\"\n  },\n  \"message/disposition-notification\": {\n    \"source\": \"iana\",\n    \"extensions\": [\n      \"disposition-notification\"\n    ]\n  },\n  \"message/external-body\": {\n    \"source\": \"iana\"\n  },\n  \"message/feedback-report\": {\n    \"source\": \"iana\"\n  },\n  \"message/global\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"u8msg\"]\n  },\n  \"message/global-delivery-status\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"u8dsn\"]\n  },\n  \"message/global-disposition-notification\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"u8mdn\"]\n  },\n  \"message/global-headers\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"u8hdr\"]\n  },\n  \"message/http\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"message/imdn+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"message/mls\": {\n    \"source\": \"iana\"\n  },\n  \"message/news\": {\n    \"source\": \"apache\"\n  },\n  \"message/ohttp-req\": {\n    \"source\": \"iana\"\n  },\n  \"message/ohttp-res\": {\n    \"source\": \"iana\"\n  },\n  \"message/partial\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"message/rfc822\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"eml\",\"mime\"]\n  },\n  \"message/s-http\": {\n    \"source\": \"apache\"\n  },\n  \"message/sip\": {\n    \"source\": \"iana\"\n  },\n  \"message/sipfrag\": {\n    \"source\": \"iana\"\n  },\n  \"message/tracking-status\": {\n    \"source\": \"iana\"\n  },\n  \"message/vnd.si.simp\": {\n    \"source\": \"apache\"\n  },\n  \"message/vnd.wfa.wsc\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"wsc\"]\n  },\n  \"model/3mf\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"3mf\"]\n  },\n  \"model/e57\": {\n    \"source\": \"iana\"\n  },\n  \"model/gltf+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"gltf\"]\n  },\n  \"model/gltf-binary\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"glb\"]\n  },\n  \"model/iges\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"igs\",\"iges\"]\n  },\n  \"model/jt\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"jt\"]\n  },\n  \"model/mesh\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"msh\",\"mesh\",\"silo\"]\n  },\n  \"model/mtl\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mtl\"]\n  },\n  \"model/obj\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"obj\"]\n  },\n  \"model/prc\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"prc\"]\n  },\n  \"model/step\": {\n    \"source\": \"iana\"\n  },\n  \"model/step+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"stpx\"]\n  },\n  \"model/step+zip\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"stpz\"]\n  },\n  \"model/step-xml+zip\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"stpxz\"]\n  },\n  \"model/stl\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"stl\"]\n  },\n  \"model/u3d\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"u3d\"]\n  },\n  \"model/vnd.bary\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"bary\"]\n  },\n  \"model/vnd.cld\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"cld\"]\n  },\n  \"model/vnd.collada+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"dae\"]\n  },\n  \"model/vnd.dwf\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"dwf\"]\n  },\n  \"model/vnd.flatland.3dml\": {\n    \"source\": \"iana\"\n  },\n  \"model/vnd.gdl\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"gdl\"]\n  },\n  \"model/vnd.gs-gdl\": {\n    \"source\": \"apache\"\n  },\n  \"model/vnd.gs.gdl\": {\n    \"source\": \"iana\"\n  },\n  \"model/vnd.gtw\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"gtw\"]\n  },\n  \"model/vnd.moml+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"model/vnd.mts\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mts\"]\n  },\n  \"model/vnd.opengex\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ogex\"]\n  },\n  \"model/vnd.parasolid.transmit.binary\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"x_b\"]\n  },\n  \"model/vnd.parasolid.transmit.text\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"x_t\"]\n  },\n  \"model/vnd.pytha.pyox\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"pyo\",\"pyox\"]\n  },\n  \"model/vnd.rosette.annotated-data-model\": {\n    \"source\": \"iana\"\n  },\n  \"model/vnd.sap.vds\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"vds\"]\n  },\n  \"model/vnd.usda\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"usda\"]\n  },\n  \"model/vnd.usdz+zip\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"usdz\"]\n  },\n  \"model/vnd.valve.source.compiled-map\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"bsp\"]\n  },\n  \"model/vnd.vtu\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"vtu\"]\n  },\n  \"model/vrml\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"wrl\",\"vrml\"]\n  },\n  \"model/x3d+binary\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"x3db\",\"x3dbz\"]\n  },\n  \"model/x3d+fastinfoset\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"x3db\"]\n  },\n  \"model/x3d+vrml\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"x3dv\",\"x3dvz\"]\n  },\n  \"model/x3d+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"x3d\",\"x3dz\"]\n  },\n  \"model/x3d-vrml\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"x3dv\"]\n  },\n  \"multipart/alternative\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"multipart/appledouble\": {\n    \"source\": \"iana\"\n  },\n  \"multipart/byteranges\": {\n    \"source\": \"iana\"\n  },\n  \"multipart/digest\": {\n    \"source\": \"iana\"\n  },\n  \"multipart/encrypted\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"multipart/form-data\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"multipart/header-set\": {\n    \"source\": \"iana\"\n  },\n  \"multipart/mixed\": {\n    \"source\": \"iana\"\n  },\n  \"multipart/multilingual\": {\n    \"source\": \"iana\"\n  },\n  \"multipart/parallel\": {\n    \"source\": \"iana\"\n  },\n  \"multipart/related\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"multipart/report\": {\n    \"source\": \"iana\"\n  },\n  \"multipart/signed\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"multipart/vnd.bint.med-plus\": {\n    \"source\": \"iana\"\n  },\n  \"multipart/voice-message\": {\n    \"source\": \"iana\"\n  },\n  \"multipart/x-mixed-replace\": {\n    \"source\": \"iana\"\n  },\n  \"text/1d-interleaved-parityfec\": {\n    \"source\": \"iana\"\n  },\n  \"text/cache-manifest\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"appcache\",\"manifest\"]\n  },\n  \"text/calendar\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ics\",\"ifb\"]\n  },\n  \"text/calender\": {\n    \"compressible\": true\n  },\n  \"text/cmd\": {\n    \"compressible\": true\n  },\n  \"text/coffeescript\": {\n    \"extensions\": [\"coffee\",\"litcoffee\"]\n  },\n  \"text/cql\": {\n    \"source\": \"iana\"\n  },\n  \"text/cql-expression\": {\n    \"source\": \"iana\"\n  },\n  \"text/cql-identifier\": {\n    \"source\": \"iana\"\n  },\n  \"text/css\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"compressible\": true,\n    \"extensions\": [\"css\"]\n  },\n  \"text/csv\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"csv\"]\n  },\n  \"text/csv-schema\": {\n    \"source\": \"iana\"\n  },\n  \"text/directory\": {\n    \"source\": \"iana\"\n  },\n  \"text/dns\": {\n    \"source\": \"iana\"\n  },\n  \"text/ecmascript\": {\n    \"source\": \"apache\"\n  },\n  \"text/encaprtp\": {\n    \"source\": \"iana\"\n  },\n  \"text/enriched\": {\n    \"source\": \"iana\"\n  },\n  \"text/fhirpath\": {\n    \"source\": \"iana\"\n  },\n  \"text/flexfec\": {\n    \"source\": \"iana\"\n  },\n  \"text/fwdred\": {\n    \"source\": \"iana\"\n  },\n  \"text/gff3\": {\n    \"source\": \"iana\"\n  },\n  \"text/grammar-ref-list\": {\n    \"source\": \"iana\"\n  },\n  \"text/hl7v2\": {\n    \"source\": \"iana\"\n  },\n  \"text/html\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"html\",\"htm\",\"shtml\"]\n  },\n  \"text/jade\": {\n    \"extensions\": [\"jade\"]\n  },\n  \"text/javascript\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"compressible\": true,\n    \"extensions\": [\"js\",\"mjs\"]\n  },\n  \"text/jcr-cnd\": {\n    \"source\": \"iana\"\n  },\n  \"text/jsx\": {\n    \"compressible\": true,\n    \"extensions\": [\"jsx\"]\n  },\n  \"text/less\": {\n    \"compressible\": true,\n    \"extensions\": [\"less\"]\n  },\n  \"text/markdown\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"md\",\"markdown\"]\n  },\n  \"text/mathml\": {\n    \"source\": \"nginx\",\n    \"extensions\": [\"mml\"]\n  },\n  \"text/mdx\": {\n    \"compressible\": true,\n    \"extensions\": [\"mdx\"]\n  },\n  \"text/mizar\": {\n    \"source\": \"iana\"\n  },\n  \"text/n3\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"compressible\": true,\n    \"extensions\": [\"n3\"]\n  },\n  \"text/parameters\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\"\n  },\n  \"text/parityfec\": {\n    \"source\": \"iana\"\n  },\n  \"text/plain\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"txt\",\"text\",\"conf\",\"def\",\"list\",\"log\",\"in\",\"ini\"]\n  },\n  \"text/provenance-notation\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\"\n  },\n  \"text/prs.fallenstein.rst\": {\n    \"source\": \"iana\"\n  },\n  \"text/prs.lines.tag\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"dsc\"]\n  },\n  \"text/prs.prop.logic\": {\n    \"source\": \"iana\"\n  },\n  \"text/prs.texi\": {\n    \"source\": \"iana\"\n  },\n  \"text/raptorfec\": {\n    \"source\": \"iana\"\n  },\n  \"text/red\": {\n    \"source\": \"iana\"\n  },\n  \"text/rfc822-headers\": {\n    \"source\": \"iana\"\n  },\n  \"text/richtext\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"rtx\"]\n  },\n  \"text/rtf\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"rtf\"]\n  },\n  \"text/rtp-enc-aescm128\": {\n    \"source\": \"iana\"\n  },\n  \"text/rtploopback\": {\n    \"source\": \"iana\"\n  },\n  \"text/rtx\": {\n    \"source\": \"iana\"\n  },\n  \"text/sgml\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"sgml\",\"sgm\"]\n  },\n  \"text/shaclc\": {\n    \"source\": \"iana\"\n  },\n  \"text/shex\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"shex\"]\n  },\n  \"text/slim\": {\n    \"extensions\": [\"slim\",\"slm\"]\n  },\n  \"text/spdx\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"spdx\"]\n  },\n  \"text/strings\": {\n    \"source\": \"iana\"\n  },\n  \"text/stylus\": {\n    \"extensions\": [\"stylus\",\"styl\"]\n  },\n  \"text/t140\": {\n    \"source\": \"iana\"\n  },\n  \"text/tab-separated-values\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"tsv\"]\n  },\n  \"text/troff\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"t\",\"tr\",\"roff\",\"man\",\"me\",\"ms\"]\n  },\n  \"text/turtle\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"extensions\": [\"ttl\"]\n  },\n  \"text/ulpfec\": {\n    \"source\": \"iana\"\n  },\n  \"text/uri-list\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"uri\",\"uris\",\"urls\"]\n  },\n  \"text/vcard\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"vcard\"]\n  },\n  \"text/vnd.a\": {\n    \"source\": \"iana\"\n  },\n  \"text/vnd.abc\": {\n    \"source\": \"iana\"\n  },\n  \"text/vnd.ascii-art\": {\n    \"source\": \"iana\"\n  },\n  \"text/vnd.curl\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"curl\"]\n  },\n  \"text/vnd.curl.dcurl\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"dcurl\"]\n  },\n  \"text/vnd.curl.mcurl\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"mcurl\"]\n  },\n  \"text/vnd.curl.scurl\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"scurl\"]\n  },\n  \"text/vnd.debian.copyright\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\"\n  },\n  \"text/vnd.dmclientscript\": {\n    \"source\": \"iana\"\n  },\n  \"text/vnd.dvb.subtitle\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"sub\"]\n  },\n  \"text/vnd.esmertec.theme-descriptor\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\"\n  },\n  \"text/vnd.exchangeable\": {\n    \"source\": \"iana\"\n  },\n  \"text/vnd.familysearch.gedcom\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ged\"]\n  },\n  \"text/vnd.ficlab.flt\": {\n    \"source\": \"iana\"\n  },\n  \"text/vnd.fly\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"fly\"]\n  },\n  \"text/vnd.fmi.flexstor\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"flx\"]\n  },\n  \"text/vnd.gml\": {\n    \"source\": \"iana\"\n  },\n  \"text/vnd.graphviz\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"gv\"]\n  },\n  \"text/vnd.hans\": {\n    \"source\": \"iana\"\n  },\n  \"text/vnd.hgl\": {\n    \"source\": \"iana\"\n  },\n  \"text/vnd.in3d.3dml\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"3dml\"]\n  },\n  \"text/vnd.in3d.spot\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"spot\"]\n  },\n  \"text/vnd.iptc.newsml\": {\n    \"source\": \"iana\"\n  },\n  \"text/vnd.iptc.nitf\": {\n    \"source\": \"iana\"\n  },\n  \"text/vnd.latex-z\": {\n    \"source\": \"iana\"\n  },\n  \"text/vnd.motorola.reflex\": {\n    \"source\": \"iana\"\n  },\n  \"text/vnd.ms-mediapackage\": {\n    \"source\": \"iana\"\n  },\n  \"text/vnd.net2phone.commcenter.command\": {\n    \"source\": \"iana\"\n  },\n  \"text/vnd.radisys.msml-basic-layout\": {\n    \"source\": \"iana\"\n  },\n  \"text/vnd.senx.warpscript\": {\n    \"source\": \"iana\"\n  },\n  \"text/vnd.si.uricatalogue\": {\n    \"source\": \"apache\"\n  },\n  \"text/vnd.sosi\": {\n    \"source\": \"iana\"\n  },\n  \"text/vnd.sun.j2me.app-descriptor\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"extensions\": [\"jad\"]\n  },\n  \"text/vnd.trolltech.linguist\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\"\n  },\n  \"text/vnd.vcf\": {\n    \"source\": \"iana\"\n  },\n  \"text/vnd.wap.si\": {\n    \"source\": \"iana\"\n  },\n  \"text/vnd.wap.sl\": {\n    \"source\": \"iana\"\n  },\n  \"text/vnd.wap.wml\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"wml\"]\n  },\n  \"text/vnd.wap.wmlscript\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"wmls\"]\n  },\n  \"text/vnd.zoo.kcl\": {\n    \"source\": \"iana\"\n  },\n  \"text/vtt\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"compressible\": true,\n    \"extensions\": [\"vtt\"]\n  },\n  \"text/wgsl\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"wgsl\"]\n  },\n  \"text/x-asm\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"s\",\"asm\"]\n  },\n  \"text/x-c\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"c\",\"cc\",\"cxx\",\"cpp\",\"h\",\"hh\",\"dic\"]\n  },\n  \"text/x-component\": {\n    \"source\": \"nginx\",\n    \"extensions\": [\"htc\"]\n  },\n  \"text/x-fortran\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"f\",\"for\",\"f77\",\"f90\"]\n  },\n  \"text/x-gwt-rpc\": {\n    \"compressible\": true\n  },\n  \"text/x-handlebars-template\": {\n    \"extensions\": [\"hbs\"]\n  },\n  \"text/x-java-source\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"java\"]\n  },\n  \"text/x-jquery-tmpl\": {\n    \"compressible\": true\n  },\n  \"text/x-lua\": {\n    \"extensions\": [\"lua\"]\n  },\n  \"text/x-markdown\": {\n    \"compressible\": true,\n    \"extensions\": [\"mkd\"]\n  },\n  \"text/x-nfo\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"nfo\"]\n  },\n  \"text/x-opml\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"opml\"]\n  },\n  \"text/x-org\": {\n    \"compressible\": true,\n    \"extensions\": [\"org\"]\n  },\n  \"text/x-pascal\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"p\",\"pas\"]\n  },\n  \"text/x-processing\": {\n    \"compressible\": true,\n    \"extensions\": [\"pde\"]\n  },\n  \"text/x-sass\": {\n    \"extensions\": [\"sass\"]\n  },\n  \"text/x-scss\": {\n    \"extensions\": [\"scss\"]\n  },\n  \"text/x-setext\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"etx\"]\n  },\n  \"text/x-sfv\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"sfv\"]\n  },\n  \"text/x-suse-ymp\": {\n    \"compressible\": true,\n    \"extensions\": [\"ymp\"]\n  },\n  \"text/x-uuencode\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"uu\"]\n  },\n  \"text/x-vcalendar\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"vcs\"]\n  },\n  \"text/x-vcard\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"vcf\"]\n  },\n  \"text/xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"xml\"]\n  },\n  \"text/xml-external-parsed-entity\": {\n    \"source\": \"iana\"\n  },\n  \"text/yaml\": {\n    \"compressible\": true,\n    \"extensions\": [\"yaml\",\"yml\"]\n  },\n  \"video/1d-interleaved-parityfec\": {\n    \"source\": \"iana\"\n  },\n  \"video/3gpp\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"3gp\",\"3gpp\"]\n  },\n  \"video/3gpp-tt\": {\n    \"source\": \"iana\"\n  },\n  \"video/3gpp2\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"3g2\"]\n  },\n  \"video/av1\": {\n    \"source\": \"iana\"\n  },\n  \"video/bmpeg\": {\n    \"source\": \"iana\"\n  },\n  \"video/bt656\": {\n    \"source\": \"iana\"\n  },\n  \"video/celb\": {\n    \"source\": \"iana\"\n  },\n  \"video/dv\": {\n    \"source\": \"iana\"\n  },\n  \"video/encaprtp\": {\n    \"source\": \"iana\"\n  },\n  \"video/evc\": {\n    \"source\": \"iana\"\n  },\n  \"video/ffv1\": {\n    \"source\": \"iana\"\n  },\n  \"video/flexfec\": {\n    \"source\": \"iana\"\n  },\n  \"video/h261\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"h261\"]\n  },\n  \"video/h263\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"h263\"]\n  },\n  \"video/h263-1998\": {\n    \"source\": \"iana\"\n  },\n  \"video/h263-2000\": {\n    \"source\": \"iana\"\n  },\n  \"video/h264\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"h264\"]\n  },\n  \"video/h264-rcdo\": {\n    \"source\": \"iana\"\n  },\n  \"video/h264-svc\": {\n    \"source\": \"iana\"\n  },\n  \"video/h265\": {\n    \"source\": \"iana\"\n  },\n  \"video/h266\": {\n    \"source\": \"iana\"\n  },\n  \"video/iso.segment\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"m4s\"]\n  },\n  \"video/jpeg\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"jpgv\"]\n  },\n  \"video/jpeg2000\": {\n    \"source\": \"iana\"\n  },\n  \"video/jpm\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"jpm\",\"jpgm\"]\n  },\n  \"video/jxsv\": {\n    \"source\": \"iana\"\n  },\n  \"video/matroska\": {\n    \"source\": \"iana\"\n  },\n  \"video/matroska-3d\": {\n    \"source\": \"iana\"\n  },\n  \"video/mj2\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mj2\",\"mjp2\"]\n  },\n  \"video/mp1s\": {\n    \"source\": \"iana\"\n  },\n  \"video/mp2p\": {\n    \"source\": \"iana\"\n  },\n  \"video/mp2t\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ts\",\"m2t\",\"m2ts\",\"mts\"]\n  },\n  \"video/mp4\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"mp4\",\"mp4v\",\"mpg4\"]\n  },\n  \"video/mp4v-es\": {\n    \"source\": \"iana\"\n  },\n  \"video/mpeg\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"mpeg\",\"mpg\",\"mpe\",\"m1v\",\"m2v\"]\n  },\n  \"video/mpeg4-generic\": {\n    \"source\": \"iana\"\n  },\n  \"video/mpv\": {\n    \"source\": \"iana\"\n  },\n  \"video/nv\": {\n    \"source\": \"iana\"\n  },\n  \"video/ogg\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"ogv\"]\n  },\n  \"video/parityfec\": {\n    \"source\": \"iana\"\n  },\n  \"video/pointer\": {\n    \"source\": \"iana\"\n  },\n  \"video/quicktime\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"qt\",\"mov\"]\n  },\n  \"video/raptorfec\": {\n    \"source\": \"iana\"\n  },\n  \"video/raw\": {\n    \"source\": \"iana\"\n  },\n  \"video/rtp-enc-aescm128\": {\n    \"source\": \"iana\"\n  },\n  \"video/rtploopback\": {\n    \"source\": \"iana\"\n  },\n  \"video/rtx\": {\n    \"source\": \"iana\"\n  },\n  \"video/scip\": {\n    \"source\": \"iana\"\n  },\n  \"video/smpte291\": {\n    \"source\": \"iana\"\n  },\n  \"video/smpte292m\": {\n    \"source\": \"iana\"\n  },\n  \"video/ulpfec\": {\n    \"source\": \"iana\"\n  },\n  \"video/vc1\": {\n    \"source\": \"iana\"\n  },\n  \"video/vc2\": {\n    \"source\": \"iana\"\n  },\n  \"video/vnd.cctv\": {\n    \"source\": \"iana\"\n  },\n  \"video/vnd.dece.hd\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"uvh\",\"uvvh\"]\n  },\n  \"video/vnd.dece.mobile\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"uvm\",\"uvvm\"]\n  },\n  \"video/vnd.dece.mp4\": {\n    \"source\": \"iana\"\n  },\n  \"video/vnd.dece.pd\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"uvp\",\"uvvp\"]\n  },\n  \"video/vnd.dece.sd\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"uvs\",\"uvvs\"]\n  },\n  \"video/vnd.dece.video\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"uvv\",\"uvvv\"]\n  },\n  \"video/vnd.directv.mpeg\": {\n    \"source\": \"iana\"\n  },\n  \"video/vnd.directv.mpeg-tts\": {\n    \"source\": \"iana\"\n  },\n  \"video/vnd.dlna.mpeg-tts\": {\n    \"source\": \"iana\"\n  },\n  \"video/vnd.dvb.file\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"dvb\"]\n  },\n  \"video/vnd.fvt\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"fvt\"]\n  },\n  \"video/vnd.hns.video\": {\n    \"source\": \"iana\"\n  },\n  \"video/vnd.iptvforum.1dparityfec-1010\": {\n    \"source\": \"iana\"\n  },\n  \"video/vnd.iptvforum.1dparityfec-2005\": {\n    \"source\": \"iana\"\n  },\n  \"video/vnd.iptvforum.2dparityfec-1010\": {\n    \"source\": \"iana\"\n  },\n  \"video/vnd.iptvforum.2dparityfec-2005\": {\n    \"source\": \"iana\"\n  },\n  \"video/vnd.iptvforum.ttsavc\": {\n    \"source\": \"iana\"\n  },\n  \"video/vnd.iptvforum.ttsmpeg2\": {\n    \"source\": \"iana\"\n  },\n  \"video/vnd.motorola.video\": {\n    \"source\": \"iana\"\n  },\n  \"video/vnd.motorola.videop\": {\n    \"source\": \"iana\"\n  },\n  \"video/vnd.mpegurl\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mxu\",\"m4u\"]\n  },\n  \"video/vnd.ms-playready.media.pyv\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"pyv\"]\n  },\n  \"video/vnd.nokia.interleaved-multimedia\": {\n    \"source\": \"iana\"\n  },\n  \"video/vnd.nokia.mp4vr\": {\n    \"source\": \"iana\"\n  },\n  \"video/vnd.nokia.videovoip\": {\n    \"source\": \"iana\"\n  },\n  \"video/vnd.objectvideo\": {\n    \"source\": \"iana\"\n  },\n  \"video/vnd.radgamettools.bink\": {\n    \"source\": \"iana\"\n  },\n  \"video/vnd.radgamettools.smacker\": {\n    \"source\": \"apache\"\n  },\n  \"video/vnd.sealed.mpeg1\": {\n    \"source\": \"iana\"\n  },\n  \"video/vnd.sealed.mpeg4\": {\n    \"source\": \"iana\"\n  },\n  \"video/vnd.sealed.swf\": {\n    \"source\": \"iana\"\n  },\n  \"video/vnd.sealedmedia.softseal.mov\": {\n    \"source\": \"iana\"\n  },\n  \"video/vnd.uvvu.mp4\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"uvu\",\"uvvu\"]\n  },\n  \"video/vnd.vivo\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"viv\"]\n  },\n  \"video/vnd.youtube.yt\": {\n    \"source\": \"iana\"\n  },\n  \"video/vp8\": {\n    \"source\": \"iana\"\n  },\n  \"video/vp9\": {\n    \"source\": \"iana\"\n  },\n  \"video/webm\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"webm\"]\n  },\n  \"video/x-f4v\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"f4v\"]\n  },\n  \"video/x-fli\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"fli\"]\n  },\n  \"video/x-flv\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"flv\"]\n  },\n  \"video/x-m4v\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"m4v\"]\n  },\n  \"video/x-matroska\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"mkv\",\"mk3d\",\"mks\"]\n  },\n  \"video/x-mng\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"mng\"]\n  },\n  \"video/x-ms-asf\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"asf\",\"asx\"]\n  },\n  \"video/x-ms-vob\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"vob\"]\n  },\n  \"video/x-ms-wm\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"wm\"]\n  },\n  \"video/x-ms-wmv\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"wmv\"]\n  },\n  \"video/x-ms-wmx\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"wmx\"]\n  },\n  \"video/x-ms-wvx\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"wvx\"]\n  },\n  \"video/x-msvideo\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"avi\"]\n  },\n  \"video/x-sgi-movie\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"movie\"]\n  },\n  \"video/x-smv\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"smv\"]\n  },\n  \"x-conference/x-cooltalk\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"ice\"]\n  },\n  \"x-shader/x-fragment\": {\n    \"compressible\": true\n  },\n  \"x-shader/x-vertex\": {\n    \"compressible\": true\n  }\n}\n", "/*!\n * mime-db\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2015-2022 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n/**\n * Module exports.\n */\n\nmodule.exports = require('./db.json')\n", "{\n  \"name\": \"@koishijs/core\",\n  \"description\": \"Core Features for Koishi\",\n  \"version\": \"4.18.4\",\n  \"main\": \"lib/index.cjs\",\n  \"module\": \"lib/index.mjs\",\n  \"typings\": \"lib/index.d.ts\",\n  \"files\": [\n    \"lib\",\n    \"src\"\n  ],\n  \"author\": \"Shigma <shigma10826@gmail.com>\",\n  \"license\": \"MIT\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/koishijs/koishi.git\",\n    \"directory\": \"packages/core\"\n  },\n  \"bugs\": {\n    \"url\": \"https://github.com/koishijs/koishi/issues\"\n  },\n  \"homepage\": \"https://koishi.chat\",\n  \"keywords\": [\n    \"bot\",\n    \"chatbot\",\n    \"koishi\"\n  ],\n  \"devDependencies\": {\n    \"@minatojs/driver-memory\": \"^3.6.0\",\n    \"@types/chai\": \"^4.3.16\",\n    \"@types/chai-as-promised\": \"^7.1.8\",\n    \"chai\": \"^5.1.1\",\n    \"chai-as-promised\": \"^7.1.1\",\n    \"chai-shape\": \"^1.1.0\"\n  },\n  \"dependencies\": {\n    \"@koishijs/i18n-utils\": \"^1.0.1\",\n    \"@koishijs/utils\": \"^7.2.1\",\n    \"@satorijs/core\": \"^4.3.3\",\n    \"cordis\": \"^3.18.1\",\n    \"cosmokit\": \"^1.6.3\",\n    \"fastest-levenshtein\": \"^1.0.16\",\n    \"minato\": \"^3.6.1\"\n  }\n}", "interface Random {\n  id(length?: number, radix?: number): string\n  bool(probability: number): boolean\n  real(upper: number): number\n  real(lower: number, upper: number): number\n  int(upper: number): number\n  int(lower: number, upper: number): number\n  splice<T>(source: T[]): T\n  pick<T>(source: readonly T[]): T\n  pick<T>(source: readonly T[], count: number): T[]\n  shuffle<T>(source: readonly T[]): T[]\n  weightedPick<T extends string>(weights: Readonly<Record<T, number>>): T\n}\n\nnamespace Random {\n  export interface Static extends Random {\n    chars: string\n    new (get?: () => number): Random\n  }\n}\n\nclass Random {\n  static chars = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\n  constructor(private get = Math.random) {}\n\n  id(length = 8, radix = 16) {\n    let result = ''\n    for (let i = 0; i < length; ++i) {\n      result += Random.chars[Math.floor(Math.random() * radix)]\n    }\n    return result\n  }\n\n  bool(probability: number) {\n    if (probability >= 1) return true\n    if (probability <= 0) return false\n    return this.get() < probability\n  }\n\n  real(...args: [number, number?]): number {\n    const lower = args.length > 1 ? args[0] : 0\n    const upper = args[args.length - 1]\n    return this.get() * (upper - lower) + lower\n  }\n\n  int(...args: [number, number?]): number {\n    return Math.floor(this.real(...args))\n  }\n\n  splice<T>(source: T[]) {\n    return source.splice(Math.floor(this.get() * source.length), 1)[0]\n  }\n\n  pick<T>(source: readonly T[], count?: number) {\n    if (count === undefined) return this.pick(source, 1)[0]\n    const copy = source.slice()\n    const result: T[] = []\n    count = Math.min(copy.length, count)\n    for (let i = 0; i < count; i += 1) {\n      result.push(this.splice(copy))\n    }\n    return result\n  }\n\n  shuffle<T>(source: readonly T[]) {\n    return this.pick(source, source.length)\n  }\n\n  weightedPick<T extends string>(weights: Readonly<Record<T, number>>): T {\n    const total = Object.entries(weights).reduce((prev, [, curr]) => prev + (curr as number), 0)\n    const pointer = this.get() * total\n    let counter = 0\n    for (const key in weights) {\n      counter += weights[key]\n      if (pointer < counter) return key\n    }\n  }\n}\n\nconst instance = new Random()\n\nfor (const key of ['id', 'bool', 'int', 'real', 'splice', 'pick', 'shuffle', 'weightedPick']) {\n  Random[key] = instance[key].bind(instance)\n}\n\nexport = Random as Random.Static\n", "export type Dict<T = any, K extends string | symbol = string> = { [key in K]: T }\nexport type Get<T extends {}, K> = K extends keyof T ? T[K] : never\nexport type Extract<S, T, U = S> = S extends T ? U : never\nexport type MaybeArray<T> = [T] extends [unknown[]] ? T : T | T[]\nexport type Promisify<T> = Promise<T extends Promise<infer S> ? S : T>\nexport type Awaitable<T> = [T] extends [Promise<unknown>] ? T : T | Promise<T>\nexport type Intersect<U> = (U extends any ? (arg: U) => void : never) extends ((arg: infer I) => void) ? I : never\n\nexport function noop(): any {}\n\nexport function isNullable(value: any): value is null | undefined | void {\n  return value === null || value === undefined\n}\n\nexport function isPlainObject(data: any) {\n  return data && typeof data === 'object' && !Array.isArray(data)\n}\n\nexport function filterKeys<T, K extends string, U extends K>(object: Dict<T, K>, filter: (key: K, value: T) => key is U): Dict<T, U>\nexport function filterKeys<T, K extends string>(object: Dict<T, K>, filter: (key: K, value: T) => boolean): Dict<T, K>\nexport function filterKeys(object: {}, filter: (key: string, value: any) => boolean) {\n  return Object.fromEntries(Object.entries(object).filter(([key, value]) => filter(key, value)))\n}\n\nexport function mapValues<U, T, K extends string>(object: Dict<T, K>, transform: (value: T, key: K) => U) {\n  return Object.fromEntries(Object.entries(object).map(([key, value]) => [key, (transform as any)(value, key)])) as Dict<U, K>\n}\n\nexport { mapValues as valueMap }\n\nexport function pick<T extends object, K extends keyof T>(source: T, keys?: Iterable<K>, forced?: boolean) {\n  if (!keys) return { ...source }\n  const result = {} as Pick<T, K>\n  for (const key of keys) {\n    if (forced || source[key] !== undefined) result[key] = source[key]\n  }\n  return result\n}\n\nexport function omit<T, K extends keyof T>(source: T, keys?: Iterable<K>) {\n  if (!keys) return { ...source }\n  const result = { ...source } as Omit<T, K>\n  for (const key of keys) {\n    Reflect.deleteProperty(result, key)\n  }\n  return result\n}\n\nexport function defineProperty<T, K extends keyof T>(object: T, key: K, value: T[K]): T\nexport function defineProperty<T, K extends keyof any>(object: T, key: K, value: any): T\nexport function defineProperty<T, K extends keyof any>(object: T, key: K, value: any) {\n  return Object.defineProperty(object, key, { writable: true, value, enumerable: false })\n}\n", "import { isNullable } from './misc'\n\nexport function contain(array1: readonly any[], array2: readonly any[]) {\n  return array2.every(item => array1.includes(item))\n}\n\nexport function intersection<T>(array1: readonly T[], array2: readonly T[]) {\n  return array1.filter(item => array2.includes(item))\n}\n\nexport function difference<S>(array1: readonly S[], array2: readonly any[]) {\n  return array1.filter(item => !array2.includes(item))\n}\n\nexport function union<T>(array1: readonly T[], array2: readonly T[]) {\n  return Array.from(new Set([...array1, ...array2]))\n}\n\nexport function deduplicate<T>(array: readonly T[]) {\n  return [...new Set(array)]\n}\n\nexport function remove<T>(list: T[], item: T) {\n  const index = list?.indexOf(item)\n  if (index >= 0) {\n    list.splice(index, 1)\n    return true\n  } else {\n    return false\n  }\n}\n\nexport function makeArray<T>(source: null | undefined | T | T[]) {\n  return Array.isArray(source) ? source : isNullable(source) ? [] : [source]\n}\n", "import { isNullable, mapValues } from './misc'\n\ntype GlobalConstructorNames = keyof {\n  [K in keyof typeof globalThis as typeof globalThis[K] extends abstract new (...args: any) => any ? K : never]: K\n}\n\nexport function is<K extends GlobalConstructorNames>(type: K): (value: any) => value is InstanceType<typeof globalThis[K]>\nexport function is<K extends GlobalConstructorNames>(type: K, value: any): value is InstanceType<typeof globalThis[K]>\nexport function is<K extends GlobalConstructorNames>(type: K, value?: any): any {\n  if (arguments.length === 1) return (value: any) => is(type, value)\n  return type in globalThis && value instanceof (globalThis[type] as any)\n    || Object.prototype.toString.call(value).slice(8, -1) === type\n}\n\nfunction isArrayBufferLike(value: any): value is ArrayBufferLike {\n  return is('ArrayBuffer', value) || is('SharedArrayBuffer', value)\n}\n\nfunction isArrayBufferSource(value: any): value is Binary.Source {\n  return isArrayBufferLike(value) || ArrayBuffer.isView(value)\n}\n\nexport namespace Binary {\n  export type Source = ArrayBufferLike | ArrayBufferView\n\n  export const is = isArrayBufferLike\n  export const isSource = isArrayBufferSource\n\n  export function fromSource(source: Source) {\n    if (ArrayBuffer.isView(source)) {\n      // https://stackoverflow.com/questions/8609289/convert-a-binary-nodejs-buffer-to-javascript-arraybuffer#answer-31394257\n      return source.buffer.slice(source.byteOffset, source.byteOffset + source.byteLength)\n    } else {\n      return source\n    }\n  }\n\n  export function toBase64(source: ArrayBufferLike) {\n    if (typeof Buffer !== 'undefined') {\n      return Buffer.from(source).toString('base64')\n    }\n    let binary = ''\n    const bytes = new Uint8Array(source)\n    for (let i = 0; i < bytes.byteLength; i++) {\n      binary += String.fromCharCode(bytes[i])\n    }\n    return btoa(binary)\n  }\n\n  export function fromBase64(source: string) {\n    if (typeof Buffer !== 'undefined') return fromSource(Buffer.from(source, 'base64'))\n    return Uint8Array.from(atob(source), c => c.charCodeAt(0))\n  }\n\n  export function toHex(source: ArrayBufferLike) {\n    if (typeof Buffer !== 'undefined') return Buffer.from(source).toString('hex')\n    return Array.from(new Uint8Array(source), byte => byte.toString(16).padStart(2, '0')).join('')\n  }\n\n  export function fromHex(source: string) {\n    if (typeof Buffer !== 'undefined') return fromSource(Buffer.from(source, 'hex'))\n    const hex = source.length % 2 === 0 ? source : source.slice(0, source.length - 1)\n    const buffer: number[] = []\n    for (let i = 0; i < hex.length; i += 2) {\n      buffer.push(parseInt(`${hex[i]}${hex[i + 1]}`, 16))\n    }\n    return Uint8Array.from(buffer).buffer\n  }\n}\n\nexport const base64ToArrayBuffer = Binary.fromBase64\nexport const arrayBufferToBase64 = Binary.toBase64\nexport const hexToArrayBuffer = Binary.fromHex\nexport const arrayBufferToHex = Binary.toHex\n\nexport function clone<T>(source: T): T\nexport function clone(source: any) {\n  if (!source || typeof source !== 'object') return source\n  if (Array.isArray(source)) return source.map(clone)\n  if (is('Date', source)) return new Date(source.valueOf())\n  if (is('RegExp', source)) return new RegExp(source.source, source.flags)\n  if (isArrayBufferLike(source)) return source.slice(0)\n  if (ArrayBuffer.isView(source)) return source.buffer.slice(source.byteOffset, source.byteOffset + source.byteLength)\n  return mapValues(source, clone)\n}\n\nexport function deepEqual(a: any, b: any, strict?: boolean): boolean {\n  if (a === b) return true\n  if (!strict && isNullable(a) && isNullable(b)) return true\n  if (typeof a !== typeof b) return false\n  if (typeof a !== 'object') return false\n  if (!a || !b) return false\n\n  function check<T>(test: (x: any) => x is T, then: (a: T, b: T) => boolean) {\n    return test(a) ? test(b) ? then(a, b) : false : test(b) ? false : undefined\n  }\n\n  return check(Array.isArray, (a, b) => a.length === b.length && a.every((item, index) => deepEqual(item, b[index])))\n    ?? check(is('Date'), (a, b) => a.valueOf() === b.valueOf())\n    ?? check(is('RegExp'), (a, b) => a.source === b.source && a.flags === b.flags)\n    ?? check(isArrayBufferLike, (a, b) => {\n      if (a.byteLength !== b.byteLength) return false\n      const viewA = new Uint8Array(a)\n      const viewB = new Uint8Array(b)\n      for (let i = 0; i < viewA.length; i++) {\n        if (viewA[i] !== viewB[i]) return false\n      }\n      return true\n    })\n    ?? Object.keys({ ...a, ...b }).every(key => deepEqual(a[key], b[key], strict))\n}\n", "export function capitalize(source: string) {\n  return source.charAt(0).toUpperCase() + source.slice(1)\n}\n\nexport function uncapitalize(source: string) {\n  return source.charAt(0).toLowerCase() + source.slice(1)\n}\n\nexport function camelCase(source: string) {\n  return source.replace(/[_-][a-z]/g, str => str.slice(1).toUpperCase())\n}\n\nexport function paramCase(source: string) {\n  // do not use lookbehind assertion for Safari compatibility\n  return uncapitalize(source)\n    .replace(/_/g, '-')\n    .replace(/.[A-Z]+/g, str => str[0] + '-' + str.slice(1).toLowerCase())\n}\n\nexport function snakeCase(source: string) {\n  // do not use lookbehind assertion for Safari compatibility\n  return uncapitalize(source)\n    .replace(/-/g, '_')\n    .replace(/.[A-Z]+/g, str => str[0] + '_' + str.slice(1).toLowerCase())\n}\n\nexport const camelize = camelCase\nexport const hyphenate = paramCase\n\nnamespace Letter {\n  /* eslint-disable @typescript-eslint/member-delimiter-style */\n  interface LowerToUpper {\n    a: 'A', b: 'B', c: 'C', d: 'D', e: 'E', f: 'F', g: 'G', h: 'H', i: 'I', j: 'J', k: 'K', l: 'L', m: 'M',\n    n: 'N', o: 'O', p: 'P', q: 'Q', r: 'R', s: 'S', t: 'T', u: 'U', v: 'V', w: 'W', x: 'X', y: 'Y', z: 'Z',\n  }\n\n  interface UpperToLower {\n    A: 'a', B: 'b', C: 'c', D: 'd', E: 'e', F: 'f', G: 'g', H: 'h', I: 'i', J: 'j', K: 'k', L: 'l', M: 'm',\n    N: 'n', O: 'o', P: 'p', Q: 'q', R: 'r', S: 's', T: 't', U: 'u', V: 'v', W: 'w', X: 'x', Y: 'y', Z: 'z',\n  }\n  /* eslint-enable @typescript-eslint/member-delimiter-style */\n\n  export type Upper = keyof UpperToLower\n  export type Lower = keyof LowerToUpper\n\n  export type ToUpper<S extends string> = S extends Lower ? LowerToUpper[S] : S\n  export type ToLower<S extends string, P extends string = ''> = S extends Upper ? `${P}${UpperToLower[S]}` : S\n}\n\n/* eslint-disable @typescript-eslint/naming-convention */\nexport type camelize<S extends string> = S extends `${infer L}-${infer M}${infer R}` ? `${L}${Letter.ToUpper<M>}${camelize<R>}` : S\nexport type hyphenate<S extends string> = S extends `${infer L}${infer R}` ? `${Letter.ToLower<L, '-'>}${hyphenate<R>}` : S\n/* eslint-enable @typescript-eslint/naming-convention */\n\nexport function trimSlash(source: string) {\n  return source.replace(/\\/$/, '')\n}\n\nexport function sanitize(source: string) {\n  if (!source.startsWith('/')) source = '/' + source\n  return trimSlash(source)\n}\n", "export namespace Time {\n  export const millisecond = 1\n  export const second = 1000\n  export const minute = second * 60\n  export const hour = minute * 60\n  export const day = hour * 24\n  export const week = day * 7\n\n  let timezoneOffset = new Date().getTimezoneOffset()\n\n  export function setTimezoneOffset(offset: number) {\n    timezoneOffset = offset\n  }\n\n  export function getTimezoneOffset() {\n    return timezoneOffset\n  }\n\n  export function getDateNumber(date: number | Date = new Date(), offset?: number) {\n    if (typeof date === 'number') date = new Date(date)\n    if (offset === undefined) offset = timezoneOffset\n    return Math.floor((date.valueOf() / minute - offset) / 1440)\n  }\n\n  export function fromDateNumber(value: number, offset?: number) {\n    const date = new Date(value * day)\n    if (offset === undefined) offset = timezoneOffset\n    return new Date(+date + offset * minute)\n  }\n\n  const numeric = /\\d+(?:\\.\\d+)?/.source\n  const timeRegExp = new RegExp(`^${[\n    'w(?:eek(?:s)?)?',\n    'd(?:ay(?:s)?)?',\n    'h(?:our(?:s)?)?',\n    'm(?:in(?:ute)?(?:s)?)?',\n    's(?:ec(?:ond)?(?:s)?)?',\n  ].map(unit => `(${numeric}${unit})?`).join('')}$`)\n\n  export function parseTime(source: string) {\n    const capture = timeRegExp.exec(source)\n    if (!capture) return 0\n    return (parseFloat(capture[1]) * week || 0)\n      + (parseFloat(capture[2]) * day || 0)\n      + (parseFloat(capture[3]) * hour || 0)\n      + (parseFloat(capture[4]) * minute || 0)\n      + (parseFloat(capture[5]) * second || 0)\n  }\n\n  export function parseDate(date: string) {\n    const parsed = parseTime(date)\n    if (parsed) {\n      date = Date.now() + parsed as any\n    } else if (/^\\d{1,2}(:\\d{1,2}){1,2}$/.test(date)) {\n      date = `${new Date().toLocaleDateString()}-${date}`\n    } else if (/^\\d{1,2}-\\d{1,2}-\\d{1,2}(:\\d{1,2}){1,2}$/.test(date)) {\n      date = `${new Date().getFullYear()}-${date}`\n    }\n    return date ? new Date(date) : new Date()\n  }\n\n  export function format(ms: number) {\n    const abs = Math.abs(ms)\n    if (abs >= day - hour / 2) {\n      return Math.round(ms / day) + 'd'\n    } else if (abs >= hour - minute / 2) {\n      return Math.round(ms / hour) + 'h'\n    } else if (abs >= minute - second / 2) {\n      return Math.round(ms / minute) + 'm'\n    } else if (abs >= second) {\n      return Math.round(ms / second) + 's'\n    }\n    return ms + 'ms'\n  }\n\n  export function toDigits(source: number, length = 2) {\n    return source.toString().padStart(length, '0')\n  }\n\n  export function template(template: string, time = new Date()) {\n    return template\n      .replace('yyyy', time.getFullYear().toString())\n      .replace('yy', time.getFullYear().toString().slice(2))\n      .replace('MM', toDigits(time.getMonth() + 1))\n      .replace('dd', toDigits(time.getDate()))\n      .replace('hh', toDigits(time.getHours()))\n      .replace('mm', toDigits(time.getMinutes()))\n      .replace('ss', toDigits(time.getSeconds()))\n      .replace('SSS', toDigits(time.getMilliseconds(), 3))\n  }\n}\n", "import Random from 'inaba'\n\nexport { is as isType } from 'cosmokit'\nexport { Random }\n\nexport * from 'cosmokit'\nexport * from './misc'\nexport * from './observe'\nexport * from './string'\n", "export function isInteger(source: any) {\n  return typeof source === 'number' && Math.floor(source) === source\n}\n\nexport async function sleep(ms: number): Promise<void> {\n  return new Promise(resolve => setTimeout(resolve, ms))\n}\n\nexport function enumKeys<T extends string>(data: Record<T, string | number>) {\n  return Object.values(data).filter(value => typeof value === 'string') as T[]\n}\n\nexport function defineEnumProperty<T extends object>(object: T, key: keyof T, value: T[keyof T]) {\n  object[key] = value\n  object[value as any] = key\n}\n\nexport function merge<T extends object>(head: T, base: T): T {\n  Object.entries(base).forEach(([key, value]) => {\n    if (typeof head[key] === 'undefined') return head[key] = base[key]\n    if (typeof value === 'object' && typeof head[key] === 'object') {\n      head[key] = merge(head[key], value)\n    }\n  })\n  return head\n}\n\nexport function assertProperty<O, K extends keyof O & string>(config: O, key: K) {\n  if (!config[key]) throw new Error(`missing configuration \"${key}\"`)\n  return config[key]\n}\n\nexport function coerce(val: any) {\n  // resolve error when stack is undefined, e.g. axios error with status code 401\n  const { message, stack } = val instanceof Error && val.stack ? val : new Error(val as any)\n  const lines = stack.split('\\n')\n  const index = lines.findIndex(line => line.endsWith(message))\n  return lines.slice(index).join('\\n')\n}\n\nexport function renameProperty<O extends object, K extends keyof O, T extends string>(config: O, key: K, oldKey: T) {\n  config[key] = Reflect.get(config, oldKey) as any\n  Reflect.deleteProperty(config, oldKey)\n}\n\ntype Methods<T> = {\n  [K in keyof T]?: T[K] extends (...args: infer A) => infer R ? (this: T, ...args: A) => R : T[K]\n}\n\nexport function extend<T>(prototype: T, methods: Methods<T>) {\n  Object.defineProperties(prototype, Object.getOwnPropertyDescriptors(methods))\n}\n", "import { defineProperty, is, noop } from 'cosmokit'\n\nconst immutable = ['number', 'string', 'bigint', 'boolean', 'symbol', 'function']\nconst builtin = ['Date', 'RegExp', 'Set', 'Map', 'WeakSet', 'WeakMap', 'Array']\n\nfunction observeProperty(value: any, update: any) {\n  if (is('Date', value)) {\n    return observeDate(value, update)\n  } else if (Array.isArray(value)) {\n    return observeArray(value, update)\n  } else {\n    return observeObject(value, update)\n  }\n}\n\nfunction untracked(key: string | symbol) {\n  return typeof key === 'symbol' || key.startsWith('$')\n}\n\nfunction observeObject<T extends object>(target: T, notify?: (key: string | symbol) => void): T {\n  const update = notify\n  if (!notify) {\n    const diff = Object.create(null)\n    defineProperty(target, '$diff', diff)\n    notify = (key) => {\n      if (untracked(key)) return\n      diff[key] = target[key]\n    }\n  }\n\n  const proxy = new Proxy(target as Observed<T>, {\n    get(target, key) {\n      const value = Reflect.get(target, key)\n      if (!value || immutable.includes(typeof value) || untracked(key)) return value\n      return observeProperty(value, update || (() => notify(key)))\n    },\n    set(target, key, value) {\n      const unchanged = target[key] === value\n      const result = Reflect.set(target, key, value)\n      if (unchanged || !result) return result\n      notify(key)\n      return true\n    },\n    deleteProperty(target, key) {\n      const unchanged = !(key in target)\n      const result = Reflect.deleteProperty(target, key)\n      if (unchanged || !result) return result\n      notify(key)\n      return true\n    },\n  })\n\n  return proxy\n}\n\nconst arrayProxyMethods = ['pop', 'shift', 'splice', 'sort']\n\nfunction observeArray<T>(target: T[], update: () => void) {\n  const proxy: Record<number, T> = {}\n\n  for (const method of arrayProxyMethods) {\n    defineProperty(target, method, function (...args: any[]) {\n      update()\n      return Array.prototype[method].apply(this, args)\n    })\n  }\n\n  return new Proxy(target, {\n    get(target, key) {\n      if (key in proxy) return proxy[key]\n      const value = target[key]\n      if (!value || immutable.includes(typeof value) || typeof key === 'symbol' || isNaN(key as any)) return value\n      return observeProperty(value, update)\n    },\n    set(target, key, value) {\n      if (typeof key !== 'symbol' && !isNaN(key as any) && target[key] !== value) update()\n      return Reflect.set(target, key, value)\n    },\n  })\n}\n\nfunction observeDate(target: Date, update: () => void) {\n  for (const method of Object.getOwnPropertyNames(Date.prototype)) {\n    if (method === 'valueOf') continue\n    defineProperty(target, method, function (...args: any[]) {\n      const oldValue = target.valueOf()\n      const result = Date.prototype[method].apply(this, args)\n      if (target.valueOf() !== oldValue) update()\n      return result\n    })\n  }\n  return target\n}\n\nexport type Observed<T, R = any> = T & {\n  $diff: Partial<T>\n  $update: () => R\n  $merge: (value: Partial<T>) => Observed<T, R>\n}\n\ntype UpdateFunction<T, R> = (diff: Partial<T>) => R\n\nexport function observe<T extends object>(target: T, label?: string | number): Observed<T, void>\nexport function observe<T extends object, R>(target: T, update: UpdateFunction<T, R>, label?: string | number): Observed<T, R>\nexport function observe<T extends object, R>(target: T, ...args: [(string | number)?] | [UpdateFunction<T, R>, (string | number)?]) {\n  if (immutable.includes(typeof target)) {\n    throw new Error(`cannot observe immutable type \"${typeof target}\"`)\n  } else if (!target) {\n    throw new Error('cannot observe null or undefined')\n  }\n\n  const type = Object.prototype.toString.call(target).slice(8, -1)\n  if (builtin.includes(type)) {\n    throw new Error(`cannot observe instance of type \"${type}\"`)\n  }\n\n  let update: UpdateFunction<T, R> = noop\n  if (typeof args[0] === 'function') update = args.shift() as any\n\n  const observer = observeObject(target, null) as Observed<T>\n\n  defineProperty(observer, '$update', function $update(this: Observed<T>) {\n    const diff = { ...this.$diff }\n    const fields = Object.keys(diff)\n    if (fields.length) {\n      for (const key in this.$diff) {\n        delete this.$diff[key]\n      }\n      return update(diff)\n    }\n  })\n\n  defineProperty(observer, '$merge', function $merge(this: Observed<T>, value: Partial<T>) {\n    for (const key in value) {\n      if (key in this.$diff) {\n        throw new Error(`unresolved diff key \"${key}\"`)\n      }\n      target[key] = value[key]\n    }\n    return this\n  })\n\n  return observer\n}\n", "// eslint-disable-next-line no-new-func\nconst evaluate = new Function('context', 'expr', `\n  try {\n    with (context) {\n      return eval(expr)\n    }\n  } catch {}\n`) as ((context: object, expr: string) => any)\n\nexport function interpolate(template: string, context: object, pattern = /\\{\\{([\\s\\S]+?)\\}\\}/g) {\n  let capture: RegExpExecArray\n  let result = '', lastIndex = 0\n  while ((capture = pattern.exec(template))) {\n    if (capture[0] === template) {\n      return evaluate(context, capture[1])\n    }\n    result += template.slice(lastIndex, capture.index)\n    result += evaluate(context, capture[1]) ?? ''\n    lastIndex = capture.index + capture[0].length\n  }\n  return result + template.slice(lastIndex)\n}\n\nexport function escapeRegExp(source: string) {\n  return source\n    .replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&')\n    .replace(/-/g, '\\\\x2d')\n}\n", "import { defineProperty, Dict } from 'cosmokit'\nimport Lifecycle from './events.ts'\nimport ReflectService from './reflect.ts'\nimport Registry from './registry.ts'\nimport { getTraceable, resolveConfig, symbols } from './utils.ts'\n\nexport { Lifecycle, ReflectService, Registry }\n\nexport namespace Context {\n  export type Parameterized<C, T = any> = C & { config: T }\n\n  /** @deprecated use `string[]` instead */\n  export interface MixinOptions {\n    methods?: string[]\n    accessors?: string[]\n    prototype?: {}\n  }\n\n  export interface Item<C extends Context> {\n    value?: any\n    source: C\n  }\n\n  export type Internal = Internal.Service | Internal.Accessor | Internal.Alias\n\n  export namespace Internal {\n    export interface Service {\n      type: 'service'\n      builtin?: boolean\n      prototype?: {}\n    }\n\n    export interface Accessor {\n      type: 'accessor'\n      get: (this: Context, receiver: any) => any\n      set?: (this: Context, value: any, receiver: any) => boolean\n    }\n\n    export interface Alias {\n      type: 'alias'\n      name: string\n    }\n  }\n}\n\n// https://github.com/typescript-eslint/typescript-eslint/issues/6720\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport interface Intercept<C extends Context = Context> {}\n\nexport interface Context {\n  [Context.store]: Dict<Context.Item<this>, symbol>\n  [Context.isolate]: Dict<symbol>\n  [Context.intercept]: Intercept<this>\n  [Context.internal]: Dict<Context.Internal>\n  root: this\n  lifecycle: Lifecycle\n  reflect: ReflectService\n  registry: Registry<this>\n  config: any\n}\n\nexport class Context {\n  static readonly store: unique symbol = symbols.store as any\n  static readonly events: unique symbol = symbols.events as any\n  static readonly static: unique symbol = symbols.static as any\n  static readonly filter: unique symbol = symbols.filter as any\n  static readonly expose: unique symbol = symbols.expose as any\n  static readonly isolate: unique symbol = symbols.isolate as any\n  static readonly internal: unique symbol = symbols.internal as any\n  static readonly intercept: unique symbol = symbols.intercept as any\n  static readonly origin = 'ctx'\n  static readonly current = 'ctx'\n\n  static is<C extends Context>(value: any): value is C {\n    return !!value?.[Context.is as any]\n  }\n\n  static {\n    Context.is[Symbol.toPrimitive] = () => Symbol.for('cordis.is')\n    Context.prototype[Context.is as any] = true\n  }\n\n  /** @deprecated use `Service.traceable` instead */\n  static associate<T extends {}>(object: T, name: string) {\n    return object\n  }\n\n  constructor(config?: any) {\n    config = resolveConfig(this.constructor, config)\n    this[symbols.store] = Object.create(null)\n    this[symbols.isolate] = Object.create(null)\n    this[symbols.internal] = Object.create(null)\n    this[symbols.intercept] = Object.create(null)\n    const self: Context = new Proxy(this, ReflectService.handler)\n    self.root = self\n    self.reflect = new ReflectService(self)\n    self.registry = new Registry(self, config)\n    self.lifecycle = new Lifecycle(self)\n\n    const attach = (internal: Context[typeof symbols.internal]) => {\n      if (!internal) return\n      attach(Object.getPrototypeOf(internal))\n      for (const key of Object.getOwnPropertyNames(internal)) {\n        const constructor = internal[key]['prototype']?.constructor\n        if (!constructor) continue\n        self[internal[key]['key']] = new constructor(self, config)\n        defineProperty(self[internal[key]['key']], 'ctx', self)\n      }\n    }\n    attach(this[symbols.internal])\n    return self\n  }\n\n  [Symbol.for('nodejs.util.inspect.custom')]() {\n    return `Context <${this.name}>`\n  }\n\n  get name() {\n    let runtime = this.runtime\n    while (runtime && !runtime.name) {\n      runtime = runtime.parent.runtime\n    }\n    return runtime?.name!\n  }\n\n  get events() {\n    return this.lifecycle\n  }\n\n  /** @deprecated */\n  get state() {\n    return this.scope\n  }\n\n  extend(meta = {}): this {\n    const source = Reflect.getOwnPropertyDescriptor(this, symbols.shadow)?.value\n    const self = Object.assign(Object.create(getTraceable(this, this)), meta)\n    if (!source) return self\n    return Object.assign(Object.create(self), { [symbols.shadow]: source })\n  }\n\n  isolate(name: string, label?: symbol) {\n    const shadow = Object.create(this[symbols.isolate])\n    shadow[name] = label ?? Symbol(name)\n    return this.extend({ [symbols.isolate]: shadow })\n  }\n\n  intercept<K extends keyof Intercept>(name: K, config: Intercept[K]) {\n    const intercept = Object.create(this[symbols.intercept])\n    intercept[name] = config\n    return this.extend({ [symbols.intercept]: intercept })\n  }\n}\n\nContext.prototype[Context.internal] = Object.create(null)\n", "import { Awaitable, defineProperty, Promisify, remove } from 'cosmokit'\nimport { Context } from './context.ts'\nimport { EffectScope, ForkScope, MainScope, ScopeStatus } from './scope.ts'\nimport { getTraceable, symbols } from './index.ts'\nimport ReflectService from './reflect.ts'\n\nexport function isBailed(value: any) {\n  return value !== null && value !== false && value !== undefined\n}\n\nexport type Parameters<F> = F extends (...args: infer P) => any ? P : never\nexport type ReturnType<F> = F extends (...args: any) => infer R ? R : never\nexport type ThisType<F> = F extends (this: infer T, ...args: any) => any ? T : never\nexport type GetEvents<C extends Context> = C[typeof Context.events]\n\ndeclare module './context.ts' {\n  export interface Context {\n    /* eslint-disable max-len */\n    [Context.events]: Events<this>\n    parallel<K extends keyof GetEvents<this>>(name: K, ...args: Parameters<GetEvents<this>[K]>): Promise<void>\n    parallel<K extends keyof GetEvents<this>>(thisArg: ThisType<GetEvents<this>[K]>, name: K, ...args: Parameters<GetEvents<this>[K]>): Promise<void>\n    emit<K extends keyof GetEvents<this>>(name: K, ...args: Parameters<GetEvents<this>[K]>): void\n    emit<K extends keyof GetEvents<this>>(thisArg: ThisType<GetEvents<this>[K]>, name: K, ...args: Parameters<GetEvents<this>[K]>): void\n    serial<K extends keyof GetEvents<this>>(name: K, ...args: Parameters<GetEvents<this>[K]>): Promisify<ReturnType<GetEvents<this>[K]>>\n    serial<K extends keyof GetEvents<this>>(thisArg: ThisType<GetEvents<this>[K]>, name: K, ...args: Parameters<GetEvents<this>[K]>): Promisify<ReturnType<GetEvents<this>[K]>>\n    bail<K extends keyof GetEvents<this>>(name: K, ...args: Parameters<GetEvents<this>[K]>): ReturnType<GetEvents<this>[K]>\n    bail<K extends keyof GetEvents<this>>(thisArg: ThisType<GetEvents<this>[K]>, name: K, ...args: Parameters<GetEvents<this>[K]>): ReturnType<GetEvents<this>[K]>\n    on<K extends keyof GetEvents<this>>(name: K, listener: GetEvents<this>[K], options?: boolean | EventOptions): () => boolean\n    once<K extends keyof GetEvents<this>>(name: K, listener: GetEvents<this>[K], options?: boolean | EventOptions): () => boolean\n    off<K extends keyof GetEvents<this>>(name: K, listener: GetEvents<this>[K]): boolean\n    start(): Promise<void>\n    stop(): Promise<void>\n    /* eslint-enable max-len */\n  }\n}\n\nexport interface EventOptions {\n  prepend?: boolean\n  global?: boolean\n}\n\nexport interface Hook extends EventOptions {\n  ctx: Context\n  callback: (...args: any[]) => any\n}\n\nclass Lifecycle {\n  isActive = false\n  _tasks = new Set<Promise<void>>()\n  _hooks: Record<keyof any, Hook[]> = {}\n\n  constructor(private ctx: Context) {\n    defineProperty(this, symbols.tracker, {\n      associate: 'lifecycle',\n      property: 'ctx',\n    })\n\n    defineProperty(this.on('internal/listener', function (this: Context, name, listener, options: EventOptions) {\n      const method = options.prepend ? 'unshift' : 'push'\n      if (name === 'ready') {\n        if (!this.lifecycle.isActive) return\n        this.scope.ensure(async () => listener())\n        return () => false\n      } else if (name === 'dispose') {\n        this.scope.disposables[method](listener as any)\n        defineProperty(listener, 'name', 'event <dispose>')\n        return () => remove(this.scope.disposables, listener)\n      } else if (name === 'fork') {\n        this.scope.runtime.forkables[method](listener as any)\n        return this.scope.collect('event <fork>', () => remove(this.scope.runtime.forkables, listener))\n      }\n    }), Context.static, ctx.scope)\n\n    for (const level of ['info', 'error', 'warning']) {\n      defineProperty(this.on(`internal/${level}`, (format, ...param) => {\n        if (this._hooks[`internal/${level}`].length > 1) return\n        // eslint-disable-next-line no-console\n        console.info(format, ...param)\n      }), Context.static, ctx.scope)\n    }\n\n    // non-reusable plugin forks are not responsive to isolated service changes\n    defineProperty(this.on('internal/before-service', function (this: Context, name) {\n      for (const runtime of this.registry.values()) {\n        if (!runtime.inject[name]?.required) continue\n        const scopes = runtime.isReusable ? runtime.children : [runtime]\n        for (const scope of scopes) {\n          if (!this[symbols.filter](scope.ctx)) continue\n          scope.updateStatus()\n          scope.reset()\n        }\n      }\n    }, { global: true }), Context.static, ctx.scope)\n\n    defineProperty(this.on('internal/service', function (this: Context, name) {\n      for (const runtime of this.registry.values()) {\n        if (!runtime.inject[name]?.required) continue\n        const scopes = runtime.isReusable ? runtime.children : [runtime]\n        for (const scope of scopes) {\n          if (!this[symbols.filter](scope.ctx)) continue\n          scope.start()\n        }\n      }\n    }, { global: true }), Context.static, ctx.scope)\n\n    // inject in ancestor contexts\n    const checkInject = (scope: EffectScope, name: string) => {\n      if (!scope.runtime.plugin) return false\n      for (const key in scope.runtime.inject) {\n        if (name === ReflectService.resolveInject(scope.ctx, key)[0]) return true\n      }\n      return checkInject(scope.parent.scope, name)\n    }\n\n    defineProperty(this.on('internal/inject', function (this: Context, name) {\n      return checkInject(this.scope, name)\n    }, { global: true }), Context.static, ctx.scope)\n  }\n\n  async flush() {\n    while (this._tasks.size) {\n      await Promise.all(Array.from(this._tasks))\n    }\n  }\n\n  filterHooks(hooks: Hook[], thisArg?: object) {\n    thisArg = getTraceable(this.ctx, thisArg)\n    return hooks.slice().filter((hook) => {\n      const filter = thisArg?.[Context.filter]\n      return hook.global || !filter || filter.call(thisArg, hook.ctx)\n    })\n  }\n\n  * dispatch(type: string, args: any[]) {\n    const thisArg = typeof args[0] === 'object' || typeof args[0] === 'function' ? args.shift() : null\n    const name = args.shift()\n    if (name !== 'internal/event') {\n      this.emit('internal/event', type, name, args, thisArg)\n    }\n    for (const hook of this.filterHooks(this._hooks[name] || [], thisArg)) {\n      yield hook.callback.apply(thisArg, args)\n    }\n  }\n\n  async parallel(...args: any[]) {\n    await Promise.all(this.dispatch('emit', args))\n  }\n\n  emit(...args: any[]) {\n    Array.from(this.dispatch('emit', args))\n  }\n\n  async serial(...args: any[]) {\n    for await (const result of this.dispatch('serial', args)) {\n      if (isBailed(result)) return result\n    }\n  }\n\n  bail(...args: any[]) {\n    for (const result of this.dispatch('bail', args)) {\n      if (isBailed(result)) return result\n    }\n  }\n\n  register(label: string, hooks: Hook[], callback: any, options: EventOptions) {\n    const method = options.prepend ? 'unshift' : 'push'\n    hooks[method]({ ctx: this.ctx, callback, ...options })\n    return this.ctx.state.collect(label, () => this.unregister(hooks, callback))\n  }\n\n  unregister(hooks: Hook[], callback: any) {\n    const index = hooks.findIndex(hook => hook.callback === callback)\n    if (index >= 0) {\n      hooks.splice(index, 1)\n      return true\n    }\n  }\n\n  on(name: string, listener: (...args: any) => any, options?: boolean | EventOptions) {\n    if (typeof options !== 'object') {\n      options = { prepend: options }\n    }\n\n    // handle special events\n    this.ctx.scope.assertActive()\n    listener = this.ctx.reflect.bind(listener)\n    const result = this.bail(this.ctx, 'internal/listener', name, listener, options)\n    if (result) return result\n\n    const hooks = this._hooks[name] ||= []\n    const label = typeof name === 'string' ? `event <${name}>` : 'event (Symbol)'\n    return this.register(label, hooks, listener, options)\n  }\n\n  once(name: string, listener: (...args: any) => any, options?: boolean | EventOptions) {\n    const dispose = this.on(name, function (...args: any[]) {\n      dispose()\n      return listener.apply(this, args)\n    }, options)\n    return dispose\n  }\n\n  async start() {\n    this.isActive = true\n    const hooks = this._hooks.ready || []\n    while (hooks.length) {\n      const { ctx, callback } = hooks.shift()!\n      ctx.scope.ensure(async () => callback())\n    }\n    await this.flush()\n  }\n\n  async stop() {\n    this.isActive = false\n    // `dispose` event is handled by state.disposables\n    this.ctx.scope.reset()\n  }\n}\n\nexport default Lifecycle\n\nexport interface Events<in C extends Context = Context> {\n  'fork'(ctx: C, config: C['config']): void\n  'ready'(): Awaitable<void>\n  'dispose'(): Awaitable<void>\n  'internal/fork'(fork: ForkScope<C>): void\n  'internal/runtime'(runtime: MainScope<C>): void\n  'internal/status'(scope: EffectScope<C>, oldValue: ScopeStatus): void\n  'internal/info'(this: C, format: any, ...param: any[]): void\n  'internal/error'(this: C, format: any, ...param: any[]): void\n  'internal/warning'(this: C, format: any, ...param: any[]): void\n  'internal/before-service'(this: C, name: string, value: any): void\n  'internal/service'(this: C, name: string, value: any): void\n  'internal/before-update'(fork: ForkScope<C>, config: any): void\n  'internal/update'(fork: ForkScope<C>, oldConfig: any): void\n  'internal/inject'(this: C, name: string): boolean | undefined\n  'internal/listener'(this: C, name: string, listener: any, prepend: boolean): void\n  'internal/event'(type: 'emit' | 'parallel' | 'serial' | 'bail', name: string, args: any[], thisArg: any): void\n}\n", "import { defineProperty, Dict, isNullable } from 'cosmokit'\nimport { Context } from './context'\nimport { getTraceable, isObject, isUnproxyable, symbols, withProps } from './utils'\n\ndeclare module './context' {\n  interface Context {\n    get<K extends string & keyof this>(name: K): undefined | this[K]\n    get(name: string): any\n    set<K extends string & keyof this>(name: K, value: undefined | this[K]): () => void\n    set(name: string, value: any): () => void\n    /** @deprecated use `ctx.set()` instead */\n    provide(name: string, value?: any, builtin?: boolean): void\n    accessor(name: string, options: Omit<Context.Internal.Accessor, 'type'>): void\n    alias(name: string, aliases: string[]): void\n    mixin<K extends string & keyof this>(name: K, mixins: (keyof this & keyof this[K])[] | Dict<string>): void\n    mixin<T extends {}>(source: T, mixins: (keyof this & keyof T)[] | Dict<string>): void\n  }\n}\n\nclass ReflectService {\n  static resolveInject(ctx: Context, name: string) {\n    let internal = ctx[symbols.internal][name]\n    while (internal?.type === 'alias') {\n      name = internal.name\n      internal = ctx[symbols.internal][name]\n    }\n    return [name, internal] as const\n  }\n\n  static checkInject(ctx: Context, name: string, error: Error) {\n    ctx = ctx[symbols.shadow] ?? ctx\n    // Case 1: built-in services and special properties\n    // - prototype: prototype detection\n    // - then: async function return\n    if (['prototype', 'then', 'registry', 'lifecycle'].includes(name)) return\n    // Case 2: `$` or `_` prefix\n    if (name[0] === '$' || name[0] === '_') return\n    // Case 3: access directly from root\n    if (!ctx.runtime.plugin) return\n    // Case 4: custom inject checks\n    if (ctx.bail(ctx, 'internal/inject', name)) return\n    const lines = error.stack!.split('\\n')\n    lines.splice(1, 1)\n    error.stack = lines.join('\\n')\n    ctx.emit(ctx, 'internal/warning', error)\n  }\n\n  static handler: ProxyHandler<Context> = {\n    get: (target, prop, ctx: Context) => {\n      if (typeof prop !== 'string') return Reflect.get(target, prop, ctx)\n\n      if (Reflect.has(target, prop)) {\n        return getTraceable(ctx, Reflect.get(target, prop, ctx), true)\n      }\n\n      const [name, internal] = ReflectService.resolveInject(target, prop)\n      // trace caller\n      const error = new Error(`property ${name} is not registered, declare it as \\`inject\\` to suppress this warning`)\n      if (!internal) {\n        ReflectService.checkInject(ctx, name, error)\n        return Reflect.get(target, name, ctx)\n      } else if (internal.type === 'accessor') {\n        return internal.get.call(ctx, ctx[symbols.receiver])\n      } else {\n        if (!internal.builtin) ReflectService.checkInject(ctx, name, error)\n        return ctx.reflect.get(name)\n      }\n    },\n\n    set: (target, prop, value, ctx: Context) => {\n      if (typeof prop !== 'string') return Reflect.set(target, prop, value, ctx)\n\n      const [name, internal] = ReflectService.resolveInject(target, prop)\n      if (!internal) {\n        // TODO warning\n        return Reflect.set(target, name, value, ctx)\n      }\n      if (internal.type === 'accessor') {\n        if (!internal.set) return false\n        return internal.set.call(ctx, value, ctx[symbols.receiver])\n      } else {\n        // ctx.emit(ctx, 'internal/warning', new Error(`assigning to service ${name} is not recommended, please use \\`ctx.set()\\` method instead`))\n        ctx.reflect.set(name, value)\n        return true\n      }\n    },\n\n    has: (target, prop) => {\n      if (typeof prop !== 'string') return Reflect.has(target, prop)\n      if (Reflect.has(target, prop)) return true\n      const [, internal] = ReflectService.resolveInject(target, prop)\n      return !!internal\n    },\n  }\n\n  constructor(public ctx: Context) {\n    defineProperty(this, symbols.tracker, {\n      associate: 'reflect',\n      property: 'ctx',\n    })\n\n    this._mixin('reflect', ['get', 'set', 'provide', 'accessor', 'mixin', 'alias'])\n    this._mixin('scope', ['config', 'runtime', 'effect', 'collect', 'accept', 'decline'])\n    this._mixin('registry', ['using', 'inject', 'plugin'])\n    this._mixin('lifecycle', ['on', 'once', 'parallel', 'emit', 'serial', 'bail', 'start', 'stop'])\n  }\n\n  get(name: string) {\n    const internal = this.ctx[symbols.internal][name]\n    if (internal?.type !== 'service') return\n    const key = this.ctx[symbols.isolate][name]\n    const value = this.ctx[symbols.store][key]?.value\n    return getTraceable(this.ctx, value)\n  }\n\n  set(name: string, value: any) {\n    this.provide(name)\n    const key = this.ctx[symbols.isolate][name]\n    const oldValue = this.ctx[symbols.store][key]?.value\n    value ??= undefined\n    let dispose = () => {}\n    if (oldValue === value) return dispose\n\n    // check override\n    if (!isNullable(value) && !isNullable(oldValue)) {\n      throw new Error(`service ${name} has been registered`)\n    }\n    const ctx: Context = this.ctx\n    if (!isNullable(value)) {\n      dispose = ctx.effect(() => () => {\n        ctx.set(name, undefined)\n      })\n    }\n    if (isUnproxyable(value)) {\n      ctx.emit(ctx, 'internal/warning', new Error(`service ${name} is an unproxyable object, which may lead to unexpected behavior`))\n    }\n\n    // setup filter for events\n    const self = Object.create(ctx)\n    self[symbols.filter] = (ctx2: Context) => {\n      return ctx[symbols.isolate][name] === ctx2[symbols.isolate][name]\n    }\n\n    ctx.emit(self, 'internal/before-service', name, value)\n    ctx[symbols.store][key] = { value, source: ctx }\n    ctx.emit(self, 'internal/service', name, oldValue)\n    return dispose\n  }\n\n  provide(name: string, value?: any, builtin?: boolean) {\n    const internal = this.ctx.root[symbols.internal]\n    if (name in internal) return\n    const key = Symbol(name)\n    internal[name] = { type: 'service', builtin }\n    this.ctx.root[symbols.isolate][name] = key\n    if (!isObject(value)) return\n    this.ctx[symbols.store][key] = { value, source: null! }\n    defineProperty(value, symbols.tracker, {\n      associate: name,\n      property: 'ctx',\n    })\n  }\n\n  _accessor(name: string, options: Omit<Context.Internal.Accessor, 'type'>) {\n    const internal = this.ctx.root[symbols.internal]\n    if (name in internal) return () => {}\n    internal[name] = { type: 'accessor', ...options }\n    return () => delete this.ctx.root[symbols.isolate][name]\n  }\n\n  accessor(name: string, options: Omit<Context.Internal.Accessor, 'type'>) {\n    this.ctx.scope.effect(() => {\n      return this._accessor(name, options)\n    })\n  }\n\n  alias(name: string, aliases: string[]) {\n    const internal = this.ctx.root[symbols.internal]\n    if (name in internal) return\n    for (const key of aliases) {\n      internal[key] ||= { type: 'alias', name }\n    }\n  }\n\n  _mixin(source: any, mixins: string[] | Dict<string>) {\n    const entries = Array.isArray(mixins) ? mixins.map(key => [key, key]) : Object.entries(mixins)\n    const getTarget = typeof source === 'string' ? (ctx: Context) => ctx[source] : () => source\n    const disposables = entries.map(([key, value]) => {\n      return this._accessor(value, {\n        get(receiver) {\n          const service = getTarget(this)\n          if (isNullable(service)) return service\n          const mixin = receiver ? withProps(receiver, service) : service\n          const value = Reflect.get(service, key, mixin)\n          if (typeof value !== 'function') return value\n          return value.bind(mixin ?? service)\n        },\n        set(value, receiver) {\n          const service = getTarget(this)\n          const mixin = receiver ? withProps(receiver, service) : service\n          return Reflect.set(service, key, value, mixin)\n        },\n      })\n    })\n    return () => disposables.forEach(dispose => dispose())\n  }\n\n  mixin(source: any, mixins: string[] | Dict<string>) {\n    this.ctx.scope.effect(() => {\n      return this._mixin(source, mixins)\n    })\n  }\n\n  trace<T>(value: T) {\n    return getTraceable(this.ctx, value)\n  }\n\n  bind<T extends Function>(callback: T) {\n    return new Proxy(callback, {\n      apply: (target, thisArg, args) => {\n        return target.apply(this.trace(thisArg), args.map(arg => this.trace(arg)))\n      },\n    })\n  }\n}\n\nexport default ReflectService\n", "import { defineProperty } from 'cosmokit'\nimport type { Context, Service } from './index.ts'\n\nexport interface Tracker {\n  associate?: string\n  property?: string\n}\n\nexport const symbols = {\n  // internal symbols\n  shadow: Symbol.for('cordis.shadow'),\n  receiver: Symbol.for('cordis.receiver'),\n  original: Symbol.for('cordis.original'),\n\n  // context symbols\n  store: Symbol.for('cordis.store') as typeof Context.store,\n  events: Symbol.for('cordis.events') as typeof Context.events,\n  static: Symbol.for('cordis.static') as typeof Context.static,\n  filter: Symbol.for('cordis.filter') as typeof Context.filter,\n  expose: Symbol.for('cordis.expose') as typeof Context.expose,\n  isolate: Symbol.for('cordis.isolate') as typeof Context.isolate,\n  internal: Symbol.for('cordis.internal') as typeof Context.internal,\n  intercept: Symbol.for('cordis.intercept') as typeof Context.intercept,\n\n  // service symbols\n  setup: Symbol.for('cordis.setup') as typeof Service.setup,\n  invoke: Symbol.for('cordis.invoke') as typeof Service.invoke,\n  extend: Symbol.for('cordis.extend') as typeof Service.extend,\n  tracker: Symbol.for('cordis.tracker') as typeof Service.tracker,\n  provide: Symbol.for('cordis.provide') as typeof Service.provide,\n  immediate: Symbol.for('cordis.immediate') as typeof Service.immediate,\n}\n\nconst GeneratorFunction = function* () {}.constructor\nconst AsyncGeneratorFunction = async function* () {}.constructor\n\nexport function isConstructor(func: any): func is new (...args: any) => any {\n  // async function or arrow function\n  if (!func.prototype) return false\n  // generator function or malformed definition\n  // we cannot use below check because `mock.fn()` is proxified\n  // if (func.prototype.constructor !== func) return false\n  if (func instanceof GeneratorFunction) return false\n  // polyfilled AsyncGeneratorFunction === Function\n  if (AsyncGeneratorFunction !== Function && func instanceof AsyncGeneratorFunction) return false\n  return true\n}\n\nexport function resolveConfig(plugin: any, config: any) {\n  const schema = plugin['Config'] || plugin['schema']\n  if (schema && plugin['schema'] !== false) config = schema(config)\n  return config ?? {}\n}\n\nexport function isUnproxyable(value: any) {\n  return [Map, Set, Date, Promise].some(constructor => value instanceof constructor)\n}\n\nexport function joinPrototype(proto1: {}, proto2: {}) {\n  if (proto1 === Object.prototype) return proto2\n  const result = Object.create(joinPrototype(Object.getPrototypeOf(proto1), proto2))\n  for (const key of Reflect.ownKeys(proto1)) {\n    Object.defineProperty(result, key, Object.getOwnPropertyDescriptor(proto1, key)!)\n  }\n  return result\n}\n\nexport function isObject(value: any): value is {} {\n  return value && (typeof value === 'object' || typeof value === 'function')\n}\n\nexport function getTraceable<T>(ctx: Context, value: T, noTrap?: boolean): T {\n  if (!isObject(value)) return value\n  if (Object.hasOwn(value, symbols.shadow)) {\n    return Object.getPrototypeOf(value)\n  }\n  const tracker = value[symbols.tracker]\n  if (!tracker) return value\n  return createTraceable(ctx, value, tracker, noTrap)\n}\n\nexport function withProps(target: any, props?: {}) {\n  if (!props) return target\n  return new Proxy(target, {\n    get: (target, prop, receiver) => {\n      if (prop in props && prop !== 'constructor') return Reflect.get(props, prop, receiver)\n      return Reflect.get(target, prop, receiver)\n    },\n    set: (target, prop, value, receiver) => {\n      if (prop in props && prop !== 'constructor') return Reflect.set(props, prop, value, receiver)\n      return Reflect.set(target, prop, value, receiver)\n    },\n  })\n}\n\nfunction withProp(target: any, prop: string | symbol, value: any) {\n  return withProps(target, Object.defineProperty(Object.create(null), prop, {\n    value,\n    writable: false,\n  }))\n}\n\nfunction createShadow(ctx: Context, target: any, property: string | undefined, receiver: any) {\n  if (!property) return receiver\n  const origin = Reflect.getOwnPropertyDescriptor(target, property)?.value\n  if (!origin) return receiver\n  return withProp(receiver, property, ctx.extend({ [symbols.shadow]: origin }))\n}\n\nfunction createShadowMethod(ctx: Context, value: any, outer: any, shadow: {}) {\n  return new Proxy(value, {\n    apply: (target, thisArg, args) => {\n      // contravariant\n      if (thisArg === outer) thisArg = shadow\n      // contravariant\n      args = args.map((arg) => {\n        if (typeof arg !== 'function' || arg[symbols.original]) return arg\n        return new Proxy(arg, {\n          get: (target, prop, receiver) => {\n            if (prop === symbols.original) return target\n            const value = Reflect.get(target, prop, receiver)\n            // https://github.com/cordiverse/cordis/issues/14\n            if (prop === 'toString' && value === Function.prototype.toString) {\n              return function (...args: any[]) {\n                return Reflect.apply(value, this === receiver ? target : this, args)\n              }\n            }\n            return value\n          },\n          apply: (target: Function, thisArg, args) => {\n            // covariant\n            return Reflect.apply(target, getTraceable(ctx, thisArg), args.map(arg => getTraceable(ctx, arg)))\n          },\n          construct: (target: Function, args, newTarget) => {\n            // covariant\n            return Reflect.construct(target, args.map(arg => getTraceable(ctx, arg)), newTarget)\n          },\n        })\n      })\n      // covariant\n      return getTraceable(ctx, Reflect.apply(target, thisArg, args))\n    },\n  })\n}\n\nfunction createTraceable(ctx: Context, value: any, tracker: Tracker, noTrap?: boolean) {\n  if (ctx[symbols.shadow]) {\n    ctx = Object.getPrototypeOf(ctx)\n  }\n  const proxy = new Proxy(value, {\n    get: (target, prop, receiver) => {\n      if (prop === symbols.original) return target\n      if (prop === tracker.property) return ctx\n      if (typeof prop === 'symbol') {\n        return Reflect.get(target, prop, receiver)\n      }\n      if (tracker.associate && ctx[symbols.internal][`${tracker.associate}.${prop}`]) {\n        return Reflect.get(ctx, `${tracker.associate}.${prop}`, withProp(ctx, symbols.receiver, receiver))\n      }\n      const shadow = createShadow(ctx, target, tracker.property, receiver)\n      const innerValue = Reflect.get(target, prop, shadow)\n      const innerTracker = innerValue?.[symbols.tracker]\n      if (innerTracker) {\n        return createTraceable(ctx, innerValue, innerTracker)\n      } else if (!noTrap && typeof innerValue === 'function') {\n        return createShadowMethod(ctx, innerValue, receiver, shadow)\n      } else {\n        return innerValue\n      }\n    },\n    set: (target, prop, value, receiver) => {\n      if (prop === symbols.original) return false\n      if (prop === tracker.property) return false\n      if (typeof prop === 'symbol') {\n        return Reflect.set(target, prop, value, receiver)\n      }\n      if (tracker.associate && ctx[symbols.internal][`${tracker.associate}.${prop}`]) {\n        return Reflect.set(ctx, `${tracker.associate}.${prop}`, value, withProp(ctx, symbols.receiver, receiver))\n      }\n      const shadow = createShadow(ctx, target, tracker.property, receiver)\n      return Reflect.set(target, prop, value, shadow)\n    },\n    apply: (target, thisArg, args) => {\n      return applyTraceable(proxy, target, thisArg, args)\n    },\n  })\n  return proxy\n}\n\nfunction applyTraceable(proxy: any, value: any, thisArg: any, args: any[]) {\n  if (!value[symbols.invoke]) return Reflect.apply(value, thisArg, args)\n  return value[symbols.invoke].apply(proxy, args)\n}\n\nexport function createCallable(name: string, proto: {}, tracker: Tracker) {\n  const self = function (...args: any[]) {\n    const proxy = createTraceable(self['ctx'], self, tracker)\n    return applyTraceable(proxy, self, this, args)\n  }\n  defineProperty(self, 'name', name)\n  return Object.setPrototypeOf(self, proto)\n}\n", "import { defineProperty, Dict } from 'cosmokit'\nimport { Context } from './context.ts'\nimport { ForkScope, MainScope } from './scope.ts'\nimport { resolveConfig, symbols, withProps } from './utils.ts'\n\nfunction isApplicable(object: Plugin) {\n  return object && typeof object === 'object' && typeof object.apply === 'function'\n}\n\nexport type Inject = string[] | Dict<Inject.Meta>\n\nexport function Inject(inject: Inject) {\n  return function (value: any, ctx: ClassDecoratorContext<any> | ClassMethodDecoratorContext<any>) {\n    if (ctx.kind === 'class') {\n      value.inject = inject\n    } else if (ctx.kind === 'method') {\n      ctx.addInitializer(function () {\n        const property = this[symbols.tracker]?.property\n        if (!property) throw new Error('missing context tracker')\n        ;(this[property] as Context).inject(inject, (ctx) => {\n          value.call(withProps(this, { [property]: ctx }))\n        })\n      })\n    } else {\n      throw new Error('@Inject can only be used on class or class methods')\n    }\n  }\n}\n\nexport namespace Inject {\n  export interface Meta {\n    required: boolean\n  }\n\n  export function resolve(inject: Inject | null | undefined) {\n    if (!inject) return {}\n    if (Array.isArray(inject)) {\n      return Object.fromEntries(inject.map(name => [name, { required: true }]))\n    }\n    const { required, optional, ...rest } = inject\n    if (Array.isArray(required)) {\n      Object.assign(rest, Object.fromEntries(required.map(name => [name, { required: true }])))\n    }\n    if (Array.isArray(optional)) {\n      Object.assign(rest, Object.fromEntries(optional.map(name => [name, { required: false }])))\n    }\n    return rest\n  }\n}\n\nexport type Plugin<C extends Context = Context, T = any> =\n  | Plugin.Function<C, T>\n  | Plugin.Constructor<C, T>\n  | Plugin.Object<C, T>\n\nexport namespace Plugin {\n  export interface Base<T = any> {\n    name?: string\n    reactive?: boolean\n    reusable?: boolean\n    Config?: (config: any) => T\n    inject?: Inject\n    intercept?: Dict<boolean>\n  }\n\n  export interface Transform<S, T> {\n    schema?: true\n    Config: (config: S) => T\n  }\n\n  export interface Function<C extends Context = Context, T = any> extends Base<T> {\n    (ctx: C, config: T): void\n  }\n\n  export interface Constructor<C extends Context = Context, T = any> extends Base<T> {\n    new (ctx: C, config: T): void\n  }\n\n  export interface Object<C extends Context = Context, T = any> extends Base<T> {\n    apply: (ctx: C, config: T) => void\n  }\n}\n\nexport type Spread<T> = undefined extends T ? [config?: T] : [config: T]\n\ndeclare module './context.ts' {\n  export interface Context {\n    /** @deprecated use `ctx.inject()` instead */\n    using(deps: Inject, callback: Plugin.Function<this, void>): ForkScope<this>\n    inject(deps: Inject, callback: Plugin.Function<this, void>): ForkScope<this>\n    plugin<T = undefined, S = T>(plugin: Plugin.Function<this, T> & Plugin.Transform<S, T>, ...args: Spread<S>): ForkScope<this>\n    plugin<T = undefined, S = T>(plugin: Plugin.Constructor<this, T> & Plugin.Transform<S, T>, ...args: Spread<S>): ForkScope<this>\n    plugin<T = undefined, S = T>(plugin: Plugin.Object<this, T> & Plugin.Transform<S, T>, ...args: Spread<S>): ForkScope<this>\n    plugin<T = undefined>(plugin: Plugin.Function<this, T>, ...args: Spread<T>): ForkScope<this>\n    plugin<T = undefined>(plugin: Plugin.Constructor<this, T>, ...args: Spread<T>): ForkScope<this>\n    plugin<T = undefined>(plugin: Plugin.Object<this, T>, ...args: Spread<T>): ForkScope<this>\n  }\n}\n\nclass Registry<C extends Context = Context> {\n  private _counter = 0\n  private _internal = new Map<Function, MainScope<C>>()\n  protected context: Context\n\n  constructor(public ctx: C, config: any) {\n    defineProperty(this, symbols.tracker, {\n      associate: 'registry',\n      property: 'ctx',\n    })\n\n    this.context = ctx\n    const runtime = new MainScope(ctx, null!, config)\n    ctx.scope = runtime\n    runtime.ctx = ctx\n    this.set(null!, runtime)\n  }\n\n  get counter() {\n    return ++this._counter\n  }\n\n  get size() {\n    return this._internal.size\n  }\n\n  resolve(plugin: Plugin, assert = false): Function | undefined {\n    // Allow `null` as a special case.\n    if (plugin === null) return plugin\n    if (typeof plugin === 'function') return plugin\n    if (isApplicable(plugin)) return plugin.apply\n    if (assert) throw new Error('invalid plugin, expect function or object with an \"apply\" method, received ' + typeof plugin)\n  }\n\n  get(plugin: Plugin) {\n    const key = this.resolve(plugin)\n    return key && this._internal.get(key)\n  }\n\n  has(plugin: Plugin) {\n    const key = this.resolve(plugin)\n    return !!key && this._internal.has(key)\n  }\n\n  set(plugin: Plugin, state: MainScope<C>) {\n    const key = this.resolve(plugin)\n    this._internal.set(key!, state)\n  }\n\n  delete(plugin: Plugin) {\n    const key = this.resolve(plugin)\n    const runtime = key && this._internal.get(key)\n    if (!runtime) return\n    this._internal.delete(key)\n    runtime.dispose()\n    return runtime\n  }\n\n  keys() {\n    return this._internal.keys()\n  }\n\n  values() {\n    return this._internal.values()\n  }\n\n  entries() {\n    return this._internal.entries()\n  }\n\n  forEach(callback: (value: MainScope<C>, key: Function, map: Map<Plugin, MainScope<C>>) => void) {\n    return this._internal.forEach(callback)\n  }\n\n  using(inject: Inject, callback: Plugin.Function<C, void>) {\n    return this.inject(inject, callback)\n  }\n\n  inject(inject: Inject, callback: Plugin.Function<C, void>) {\n    return this.plugin({ inject, apply: callback, name: callback.name })\n  }\n\n  plugin(plugin: Plugin<C>, config?: any, error?: any) {\n    // check if it's a valid plugin\n    this.resolve(plugin, true)\n    this.ctx.scope.assertActive()\n\n    // resolve plugin config\n    if (!error) {\n      try {\n        config = resolveConfig(plugin, config)\n      } catch (reason) {\n        this.context.emit(this.ctx, 'internal/error', reason)\n        error = reason\n        config = null\n      }\n    }\n\n    // check duplication\n    let runtime = this.get(plugin)\n    if (runtime) {\n      if (!runtime.isForkable) {\n        this.context.emit(this.ctx, 'internal/warning', new Error(`duplicate plugin detected: ${plugin.name}`))\n      }\n      return runtime.fork(this.ctx, config, error)\n    }\n\n    runtime = new MainScope(this.ctx, plugin, config, error)\n    this.set(plugin, runtime)\n    return runtime.fork(this.ctx, config, error)\n  }\n}\n\nexport default Registry\n", "import { deepEqual, defineProperty, Dict, isNullable, remove } from 'cosmokit'\nimport { Context } from './context.ts'\nimport { Inject, Plugin } from './registry.ts'\nimport { isConstructor, resolveConfig } from './utils.ts'\n\ndeclare module './context.ts' {\n  export interface Context {\n    scope: EffectScope<this>\n    runtime: MainScope<this>\n    effect<T extends DisposableLike>(callback: Callable<T, [ctx: this]>): T\n    effect<T extends DisposableLike, R>(callback: Callable<T, [ctx: this, config: R]>, config: R): T\n    /** @deprecated use `ctx.effect()` instead */\n    collect(label: string, callback: () => void): () => void\n    accept(callback?: (config: this['config']) => void | boolean, options?: AcceptOptions): () => boolean\n    accept(keys: (keyof this['config'])[], callback?: (config: this['config']) => void | boolean, options?: AcceptOptions): () => boolean\n    decline(keys: (keyof this['config'])[]): () => boolean\n  }\n}\n\nexport type Disposable = () => void\n\nexport type DisposableLike = Disposable | { dispose: Disposable }\n\nexport type Callable<T, R extends unknown[]> = ((...args: R) => T) | (new (...args: R) => T)\n\nexport interface AcceptOptions {\n  passive?: boolean\n  immediate?: boolean\n}\n\nexport interface Acceptor extends AcceptOptions {\n  keys?: string[]\n  callback?: (config: any) => void | boolean\n}\n\nexport const enum ScopeStatus {\n  PENDING,\n  LOADING,\n  ACTIVE,\n  FAILED,\n  DISPOSED,\n}\n\nexport class CordisError extends Error {\n  constructor(public code: CordisError.Code, message?: string) {\n    super(message ?? CordisError.Code[code])\n  }\n}\n\nexport namespace CordisError {\n  export type Code = keyof typeof Code\n\n  export const Code = {\n    INACTIVE_EFFECT: 'cannot create effect on inactive context',\n  } as const\n}\n\nexport abstract class EffectScope<C extends Context = Context> {\n  public uid: number | null\n  public ctx: C\n  public disposables: Disposable[] = []\n  public error: any\n  public status = ScopeStatus.PENDING\n  public isActive = false\n\n  // Same as `this.ctx`, but with a more specific type.\n  protected context: Context\n  protected proxy: any\n  protected acceptors: Acceptor[] = []\n  protected tasks = new Set<Promise<void>>()\n  protected hasError = false\n\n  abstract runtime: MainScope<C>\n  abstract dispose(): boolean\n  abstract update(config: C['config'], forced?: boolean): void\n\n  constructor(public parent: C, public config: C['config']) {\n    this.uid = parent.registry ? parent.registry.counter : 0\n    this.ctx = this.context = parent.extend({ scope: this })\n    this.proxy = new Proxy({}, {\n      get: (target, key) => Reflect.get(this.config, key),\n    })\n  }\n\n  protected get _config() {\n    return this.runtime.isReactive ? this.proxy : this.config\n  }\n\n  assertActive() {\n    if (this.uid !== null || this.isActive) return\n    throw new CordisError('INACTIVE_EFFECT')\n  }\n\n  effect(callback: Callable<DisposableLike, [ctx: C, config: any]>, config?: any) {\n    this.assertActive()\n    const result = isConstructor(callback)\n      // eslint-disable-next-line new-cap\n      ? new callback(this.ctx, config)\n      : callback(this.ctx, config)\n    let disposed = false\n    const original = typeof result === 'function' ? result : result.dispose.bind(result)\n    const wrapped = (...args: []) => {\n      // make sure the original callback is not called twice\n      if (disposed) return\n      disposed = true\n      remove(this.disposables, wrapped)\n      return original(...args)\n    }\n    this.disposables.push(wrapped)\n    if (typeof result === 'function') return wrapped\n    result.dispose = wrapped\n    return result\n  }\n\n  collect(label: string, callback: () => any) {\n    const dispose = defineProperty(() => {\n      remove(this.disposables, dispose)\n      return callback()\n    }, 'name', label)\n    this.disposables.push(dispose)\n    return dispose\n  }\n\n  restart() {\n    this.reset()\n    this.error = null\n    this.hasError = false\n    this.status = ScopeStatus.PENDING\n    this.start()\n  }\n\n  protected _getStatus() {\n    if (this.uid === null) return ScopeStatus.DISPOSED\n    if (this.hasError) return ScopeStatus.FAILED\n    if (this.tasks.size) return ScopeStatus.LOADING\n    if (this.ready) return ScopeStatus.ACTIVE\n    return ScopeStatus.PENDING\n  }\n\n  updateStatus(callback?: () => void) {\n    const oldValue = this.status\n    callback?.()\n    this.status = this._getStatus()\n    if (oldValue !== this.status) {\n      this.context.emit('internal/status', this, oldValue)\n    }\n  }\n\n  ensure(callback: () => Promise<void>) {\n    const task = callback()\n      .catch((reason) => {\n        this.context.emit(this.ctx, 'internal/error', reason)\n        this.cancel(reason)\n      })\n      .finally(() => {\n        this.updateStatus(() => this.tasks.delete(task))\n        this.context.events._tasks.delete(task)\n      })\n    this.updateStatus(() => this.tasks.add(task))\n    this.context.events._tasks.add(task)\n  }\n\n  cancel(reason?: any) {\n    this.error = reason\n    this.updateStatus(() => this.hasError = true)\n    this.reset()\n  }\n\n  get ready() {\n    return Object.entries(this.runtime.inject).every(([name, inject]) => {\n      return !inject.required || !isNullable(this.ctx.get(name))\n    })\n  }\n\n  reset() {\n    this.isActive = false\n    this.disposables = this.disposables.splice(0).filter((dispose) => {\n      if (this.uid !== null && dispose[Context.static] === this) return true\n      ;(async () => dispose())().catch((reason) => {\n        this.context.emit(this.ctx, 'internal/error', reason)\n      })\n    })\n  }\n\n  protected init(error?: any) {\n    if (!this.config) {\n      this.cancel(error)\n    } else {\n      this.start()\n    }\n  }\n\n  start() {\n    if (!this.ready || this.isActive || this.uid === null) return true\n    this.isActive = true\n    this.updateStatus(() => this.hasError = false)\n  }\n\n  accept(callback?: (config: C['config']) => void | boolean, options?: AcceptOptions): () => boolean\n  accept(keys: string[], callback?: (config: C['config']) => void | boolean, options?: AcceptOptions): () => boolean\n  accept(...args: any[]) {\n    const keys = Array.isArray(args[0]) ? args.shift() : null\n    const acceptor: Acceptor = { keys, callback: args[0], ...args[1] }\n    return this.effect(() => {\n      this.acceptors.push(acceptor)\n      if (acceptor.immediate) acceptor.callback?.(this.config)\n      return () => remove(this.acceptors, acceptor)\n    })\n  }\n\n  decline(keys: string[]) {\n    return this.accept(keys, () => true)\n  }\n\n  checkUpdate(resolved: any, forced?: boolean) {\n    if (forced || !this.config) return [true, true]\n    if (forced === false) return [false, false]\n\n    const modified: Record<string, boolean> = Object.create(null)\n    const checkPropertyUpdate = (key: string) => {\n      const result = modified[key] ??= !deepEqual(this.config[key], resolved[key])\n      hasUpdate ||= result\n      return result\n    }\n\n    const ignored = new Set<string>()\n    let hasUpdate = false, shouldRestart = false\n    let fallback: boolean | null = this.runtime.isReactive || null\n    for (const { keys, callback, passive } of this.acceptors) {\n      if (!keys) {\n        fallback ||= !passive\n      } else if (passive) {\n        keys?.forEach(key => ignored.add(key))\n      } else {\n        let hasUpdate = false\n        for (const key of keys) {\n          hasUpdate ||= checkPropertyUpdate(key)\n        }\n        if (!hasUpdate) continue\n      }\n      const result = callback?.(resolved)\n      if (result) shouldRestart = true\n    }\n\n    for (const key in { ...this.config, ...resolved }) {\n      if (fallback === false) continue\n      if (!(key in modified) && !ignored.has(key)) {\n        const hasUpdate = checkPropertyUpdate(key)\n        if (fallback === null) shouldRestart ||= hasUpdate\n      }\n    }\n    return [hasUpdate, shouldRestart]\n  }\n}\n\nexport class ForkScope<C extends Context = Context> extends EffectScope<C> {\n  dispose: () => boolean\n\n  constructor(parent: Context, public runtime: MainScope<C>, config: C['config'], error?: any) {\n    super(parent as C, config)\n\n    this.dispose = defineProperty(parent.scope.collect(`fork <${parent.runtime.name}>`, () => {\n      this.uid = null\n      this.reset()\n      this.context.emit('internal/fork', this)\n      const result = remove(runtime.disposables, this.dispose)\n      if (remove(runtime.children, this) && !runtime.children.length) {\n        parent.registry.delete(runtime.plugin)\n      }\n      return result\n    }), Context.static, runtime)\n\n    runtime.children.push(this)\n    runtime.disposables.push(this.dispose)\n    this.context.emit('internal/fork', this)\n    this.init(error)\n  }\n\n  start() {\n    if (super.start()) return true\n    for (const fork of this.runtime.forkables) {\n      this.ensure(async () => fork(this.context, this._config))\n    }\n  }\n\n  update(config: any, forced?: boolean) {\n    const oldConfig = this.config\n    const state: EffectScope<C> = this.runtime.isForkable ? this : this.runtime\n    if (state.config !== oldConfig) return\n    let resolved: any\n    try {\n      resolved = resolveConfig(this.runtime.plugin, config)\n    } catch (error) {\n      this.context.emit('internal/error', error)\n      return this.cancel(error)\n    }\n    const [hasUpdate, shouldRestart] = state.checkUpdate(resolved, forced)\n    this.context.emit('internal/before-update', this, config)\n    this.config = resolved\n    state.config = resolved\n    if (hasUpdate) {\n      this.context.emit('internal/update', this, oldConfig)\n    }\n    if (shouldRestart) state.restart()\n  }\n}\n\nexport class MainScope<C extends Context = Context> extends EffectScope<C> {\n  public value: any\n\n  runtime = this\n  schema: any\n  name?: string\n  inject: Dict<Inject.Meta> = Object.create(null)\n  forkables: Function[] = []\n  children: ForkScope<C>[] = []\n  isReusable?: boolean = false\n  isReactive?: boolean = false\n\n  constructor(ctx: C, public plugin: Plugin, config: any, error?: any) {\n    super(ctx, config)\n    if (!plugin) {\n      this.name = 'root'\n      this.isActive = true\n    } else {\n      this.setup()\n      this.init(error)\n    }\n  }\n\n  get isForkable() {\n    return this.forkables.length > 0\n  }\n\n  fork(parent: Context, config: any, error?: any) {\n    return new ForkScope(parent, this, config, error)\n  }\n\n  dispose() {\n    this.uid = null\n    this.reset()\n    this.context.emit('internal/runtime', this)\n    return true\n  }\n\n  private setup() {\n    const { name } = this.plugin\n    if (name && name !== 'apply') this.name = name\n    this.schema = this.plugin['Config'] || this.plugin['schema']\n    this.inject = Inject.resolve(this.plugin['using'] || this.plugin['inject'])\n    this.isReusable = this.plugin['reusable']\n    this.isReactive = this.plugin['reactive']\n    this.context.emit('internal/runtime', this)\n\n    if (this.isReusable) {\n      this.forkables.push(this.apply)\n    }\n  }\n\n  private apply = (context: C, config: any) => {\n    if (typeof this.plugin !== 'function') {\n      return this.plugin.apply(context, config)\n    } else if (isConstructor(this.plugin)) {\n      // eslint-disable-next-line new-cap\n      const instance = new this.plugin(context, config)\n      const name = instance[Context.expose]\n      if (name) {\n        context.set(name, instance)\n      }\n      if (instance['fork']) {\n        this.forkables.push(instance['fork'].bind(instance))\n      }\n      return instance\n    } else {\n      return this.plugin(context, config)\n    }\n  }\n\n  reset() {\n    super.reset()\n    for (const fork of this.children) {\n      fork.reset()\n    }\n  }\n\n  start() {\n    if (super.start()) return true\n    if (!this.isReusable && this.plugin) {\n      this.ensure(async () => this.value = this.apply(this.ctx, this._config))\n    }\n    for (const fork of this.children) {\n      fork.start()\n    }\n  }\n\n  update(config: C['config'], forced?: boolean) {\n    if (this.isForkable) {\n      const warning = new Error(`attempting to update forkable plugin \"${this.plugin.name}\", which may lead to unexpected behavior`)\n      this.context.emit(this.ctx, 'internal/warning', warning)\n    }\n    const oldConfig = this.config\n    let resolved: any\n    try {\n      resolved = resolveConfig(this.runtime.plugin || this.context.constructor, config)\n    } catch (error) {\n      this.context.emit('internal/error', error)\n      return this.cancel(error)\n    }\n    const [hasUpdate, shouldRestart] = this.checkUpdate(resolved, forced)\n    const state = this.children.find(fork => fork.config === oldConfig)\n    this.config = resolved\n    if (state) {\n      this.context.emit('internal/before-update', state, config)\n      state.config = resolved\n      if (hasUpdate) {\n        this.context.emit('internal/update', state, oldConfig)\n      }\n    }\n    if (shouldRestart) this.restart()\n  }\n}\n", "import { Awaitable, defineProperty } from 'cosmokit'\nimport { Context } from './context.ts'\nimport { createCallable, joinPrototype, symbols, Tracker } from './utils.ts'\nimport { Spread } from './registry.ts'\n\nexport abstract class Service<T = unknown, C extends Context = Context> {\n  static readonly setup: unique symbol = symbols.setup as any\n  static readonly invoke: unique symbol = symbols.invoke as any\n  static readonly extend: unique symbol = symbols.extend as any\n  static readonly tracker: unique symbol = symbols.tracker as any\n  static readonly provide: unique symbol = symbols.provide as any\n  static readonly immediate: unique symbol = symbols.immediate as any\n\n  protected start(): Awaitable<void> {}\n  protected stop(): Awaitable<void> {}\n  protected fork?(ctx: C, config: any): void\n\n  protected ctx!: C\n\n  public name!: string\n  public config!: T\n\n  constructor(...args: Spread<T>)\n  constructor(ctx: C, ...args: Spread<T>)\n  constructor(ctx: C, name: string, immediate?: boolean)\n  constructor(...args: any[]) {\n    let _ctx: C | undefined, name: string | undefined, immediate: boolean | undefined, config: any\n    if (Context.is<C>(args[0])) {\n      _ctx = args[0]\n      if (typeof args[1] === 'string') {\n        name = args[1]\n        immediate = args[2]\n      } else {\n        config = args[1]\n      }\n    } else {\n      config = args[0]\n    }\n    name ??= this.constructor[symbols.provide] as string\n    immediate ??= this.constructor[symbols.immediate]\n\n    let self = this\n    const tracker: Tracker = {\n      associate: name,\n      property: 'ctx',\n    }\n    if (self[symbols.invoke]) {\n      self = createCallable(name, joinPrototype(Object.getPrototypeOf(this), Function.prototype), tracker)\n    }\n    if (_ctx) {\n      self.ctx = _ctx\n    } else {\n      self[symbols.setup]()\n    }\n    self.name = name\n    self.config = config\n    defineProperty(self, symbols.tracker, tracker)\n\n    self.ctx.provide(name)\n    self.ctx.runtime.name = name\n    if (immediate) {\n      if (_ctx) self[symbols.expose] = name\n      else self.ctx.set(name, self)\n    }\n\n    self.ctx.on('ready', async () => {\n      // await until next tick because derived class has not been initialized yet\n      await Promise.resolve()\n      await self.start()\n      if (!immediate) self.ctx.set(name!, self)\n    })\n\n    self.ctx.on('dispose', () => self.stop())\n    return self\n  }\n\n  protected [symbols.filter](ctx: Context) {\n    return ctx[symbols.isolate][this.name] === this.ctx[symbols.isolate][this.name]\n  }\n\n  protected [symbols.setup]() {\n    this.ctx = new Context() as C\n  }\n\n  protected [symbols.extend](props?: any) {\n    let self: any\n    if (this[Service.invoke]) {\n      self = createCallable(this.name, this, this[symbols.tracker])\n    } else {\n      self = Object.create(this)\n    }\n    return Object.assign(self, props)\n  }\n\n  static [Symbol.hasInstance](instance: any) {\n    let constructor = instance.constructor\n    while (constructor) {\n      // constructor may be a proxy\n      constructor = constructor.prototype?.constructor\n      if (constructor === this) return true\n      constructor = Object.getPrototypeOf(constructor)\n    }\n    return false\n  }\n}\n", "var __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\nvar __commonJS = (cb, mod) => function __require() {\n  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n  // If the importer is in node compatibility mode or this is not an ESM\n  // file that has been converted to a CommonJS file using a Babel-\n  // compatible transform (i.e. \"__esModule\" has not been set), then set\n  // \"default\" to the CommonJS \"module.exports\" for node compatibility.\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target,\n  mod\n));\n\n// src/shared.ts\nimport { stdout } from \"supports-color\";\nimport { Time } from \"cosmokit\";\nvar require_shared = __commonJS({\n  \"src/shared.ts\"(exports, module) {\n    \"use strict\";\n    var c16 = [6, 2, 3, 4, 5, 1];\n    var c256 = [\n      20,\n      21,\n      26,\n      27,\n      32,\n      33,\n      38,\n      39,\n      40,\n      41,\n      42,\n      43,\n      44,\n      45,\n      56,\n      57,\n      62,\n      63,\n      68,\n      69,\n      74,\n      75,\n      76,\n      77,\n      78,\n      79,\n      80,\n      81,\n      92,\n      93,\n      98,\n      99,\n      112,\n      113,\n      129,\n      134,\n      135,\n      148,\n      149,\n      160,\n      161,\n      162,\n      163,\n      164,\n      165,\n      166,\n      167,\n      168,\n      169,\n      170,\n      171,\n      172,\n      173,\n      178,\n      179,\n      184,\n      185,\n      196,\n      197,\n      198,\n      199,\n      200,\n      201,\n      202,\n      203,\n      204,\n      205,\n      206,\n      207,\n      208,\n      209,\n      214,\n      215,\n      220,\n      221\n    ];\n    function isAggregateError(error) {\n      return error instanceof Error && Array.isArray(error[\"errors\"]);\n    }\n    __name(isAggregateError, \"isAggregateError\");\n    var Logger = class _Logger {\n      constructor(name, meta) {\n        this.name = name;\n        this.meta = meta;\n        this.createMethod(\"success\", _Logger.SUCCESS);\n        this.createMethod(\"error\", _Logger.ERROR);\n        this.createMethod(\"info\", _Logger.INFO);\n        this.createMethod(\"warn\", _Logger.WARN);\n        this.createMethod(\"debug\", _Logger.DEBUG);\n      }\n      static {\n        __name(this, \"Logger\");\n      }\n      // log levels\n      static SILENT = 0;\n      static SUCCESS = 1;\n      static ERROR = 1;\n      static INFO = 2;\n      static WARN = 2;\n      static DEBUG = 3;\n      // global config\n      static id = 0;\n      static targets = [{\n        colors: stdout && stdout.level,\n        print(text) {\n          console.log(text);\n        }\n      }];\n      // global registry\n      static formatters = /* @__PURE__ */ Object.create(null);\n      static format(name, formatter) {\n        this.formatters[name] = formatter;\n      }\n      static levels = {\n        base: 2\n      };\n      static color(target, code, value, decoration = \"\") {\n        if (!target.colors) return \"\" + value;\n        return `\\x1B[3${code < 8 ? code : \"8;5;\" + code}${target.colors >= 2 ? decoration : \"\"}m${value}\\x1B[0m`;\n      }\n      static code(name, target) {\n        let hash = 0;\n        for (let i = 0; i < name.length; i++) {\n          hash = (hash << 3) - hash + name.charCodeAt(i) + 13;\n          hash |= 0;\n        }\n        const colors = !target.colors ? [] : target.colors >= 2 ? c256 : c16;\n        return colors[Math.abs(hash) % colors.length];\n      }\n      static render(target, record) {\n        const prefix = `[${record.type[0].toUpperCase()}]`;\n        const space = \" \".repeat(target.label?.margin ?? 1);\n        let indent = 3 + space.length, output = \"\";\n        if (target.showTime) {\n          indent += target.showTime.length + space.length;\n          output += _Logger.color(target, 8, Time.template(target.showTime)) + space;\n        }\n        const code = _Logger.code(record.name, target);\n        const label = _Logger.color(target, code, record.name, \";1\");\n        const padLength = (target.label?.width ?? 0) + label.length - record.name.length;\n        if (target.label?.align === \"right\") {\n          output += label.padStart(padLength) + space + prefix + space;\n          indent += (target.label.width ?? 0) + space.length;\n        } else {\n          output += prefix + space + label.padEnd(padLength) + space;\n        }\n        output += record.content.replace(/\\n/g, \"\\n\" + \" \".repeat(indent));\n        if (target.showDiff && target.timestamp) {\n          const diff = record.timestamp - target.timestamp;\n          output += _Logger.color(target, code, \" +\" + Time.format(diff));\n        }\n        return output;\n      }\n      extend = /* @__PURE__ */ __name((namespace) => {\n        return new _Logger(`${this.name}:${namespace}`, this.meta);\n      }, \"extend\");\n      warning = /* @__PURE__ */ __name((format, ...args) => {\n        this.warn(format, ...args);\n      }, \"warning\");\n      createMethod(type, level) {\n        this[type] = (...args) => {\n          if (args.length === 1 && args[0] instanceof Error) {\n            if (args[0].cause) {\n              this[type](args[0].cause);\n            } else if (isAggregateError(args[0])) {\n              args[0].errors.forEach((error) => this[type](error));\n              return;\n            }\n          }\n          const id = ++_Logger.id;\n          const timestamp = Date.now();\n          for (const target of _Logger.targets) {\n            if (this.getLevel(target) < level) continue;\n            const content = this.format(target, ...args);\n            const record = { id, type, level, name: this.name, meta: this.meta, content, timestamp };\n            if (target.record) {\n              target.record(record);\n            } else {\n              const { print = console.log } = target;\n              print(_Logger.render(target, record));\n            }\n            target.timestamp = timestamp;\n          }\n        };\n      }\n      format(target, ...args) {\n        if (args[0] instanceof Error) {\n          args[0] = args[0].stack || args[0].message;\n          args.unshift(\"%s\");\n        } else if (typeof args[0] !== \"string\") {\n          args.unshift(\"%o\");\n        }\n        let format = args.shift();\n        format = format.replace(/%([a-zA-Z%])/g, (match, char) => {\n          if (match === \"%%\") return \"%\";\n          const formatter = _Logger.formatters[char];\n          if (typeof formatter === \"function\") {\n            const value = args.shift();\n            return formatter(value, target, this);\n          }\n          return match;\n        });\n        for (let arg of args) {\n          if (typeof arg === \"object\" && arg) {\n            arg = _Logger.formatters[\"o\"](arg, target, this);\n          }\n          format += \" \" + arg;\n        }\n        const { maxLength = 10240 } = target;\n        return format.split(/\\r?\\n/g).map((line) => {\n          return line.slice(0, maxLength) + (line.length > maxLength ? \"...\" : \"\");\n        }).join(\"\\n\");\n      }\n      getLevel(target) {\n        const paths = this.name.split(\":\");\n        let config = target?.levels || _Logger.levels;\n        do {\n          config = config[paths.shift()] ?? config[\"base\"];\n        } while (paths.length && typeof config === \"object\");\n        return config;\n      }\n      get level() {\n        return this.getLevel();\n      }\n      set level(value) {\n        const paths = this.name.split(\":\");\n        let config = _Logger.levels;\n        while (paths.length > 1) {\n          const name = paths.shift();\n          const value2 = config[name];\n          if (typeof value2 === \"object\") {\n            config = value2;\n          } else {\n            config = config[name] = { base: value2 ?? config.base };\n          }\n        }\n        config[paths[0]] = value;\n      }\n    };\n    Logger.format(\"s\", (value) => value);\n    Logger.format(\"d\", (value) => +value);\n    Logger.format(\"j\", (value) => JSON.stringify(value));\n    Logger.format(\"c\", (value, target, logger) => {\n      return Logger.color(target, Logger.code(logger.name, target), value);\n    });\n    Logger.format(\"C\", (value, target) => {\n      return Logger.color(target, 15, value, \";1\");\n    });\n    module.exports = Logger;\n  }\n});\n\n// src/browser.ts\nimport inspect from \"object-inspect\";\nvar require_browser = __commonJS({\n  \"src/browser.ts\"(exports, module) {\n    var import_shared = __toESM(require_shared());\n    import_shared.default.format(\"o\", (value, target) => {\n      return inspect(value, { depth: Infinity }).replace(/\\s*\\n\\s*/g, \" \");\n    });\n    module.exports = import_shared.default;\n  }\n});\nexport default require_browser();\n", "import { Context, Service } from '@cordisjs/core'\nimport { defineProperty } from 'cosmokit'\nimport Logger from 'reggol'\n\nexport { Logger }\n\ndeclare module '@cordisjs/core' {\n  interface Context {\n    logger: LoggerService\n  }\n}\n\ndeclare module 'reggol' {\n  namespace Logger {\n    interface Meta {\n      ctx?: Context\n    }\n  }\n}\n\nexport interface LoggerService extends Pick<Logger, Logger.Type | 'extend'> {\n  (name: string): Logger\n}\n\nexport class LoggerService extends Service {\n  constructor(ctx: Context) {\n    super(ctx, 'logger', true)\n\n    ctx.on('internal/info', function (format, ...args) {\n      this.logger('app').info(format, ...args)\n    })\n\n    ctx.on('internal/error', function (format, ...args) {\n      this.logger('app').error(format, ...args)\n    })\n\n    ctx.on('internal/warning', function (format, ...args) {\n      this.logger('app').warn(format, ...args)\n    })\n  }\n\n  [Service.invoke](name: string) {\n    return new Logger(name, defineProperty({}, 'ctx', this.ctx))\n  }\n\n  static {\n    for (const type of ['success', 'error', 'info', 'warn', 'debug', 'extend']) {\n      LoggerService.prototype[type] = function (this: LoggerService, ...args: any[]) {\n        return this(this.ctx.name)[type](...args)\n      }\n    }\n  }\n}\n\nexport default LoggerService\n", "import { clone, deepEqual, Dict, filterKeys, isNullable, isPlainObject, pick, valueMap } from 'cosmokit'\n\nconst kSchema = Symbol.for('schemastery')\n\ndeclare global {\n  namespace Schemastery {\n    export type From<X> =\n      | X extends string | number | boolean ? Schema<X>\n      : X extends Schema ? X\n      : X extends typeof String ? Schema<string>\n      : X extends typeof Number ? Schema<number>\n      : X extends typeof Boolean ? Schema<boolean>\n      : X extends typeof Function ? Schema<Function, (...args: any[]) => any>\n      : X extends Constructor<infer S> ? Schema<S>\n      : never\n\n    type TypeS1<X> = X extends Schema<infer S, unknown> ? S : never\n    type Inverse<X> = X extends Schema<any, infer Y> ? (arg: Y) => void : never\n\n    export type TypeS<X> = TypeS1<From<X>>\n    export type TypeT<X> = ReturnType<From<X>>\n    export type Resolve = (data: any, schema: Schema, options?: Options, strict?: boolean) => [any, any?]\n\n    export type IntersectS<X> = From<X> extends Schema<infer S, unknown> ? S : never\n    export type IntersectT<X> = Inverse<From<X>> extends ((arg: infer T) => void) ? T : never\n\n    type TupleS<X extends readonly any[]> = X extends readonly [infer L, ...infer R] ? [TypeS<L>?, ...TupleS<R>] : any[]\n    type TupleT<X extends readonly any[]> = X extends readonly [infer L, ...infer R] ? [TypeT<L>?, ...TupleT<R>] : any[]\n    type ObjectS<X extends Dict> = { [K in keyof X]?: TypeS<X[K]> | null } & Dict\n    type ObjectT<X extends Dict> = { [K in keyof X]: TypeT<X[K]> } & Dict\n    type Constructor<T = any> = new (...args: any[]) => T\n\n    export interface Static {\n      <T = any>(options: Partial<Schema<T>>): Schema<T>\n      new <T = any>(options: Partial<Schema<T>>): Schema<T>\n      prototype: Schema\n      resolve: Resolve\n      from<X = any>(source?: X): From<X>\n      extend(type: string, resolve: Resolve): void\n      any(): Schema<any>\n      never(): Schema<never>\n      const<const T>(value: T): Schema<T>\n      string(): Schema<string>\n      number(): Schema<number>\n      natural(): Schema<number>\n      percent(): Schema<number>\n      boolean(): Schema<boolean>\n      date(): Schema<string | Date, Date>\n      bitset<K extends string>(bits: Partial<Record<K, number>>): Schema<number | readonly K[], number>\n      function(): Schema<Function, (...args: any[]) => any>\n      is<T>(constructor: Constructor<T>): Schema<T>\n      array<X>(inner: X): Schema<TypeS<X>[], TypeT<X>[]>\n      dict<X, Y extends Schema<any, string> = Schema<string>>(inner: X, sKey?: Y): Schema<Dict<TypeS<X>, TypeS<Y>>, Dict<TypeT<X>, TypeT<Y>>>\n      tuple<X extends readonly any[]>(list: X): Schema<TupleS<X>, TupleT<X>>\n      object<X extends Dict>(dict: X): Schema<ObjectS<X>, ObjectT<X>>\n      union<const X>(list: readonly X[]): Schema<TypeS<X>, TypeT<X>>\n      intersect<const X>(list: readonly X[]): Schema<IntersectS<X>, IntersectT<X>>\n      transform<X, T>(inner: X, callback: (value: TypeS<X>) => T, preserve?: boolean): Schema<TypeS<X>, T>\n    }\n\n    interface Options {\n      autofix?: boolean\n      ignore?(data: any, schema: Schema): boolean\n    }\n\n    export interface Meta<T = any> {\n      default?: T extends {} ? Partial<T> : T\n      required?: boolean\n      disabled?: boolean\n      collapse?: boolean\n      badges?: { text: string; type: string }[]\n      hidden?: boolean\n      loose?: boolean\n      role?: string\n      extra?: any\n      link?: string\n      description?: string | Dict<string>\n      comment?: string\n      pattern?: { source: string; flags?: string }\n      max?: number\n      min?: number\n      step?: number\n    }\n  }\n\n  interface Schemastery<S = any, T = S> {\n    (data?: S | null, options?: Schemastery.Options): T\n    new (data?: S | null, options?: Schemastery.Options): T\n    [kSchema]: true\n    uid: number\n    meta: Schemastery.Meta<T>\n    type: string\n    sKey?: Schema\n    inner?: Schema\n    list?: Schema[]\n    dict?: Dict<Schema>\n    bits?: Dict<number>\n    callback?: Function\n    value?: T\n    refs?: Dict<Schema>\n    preserve?: boolean\n    toString(inline?: boolean): string\n    toJSON(): Schema<S, T>\n    required(value?: boolean): Schema<S, T>\n    hidden(value?: boolean): Schema<S, T>\n    loose(value?: boolean): Schema<S, T>\n    role(text: string, extra?: any): Schema<S, T>\n    link(link: string): Schema<S, T>\n    default(value: T): Schema<S, T>\n    comment(text: string): Schema<S, T>\n    description(text: string): Schema<S, T>\n    disabled(value?: boolean): Schema<S, T>\n    collapse(value?: boolean): Schema<S, T>\n    deprecated(): Schema<S, T>\n    experimental(): Schema<S, T>\n    pattern(regexp: RegExp): Schema<S, T>\n    max(value: number): Schema<S, T>\n    min(value: number): Schema<S, T>\n    step(value: number): Schema<S, T>\n    set(key: string, value: Schema): Schema<S, T>\n    push(value: Schema): Schema<S, T>\n    simplify(value?: any): any\n    i18n(messages: Dict): Schema<S, T>\n    extra<K extends keyof Schemastery.Meta>(key: K, value: Schemastery.Meta[K]): Schema<S, T>\n  }\n}\n\ndeclare module globalThis {\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  export let __schemastery_index__: number\n}\n\nglobalThis.__schemastery_index__ ??= 0\n\ntype Schema<S = any, T = S> = Schemastery<S, T>\n\nconst Schema = function (options: Schema) {\n  const schema = function (data: any, options?: Schemastery.Options) {\n    return Schema.resolve(data, schema, options)[0]\n  } as Schema\n\n  if (options.refs) {\n    const refs = valueMap(options.refs, options => new Schema(options))\n    const getRef = (uid: any) => refs[uid]!\n    for (const key in refs) {\n      const options = refs[key]!\n      options.sKey = getRef(options.sKey)\n      options.inner = getRef(options.inner)\n      options.list = options.list && options.list.map(getRef)\n      options.dict = options.dict && valueMap(options.dict, getRef)\n    }\n    return refs[options.uid!]\n  }\n\n  Object.assign(schema, options)\n  if (typeof schema.callback === 'string') {\n    try {\n      // eslint-disable-next-line no-new-func\n      schema.callback = new Function('return ' + schema.callback)()\n    } catch {}\n  }\n  Object.defineProperty(schema, 'uid', { value: globalThis.__schemastery_index__++ })\n  Object.setPrototypeOf(schema, Schema.prototype)\n  schema.meta ||= {}\n  schema.toString = schema.toString.bind(schema)\n  return schema\n} as Schemastery.Static\n\nSchema.prototype = Object.create(Function.prototype)\n\nSchema.prototype[kSchema] = true\n\nlet refs: Record<number, Schema> | undefined\n\nSchema.prototype.toJSON = function toJSON() {\n  if (refs) {\n    refs[this.uid] ??= JSON.parse(JSON.stringify({ ...this }))\n    return this.uid as any\n  }\n\n  refs = { [this.uid]: { ...this } as Schema }\n  refs[this.uid] = JSON.parse(JSON.stringify({ ...this }))\n  const result = { uid: this.uid, refs }\n  refs = undefined\n  return result\n}\n\nSchema.prototype.set = function set(key, value) {\n  this.dict![key] = value\n  return this\n}\n\nSchema.prototype.push = function push(value) {\n  this.list!.push(value)\n  return this\n}\n\nfunction mergeDesc(original: undefined | string | Dict<string>, messages: Dict) {\n  const result: Dict<string> = typeof original === 'string' ? { '': original } : { ...original }\n  for (const locale in messages) {\n    const value = messages[locale]\n    if (value?.$description || value?.$desc) {\n      result[locale] = value.$description || value.$desc\n    } else if (typeof value === 'string') {\n      result[locale] = value\n    }\n  }\n  return result\n}\n\nfunction getInner(value: any) {\n  return value?.$value ?? value?.$inner\n}\n\nfunction extractKeys(data: any) {\n  return filterKeys(data ?? {}, key => !key.startsWith('$'))\n}\n\nSchema.prototype.i18n = function i18n(messages) {\n  const schema = Schema(this)\n  schema.meta.description = mergeDesc(schema.meta.description, messages)\n  if (schema.dict) {\n    schema.dict = valueMap(schema.dict, (inner, key) => {\n      return inner.i18n(valueMap(messages, (data) => getInner(data)?.[key] ?? data?.[key]))\n    })\n  }\n  if (schema.list) {\n    schema.list = schema.list!.map((inner, index) => {\n      return inner.i18n(valueMap(messages, (data = {}) => {\n        if (Array.isArray(getInner(data))) return getInner(data)[index]\n        if (Array.isArray(data)) return data[index]\n        return extractKeys(data)\n      }))\n    })\n  }\n  if (schema.inner) {\n    schema.inner = schema.inner.i18n(valueMap(messages, (data) => {\n      if (getInner(data)) return getInner(data)\n      return extractKeys(data)\n    }))\n  }\n  if (schema.sKey) {\n    schema.sKey = schema.sKey.i18n(valueMap(messages, (data) => data?.$key))\n  }\n  return schema\n}\n\nSchema.prototype.extra = function extra(key, value) {\n  const schema = Schema(this)\n  schema.meta = { ...schema.meta, [key]: value }\n  return schema\n}\n\nfor (const key of ['required', 'disabled', 'collapse', 'hidden', 'loose']) {\n  Object.assign(Schema.prototype, {\n    [key](this: Schema, value = true) {\n      const schema = Schema(this)\n      schema.meta = { ...schema.meta, [key]: value }\n      return schema\n    },\n  })\n}\n\nSchema.prototype.deprecated = function deprecated() {\n  const schema = Schema(this)\n  schema.meta.badges ||= []\n  schema.meta.badges.push({ text: 'deprecated', type: 'danger' })\n  return schema\n}\n\nSchema.prototype.experimental = function experimental() {\n  const schema = Schema(this)\n  schema.meta.badges ||= []\n  schema.meta.badges.push({ text: 'experimental', type: 'warning' })\n  return schema\n}\n\nSchema.prototype.pattern = function pattern(regexp) {\n  const schema = Schema(this)\n  const pattern = pick(regexp, ['source', 'flags'])\n  schema.meta = { ...schema.meta, pattern }\n  return schema\n}\n\nSchema.prototype.simplify = function simplify(this: Schema, value) {\n  if (deepEqual(value, this.meta.default, this.type === 'dict')) return null\n  if (isNullable(value)) return value\n  if (this.type === 'object' || this.type === 'dict') {\n    const result: Dict = {}\n    for (const key in value) {\n      const schema = this.type === 'object' ? this.dict![key] : this.inner\n      const item = schema?.simplify(value[key])\n      if (this.type === 'dict' || !isNullable(item)) result[key] = item\n    }\n    if (deepEqual(result, this.meta.default, this.type === 'dict')) return null\n    return result\n  } else if (this.type === 'array' || this.type === 'tuple') {\n    const result: any[] = []\n    ;(value as any[]).forEach((value, index) => {\n      const schema = this.type === 'array' ? this.inner : this.list![index]\n      const item = schema ? schema.simplify(value) : value\n      result.push(item)\n    })\n    return result\n  } else if (this.type === 'intersect') {\n    const result: Dict = {}\n    for (const item of this.list!) {\n      Object.assign(result, item.simplify(value))\n    }\n    return result\n  } else if (this.type === 'union') {\n    for (const schema of this.list!) {\n      try {\n        Schema.resolve(value, schema)\n        return schema.simplify(value)\n      } catch {}\n    }\n  }\n  return value\n}\n\nSchema.prototype.toString = function toString(inline?: boolean) {\n  return formatters[this.type]?.(this, inline) ?? `Schema<${this.type}>`\n}\n\nSchema.prototype.role = function role(role, extra) {\n  const schema = Schema(this)\n  schema.meta = { ...schema.meta, role, extra }\n  return schema\n}\n\nfor (const key of ['default', 'link', 'comment', 'description', 'max', 'min', 'step']) {\n  Object.assign(Schema.prototype, {\n    [key](this: Schema, value: any) {\n      const schema = Schema(this)\n      schema.meta = { ...schema.meta, [key]: value }\n      return schema\n    },\n  })\n}\n\nconst resolvers: Dict<Schemastery.Resolve> = {}\n\nSchema.extend = function extend(type, resolve) {\n  resolvers[type] = resolve\n}\n\nSchema.resolve = function resolve(data, schema, options = {}, strict = false) {\n  if (!schema) return [data]\n  if (options.ignore?.(data, schema)) return [data]\n\n  if (isNullable(data)) {\n    if (schema.meta.required) throw new TypeError(`missing required value`)\n    let current = schema\n    let fallback = schema.meta.default\n    while (current?.type === 'intersect' && isNullable(fallback)) {\n      current = current.list![0]\n      fallback = current?.meta.default\n    }\n    if (isNullable(fallback)) return [data]\n    data = clone(fallback)\n  }\n\n  const callback = resolvers[schema.type]\n  if (!callback) throw new TypeError(`unsupported type \"${schema.type}\"`)\n\n  try {\n    return callback(data, schema, options, strict)\n  } catch (error) {\n    if (!schema.meta.loose) throw error\n    return [schema.meta.default]\n  }\n}\n\nSchema.from = function from(source: any) {\n  if (isNullable(source)) {\n    return Schema.any()\n  } else if (['string', 'number', 'boolean'].includes(typeof source)) {\n    return Schema.const(source).required()\n  } else if (source[kSchema]) {\n    return source\n  } else if (typeof source === 'function') {\n    switch (source) {\n      case String: return Schema.string().required()\n      case Number: return Schema.number().required()\n      case Boolean: return Schema.boolean().required()\n      case Function: return Schema.function().required()\n      default: return Schema.is(source).required()\n    }\n  } else {\n    throw new TypeError(`cannot infer schema from ${source}`)\n  }\n}\n\nSchema.natural = function natural() {\n  return Schema.number().step(1).min(0)\n}\n\nSchema.percent = function percent() {\n  return Schema.number().step(0.01).min(0).max(1).role('slider')\n}\n\nSchema.date = function date() {\n  return Schema.union([\n    Schema.is(Date),\n    Schema.transform(Schema.string().role('datetime'), (value) => {\n      const date = new Date(value)\n      if (isNaN(+date)) throw new TypeError(`invalid date \"${value}\"`)\n      return date\n    }, true),\n  ])\n}\n\nSchema.extend('any', (data) => {\n  return [data]\n})\n\nSchema.extend('never', (data) => {\n  throw new TypeError(`expected nullable but got ${data}`)\n})\n\nSchema.extend('const', (data, { value }) => {\n  if (data === value) return [value]\n  throw new TypeError(`expected ${value} but got ${data}`)\n})\n\nfunction checkWithinRange(data: number, meta: Schemastery.Meta<any>, description: string, skipMin = false) {\n  const { max = Infinity, min = -Infinity } = meta\n  if (data > max) throw new TypeError(`expected ${description} <= ${max} but got ${data}`)\n  if (data < min && !skipMin) throw new TypeError(`expected ${description} >= ${min} but got ${data}`)\n}\n\nSchema.extend('string', (data, { meta }) => {\n  if (typeof data !== 'string') throw new TypeError(`expected string but got ${data}`)\n  if (meta.pattern) {\n    const regexp = new RegExp(meta.pattern.source, meta.pattern.flags)\n    if (!regexp.test(data)) throw new TypeError(`expect string to match regexp ${regexp}`)\n  }\n  checkWithinRange(data.length, meta, 'string length')\n  return [data]\n})\n\nfunction decimalShift(data: number, digits: number) {\n  const str = data.toString()\n  if (str.includes('e')) return data * Math.pow(10, digits)\n  const index = str.indexOf('.')\n  if (index === -1) return data * Math.pow(10, digits)\n  const frac = str.slice(index + 1)\n  const integer = str.slice(0, index)\n  if (frac.length <= digits) return +(integer + frac.padEnd(digits, '0'))\n  return +(integer + frac.slice(0, digits) + '.' + frac.slice(digits))\n}\n\nfunction isMultipleOf(data: number, min: number, step: number) {\n  step = Math.abs(step)\n  if (!/^\\d+\\.\\d+$/.test(step.toString())) {\n    return (data - min) % step === 0\n  }\n  const index = step.toString().indexOf('.')\n  const digits = step.toString().slice(index + 1).length\n  return Math.abs(decimalShift(data, digits) - decimalShift(min, digits)) % decimalShift(step, digits) === 0\n}\n\nSchema.extend('number', (data, { meta }) => {\n  if (typeof data !== 'number') throw new TypeError(`expected number but got ${data}`)\n  checkWithinRange(data, meta, 'number')\n  const { step } = meta\n  if (step && !isMultipleOf(data, meta.min ?? 0, step)) {\n    throw new TypeError(`expected number multiple of ${step} but got ${data}`)\n  }\n  return [data]\n})\n\nSchema.extend('boolean', (data) => {\n  if (typeof data === 'boolean') return [data]\n  throw new TypeError(`expected boolean but got ${data}`)\n})\n\nSchema.extend('bitset', (data, { bits, meta }) => {\n  let value = 0, keys: string[] = []\n  if (typeof data === 'number') {\n    value = data\n    for (const key in bits!) {\n      if (data & bits![key]!) {\n        keys.push(key)\n      }\n    }\n  } else if (Array.isArray(data)) {\n    keys = data\n    for (const key of keys) {\n      if (typeof key !== 'string') throw new TypeError(`expected string but got ${key}`)\n      if (key in bits!) value |= bits![key]!\n    }\n  } else {\n    throw new TypeError(`expected number or array but got ${data}`)\n  }\n  if (value === meta.default) return [value]\n  return [value, keys]\n})\n\nSchema.extend('function', (data) => {\n  if (typeof data === 'function') return [data]\n  throw new TypeError(`expected function but got ${data}`)\n})\n\nSchema.extend('is', (data, { callback }) => {\n  if (data instanceof callback!) return [data]\n  throw new TypeError(`expected ${callback!.name} but got ${data}`)\n})\n\nfunction property(data: any, key: keyof any, schema: Schema, options?: Schemastery.Options) {\n  try {\n    const [value, adapted] = Schema.resolve(data[key], schema, options)\n    if (adapted !== undefined) data[key] = adapted\n    return value\n  } catch (e) {\n    if (!options?.autofix) throw e\n    delete data[key]\n    return schema.meta.default\n  }\n}\n\nSchema.extend('array', (data, { inner, meta }, options) => {\n  if (!Array.isArray(data)) throw new TypeError(`expected array but got ${data}`)\n  checkWithinRange(data.length, meta, 'array length', !isNullable(inner!.meta.default))\n  return [data.map((_, index) => property(data, index, inner!, options))]\n})\n\nSchema.extend('dict', (data, { inner, sKey }, options, strict) => {\n  if (!isPlainObject(data)) throw new TypeError(`expected object but got ${data}`)\n  const result: any = {}\n  for (const key in data) {\n    let rKey: string\n    try {\n      rKey = Schema.resolve(key, sKey!)[0]\n    } catch (error) {\n      if (strict) continue\n      throw error\n    }\n    result[rKey] = property(data, key, inner!, options)\n    data[rKey] = data[key]\n    if (key !== rKey) delete data[key]\n  }\n  return [result]\n})\n\nSchema.extend('tuple', (data, { list }, options, strict) => {\n  if (!Array.isArray(data)) throw new TypeError(`expected array but got ${data}`)\n  const result = list!.map((inner, index) => property(data, index, inner, options))\n  if (strict) return [result]\n  result.push(...data.slice(list!.length))\n  return [result]\n})\n\nfunction merge(result: any, data: any) {\n  for (const key in data) {\n    if (key in result) continue\n    result[key] = data[key]\n  }\n}\n\nSchema.extend('object', (data, { dict }, options, strict) => {\n  if (!isPlainObject(data)) throw new TypeError(`expected object but got ${data}`)\n  const result: any = {}\n  for (const key in dict) {\n    const value = property(data, key, dict![key]!, options)\n    if (!isNullable(value) || key in data) {\n      result[key] = value\n    }\n  }\n  if (!strict) merge(result, data)\n  return [result]\n})\n\nSchema.extend('union', (data, { list, toString }, options, strict) => {\n  const messages: any[] = []\n  for (const inner of list!) {\n    try {\n      return Schema.resolve(data, inner, options, strict)\n    } catch (error) {\n      messages.push(error)\n    }\n  }\n  throw new TypeError(`expected ${toString()} but got ${JSON.stringify(data)}`)\n})\n\nSchema.extend('intersect', (data, { list, toString }, options, strict) => {\n  let result\n  for (const inner of list!) {\n    const value: any = Schema.resolve(data, inner, options, true)[0]\n    if (isNullable(value)) continue\n    if (isNullable(result)) {\n      result = value\n    } else if (typeof result !== typeof value) {\n      throw new TypeError(`expected ${toString()} but got ${JSON.stringify(data)}`)\n    } else if (typeof value === 'object') {\n      merge(result ??= {}, value)\n    } else if (result !== value) {\n      throw new TypeError(`expected ${toString()} but got ${JSON.stringify(data)}`)\n    }\n  }\n  if (!strict && isPlainObject(data)) merge(result, data)\n  return [result]\n})\n\nSchema.extend('transform', (data, { inner, callback, preserve }, options) => {\n  const [result, adapted = data] = Schema.resolve(data, inner!, options, true)\n  if (preserve) {\n    return [callback!(result)]\n  // } else if (isPlainObject(data)) {\n  //   const temp: any = {}\n  //   for (const key in result) {\n  //     if (!(key in data)) continue\n  //     temp[key] = data[key]\n  //     delete data[key]\n  //   }\n  //   Object.assign(data, callback!(temp))\n  //   return [callback!(result)]\n  } else {\n    return [callback!(result), callback!(adapted)]\n  }\n})\n\ntype Formatter = (schema: Schema, inline?: boolean) => string\nconst formatters: Dict<Formatter> = {}\n\nfunction defineMethod(name: string, keys: (keyof Schema)[], format: Formatter) {\n  formatters[name] = format\n  Object.assign(Schema, {\n    [name](...args: any[]) {\n      const schema = new Schema({ type: name } as Schema)\n      keys.forEach((key, index) => {\n        switch (key) {\n          case 'sKey': schema.sKey = args[index] ?? Schema.string(); break\n          case 'inner': schema.inner = Schema.from(args[index]); break\n          case 'list': schema.list = args[index].map(Schema.from); break\n          case 'dict': schema.dict = valueMap(args[index], Schema.from); break\n          case 'bits': {\n            schema.bits = {}\n            for (const key in args[index]) {\n              if (typeof args[index][key] !== 'number') continue\n              schema.bits[key] = args[index][key]\n            }\n            break\n          }\n          case 'callback': {\n            schema.callback = args[index]\n            ;(schema.callback as any)['toJSON'] ||= () => schema.callback!.toString()\n            break\n          }\n          default: schema[key] = args[index] as never\n        }\n      })\n      if (name === 'object' || name === 'dict') {\n        schema.meta.default = {}\n      } else if (name === 'array' || name === 'tuple') {\n        schema.meta.default = []\n      } else if (name === 'bitset') {\n        schema.meta.default = 0\n      }\n      return schema\n    },\n  })\n}\n\ndefineMethod('is', ['callback'], ({ callback }) => callback!.name)\ndefineMethod('any', [], () => 'any')\ndefineMethod('never', [], () => 'never')\ndefineMethod('const', ['value'], ({ value }) => typeof value === 'string' ? JSON.stringify(value) : value)\ndefineMethod('string', [], () => 'string')\ndefineMethod('number', [], () => 'number')\ndefineMethod('boolean', [], () => 'boolean')\ndefineMethod('bitset', ['bits'], () => 'bitset')\ndefineMethod('function', [], () => 'function')\ndefineMethod('array', ['inner'], ({ inner }) => `${inner!.toString(true)}[]`)\ndefineMethod('dict', ['inner', 'sKey'], ({ inner, sKey }) => `{ [key: ${sKey!.toString()}]: ${inner!.toString()} }`)\ndefineMethod('tuple', ['list'], ({ list }) => `[${list!.map((inner) => inner.toString()).join(', ')}]`)\n\ndefineMethod('object', ['dict'], ({ dict }) => {\n  if (Object.keys(dict!).length === 0) return '{}'\n  return `{ ${Object.entries(dict!).map(([key, inner]) => {\n    return `${key}${inner!.meta.required ? '' : '?'}: ${inner!.toString()}`\n  }).join(', ')} }`\n})\n\ndefineMethod('union', ['list'], ({ list }, inline) => {\n  const result = list!.map(({ toString: format }) => format()).join(' | ')\n  return inline ? `(${result})` : result\n})\n\ndefineMethod('intersect', ['list'], ({ list }) => {\n  return `${list!.map((inner) => inner.toString(true)).join(' & ')}`\n})\n\ndefineMethod('transform', ['inner', 'callback', 'preserve'], ({ inner }, isInner) => inner!.toString(isInner))\n\nexport = Schema\n", "import { defineProperty, remove } from 'cosmokit'\nimport { Context, Service } from '@cordisjs/core'\nimport Schema from 'schemastery'\n\nexport { default as Schema, default as z } from 'schemastery'\n\nconst kSchemaOrder = Symbol('cordis.schema.order')\n\ndeclare module '@cordisjs/core' {\n  interface Events {\n    'internal/service-schema'(): void\n  }\n}\n\nexport class SchemaService {\n  _data = Schema.intersect([]) as Schema & { list: Schema[] }\n\n  constructor(public ctx: Context) {\n    defineProperty(this, Service.tracker, {\n      property: 'ctx',\n    })\n  }\n\n  extend(schema: Schema, order = 0) {\n    const index = this._data.list.findIndex(a => a[kSchemaOrder] < order)\n    schema[kSchemaOrder] = order\n    return this.ctx.effect(() => {\n      if (index >= 0) {\n        this._data.list.splice(index, 0, schema)\n      } else {\n        this._data.list.push(schema)\n      }\n      this.ctx.emit('internal/service-schema')\n      return () => {\n        remove(this._data.list, schema)\n        this.ctx.emit('internal/service-schema')\n      }\n    })\n  }\n\n  toJSON() {\n    return this._data.toJSON()\n  }\n}\n\nexport default SchemaService\n", "import { Context, Service } from '@cordisjs/core'\nimport { remove } from 'cosmokit'\n\ndeclare module '@cordisjs/core' {\n  interface Context {\n    timer: TimerService\n    setTimeout(callback: () => void, delay: number): () => void\n    setInterval(callback: () => void, delay: number): () => void\n    sleep(delay: number): Promise<void>\n    throttle<F extends (...args: any[]) => void>(callback: F, delay: number, noTrailing?: boolean): WithDispose<F>\n    debounce<F extends (...args: any[]) => void>(callback: F, delay: number): WithDispose<F>\n  }\n}\n\ntype WithDispose<T> = T & { dispose: () => void }\n\nexport class TimerService extends Service {\n  constructor(ctx: Context) {\n    super(ctx, 'timer', true)\n    ctx.mixin('timer', ['setTimeout', 'setInterval', 'sleep', 'throttle', 'debounce'])\n  }\n\n  setTimeout(callback: () => void, delay: number) {\n    const dispose = this[Context.current].effect(() => {\n      const timer = setTimeout(() => {\n        dispose()\n        callback()\n      }, delay)\n      return () => clearTimeout(timer)\n    })\n    return dispose\n  }\n\n  setInterval(callback: () => void, delay: number) {\n    return this[Context.current].effect(() => {\n      const timer = setInterval(callback, delay)\n      return () => clearInterval(timer)\n    })\n  }\n\n  sleep(delay: number) {\n    const caller = this[Context.current]\n    return new Promise<void>((resolve, reject) => {\n      const dispose1 = this.setTimeout(() => {\n        dispose1()\n        dispose2()\n        resolve()\n      }, delay)\n      const dispose2 = caller.on('dispose', () => {\n        dispose1()\n        dispose2()\n        reject(new Error('Context has been disposed'))\n      })\n    })\n  }\n\n  private createWrapper(callback: (args: any[], check: () => boolean) => any, isDisposed = false) {\n    const caller = this[Context.current]\n    caller.scope.assertActive()\n\n    let timer: number | NodeJS.Timeout | undefined\n    const dispose = () => {\n      isDisposed = true\n      remove(caller.scope.disposables, dispose)\n      clearTimeout(timer)\n    }\n\n    const wrapper: any = (...args: any[]) => {\n      clearTimeout(timer)\n      timer = callback(args, () => !isDisposed && caller.scope.isActive)\n    }\n    wrapper.dispose = dispose\n    caller.scope.disposables.push(dispose)\n    return wrapper\n  }\n\n  throttle<F extends (...args: any[]) => void>(callback: F, delay: number, noTrailing?: boolean): WithDispose<F> {\n    let lastCall = -Infinity\n    const execute = (...args: any[]) => {\n      lastCall = Date.now()\n      callback(...args)\n    }\n    return this.createWrapper((args, isActive) => {\n      const now = Date.now()\n      const remaining = delay - (now - lastCall)\n      if (remaining <= 0) {\n        execute(...args)\n      } else if (isActive()) {\n        return setTimeout(execute, remaining, ...args)\n      }\n    }, noTrailing)\n  }\n\n  debounce<F extends (...args: any[]) => void>(callback: F, delay: number): WithDispose<F> {\n    return this.createWrapper((args, isActive) => {\n      if (!isActive()) return\n      return setTimeout(callback, delay, ...args)\n    })\n  }\n}\n\nexport default TimerService\n", "import * as core from '@cordisjs/core'\nimport { Logger, LoggerService } from '@cordisjs/logger'\nimport { SchemaService } from '@cordisjs/schema'\nimport { TimerService } from '@cordisjs/timer'\n\nexport * from '@cordisjs/core'\nexport { Schema, z } from '@cordisjs/schema'\nexport { Logger } from '@cordisjs/logger'\nexport { TimerService } from '@cordisjs/timer'\n\nexport interface Events<C extends Context = Context> extends core.Events<C> {}\n\nexport interface Context {\n  [Context.events]: Events<this>\n}\n\nexport class Context extends core.Context {\n  baseDir: string\n\n  constructor(config?: any) {\n    super(config)\n    this.baseDir = globalThis.process?.cwd?.() || ''\n\n    this.provide('logger', undefined, true)\n    this.provide('timer', undefined, true)\n\n    this.plugin(LoggerService)\n    this.plugin(TimerService)\n  }\n}\n\nexport abstract class Service<T = unknown, C extends Context = Context> extends core.Service<T, C> {\n  /** @deprecated use `this.ctx.logger` instead */\n  public logger: Logger\n  public schema: SchemaService\n\n  constructor(...args: core.Spread<T>)\n  constructor(ctx: C, ...args: core.Spread<T>)\n  constructor(ctx: C, name: string, immediate?: boolean)\n  constructor(...args: any) {\n    super(...args)\n    this.logger = this.ctx.logger(this.name)\n    this.schema = new SchemaService(this.ctx)\n  }\n\n  [core.Service.setup]() {\n    this.ctx = new Context() as C\n  }\n}\n\nexport default function () {}\n", "import { deduplicate, defineProperty, Dict, filterKeys, isNullable, makeArray, mapValues, MaybeArray, noop, omit, pick, remove } from 'cosmokit'\nimport { Context, Service, Spread } from 'cordis'\nimport { AtomicTypes, DeepPartial, FlatKeys, FlatPick, Flatten, getCell, Indexable, Keys, randomId, Row, unravel, Values } from './utils.ts'\nimport { Selection } from './selection.ts'\nimport { Field, Model, Relation } from './model.ts'\nimport { Driver } from './driver.ts'\nimport { Eval, isUpdateExpr, Update } from './eval.ts'\nimport { Query } from './query.ts'\nimport { Type } from './type.ts'\n\ntype TableLike<S> = Keys<S> | Selection\n\ntype TableType<S, T extends TableLike<S>> =\n  | T extends Keys<S> ? S[T]\n  : T extends Selection<infer U> ? U\n  : never\n\nexport namespace Join1 {\n  export type Input<S> = readonly Keys<S>[]\n\n  export type Output<S, U extends Input<S>> = {\n    [P in U[number]]: TableType<S, P>\n  }\n\n  type Parameters<S, U extends Input<S>> =\n    | U extends readonly [infer K extends Keys<S>, ...infer R]\n    ? [Row<S[K]>, ...Parameters<S, Extract<R, Input<S>>>]\n    : []\n\n  export type Predicate<S, U extends Input<S>> = (...args: Parameters<S, U>) => Eval.Expr<boolean>\n}\n\nexport namespace Join2 {\n  export type Input<S> = Dict<TableLike<S>>\n\n  export type Output<S, U extends Input<S>> = {\n    [K in keyof U]: TableType<S, U[K]>\n  }\n\n  type Parameters<S, U extends Input<S>> = {\n    [K in keyof U]: Row<TableType<S, U[K]>>\n  }\n\n  export type Predicate<S, U extends Input<S>> = (args: Parameters<S, U>) => Eval.Expr<boolean>\n}\n\ntype CreateUnit<T, S> =\n  | T extends Values<AtomicTypes> ? T\n  : T extends (infer I extends Values<S>)[] ? Create<I, S>[] |\n    {\n      $literal?: DeepPartial<I>\n      $create?: MaybeArray<Create<I, S>>\n      $upsert?: MaybeArray<Create<I, S>>\n      $connect?: Query.Expr<Flatten<I>>\n    }\n  : T extends Values<S> ? Create<T, S> |\n    {\n      $literal?: DeepPartial<T>\n      $create?: Create<T, S>\n      $upsert?: Create<T, S>\n      $connect?: Query.Expr<Flatten<T>>\n    }\n  : T extends (infer U)[] ? DeepPartial<U>[]\n  : T extends object ? Create<T, S>\n  : T\n\nexport type Create<T, S> = { [K in keyof T]?: CreateUnit<T[K], S> }\n\nfunction mergeQuery<T>(base: Query.FieldExpr<T>, query: Query.Expr<Flatten<T>> | ((row: Row<T>) => Query.Expr<Flatten<T>>)): Selection.Callback<T, boolean> {\n  if (typeof query === 'function') {\n    return (row: any) => {\n      const q = query(row)\n      return { $expr: true, ...base, ...(q.$expr ? q : { $expr: q }) } as any\n    }\n  } else {\n    return (_: any) => ({ $expr: true, ...base, ...query }) as any\n  }\n}\n\nexport class Database<S = {}, N = {}, C extends Context = Context> extends Service<undefined, C> {\n  static [Service.provide] = 'model'\n  static [Service.immediate] = true\n\n  static readonly transact = Symbol('minato.transact')\n  static readonly migrate = Symbol('minato.migrate')\n\n  public tables: Dict<Model> = Object.create(null)\n  public drivers: Driver<any, C>[] = []\n  public types: Dict<Field.Transform> = Object.create(null)\n\n  private _driver: Driver<any, C> | undefined\n  private stashed = new Set<string>()\n  private prepareTasks: Dict<Promise<void>> = Object.create(null)\n  public migrateTasks: Dict<Promise<void>> = Object.create(null)\n\n  async connect<T = undefined>(driver: Driver.Constructor<T>, ...args: Spread<T>) {\n    this.ctx.plugin(driver, args[0] as any)\n    await this.ctx.start()\n  }\n\n  refresh() {\n    for (const name in this.tables) {\n      this.prepareTasks[name] = this.prepare(name)\n    }\n  }\n\n  async prepared() {\n    if (this[Database.migrate]) return\n    await Promise.all(Object.values(this.prepareTasks))\n  }\n\n  private getDriver(table: string | Selection): Driver<any, C> {\n    if (Selection.is(table)) return table.driver as any\n    const model: Model = this.tables[table]\n    if (!model) throw new Error(`cannot resolve table \"${table}\"`)\n    return model.ctx?.get('database')?._driver as any\n  }\n\n  private async prepare(name: string) {\n    this.stashed.add(name)\n    await this.prepareTasks[name]\n    await Promise.resolve()\n    if (!this.stashed.delete(name)) return\n\n    const driver = this.getDriver(name)\n    if (!driver) return\n\n    const { fields } = driver.model(name)\n    Object.values(fields).forEach(field => field?.transformers?.forEach(x => driver.define(x)))\n\n    await driver.prepare(name)\n    await driver.prepareIndexes(name)\n  }\n\n  extend<K extends Keys<S>>(name: K, fields: Field.Extension<S[K], N>, config: Partial<Model.Config<FlatKeys<S[K]>>> = {}) {\n    let model = this.tables[name]\n    if (!model) {\n      model = this.tables[name] = new Model(name)\n    }\n    Object.entries(fields).forEach(([key, field]: [string, any]) => {\n      const transformer = []\n      this.parseField(field, transformer, undefined, value => field = fields[key] = value)\n      if (typeof field === 'object') field.transformers = transformer\n    })\n    model.extend(fields, config)\n    if (makeArray(model.primary).every(key => key in fields)) {\n      defineProperty(model, 'ctx', this.ctx)\n    }\n    Object.entries(fields).forEach(([key, def]: [string, Relation.Definition]) => {\n      if (!Relation.Type.includes(def.type)) return\n      const subprimary = !def.fields && makeArray(model.primary).includes(key)\n      const [relation, inverse] = Relation.parse(def, key, model, this.tables[def.table ?? key], subprimary)\n      const relmodel = this.tables[relation.table]\n      if (!relmodel) throw new Error(`relation table ${relation.table} does not exist`)\n      ;(model.fields[key] = Field.parse('expr')).relation = relation\n      if (def.target) {\n        (relmodel.fields[def.target] ??= Field.parse('expr')).relation = inverse\n      }\n\n      if (relation.type === 'oneToOne' || relation.type === 'manyToOne') {\n        relation.fields.forEach((x, i) => {\n          model.fields[x] ??= { ...relmodel.fields[relation.references[i]] } as any\n          if (!relation.required) {\n            model.fields[x]!.nullable = true\n            model.fields[x]!.initial = null\n          }\n        })\n      } else if (relation.type === 'manyToMany') {\n        const assocTable = Relation.buildAssociationTable(relation.table, name)\n        if (this.tables[assocTable]) return\n        const shared = Object.entries(relation.shared).map(([x, y]) => [Relation.buildSharedKey(x, y), model.fields[x]!.deftype] as const)\n        const fields = relation.fields.map(x => [Relation.buildAssociationKey(x, name), model.fields[x]!.deftype] as const)\n        const references = relation.references.map(x => [Relation.buildAssociationKey(x, relation.table), relmodel.fields[x]?.deftype] as const)\n        this.extend(assocTable as any, {\n          ...Object.fromEntries([...shared, ...fields, ...references]),\n          [name]: {\n            type: 'manyToOne',\n            table: name,\n            fields: [...shared, ...fields].map(x => x[0]),\n            references: [...Object.keys(relation.shared), ...relation.fields],\n          },\n          [relation.table]: {\n            type: 'manyToOne',\n            table: relation.table,\n            fields: [...shared, ...references].map(x => x[0]),\n            references: [...Object.values(relation.shared), ...relation.references],\n          },\n        } as any, {\n          primary: [...shared, ...fields, ...references].map(x => x[0]) as any,\n        })\n      }\n    })\n    // use relation field as primary\n    if (Array.isArray(model.primary) || model.fields[model.primary]!.relation) {\n      model.primary = deduplicate(makeArray(model.primary).map(key => model.fields[key]!.relation?.fields || key).flat())\n    }\n    model.unique = model.unique.map(keys => typeof keys === 'string' ? model.fields[keys]!.relation?.fields || keys\n      : keys.map(key => model.fields[key]!.relation?.fields || key).flat())\n\n    this.prepareTasks[name] = this.prepare(name)\n    ;(this.ctx as Context).emit('model', name)\n  }\n\n  private _parseField(field: any, transformers: Driver.Transformer[] = [], setInitial?: (value) => void, setField?: (value) => void): Type {\n    if (field === 'object') {\n      setInitial?.({})\n      setField?.({ initial: {}, deftype: 'json', type: Type.Object() })\n      return Type.Object()\n    } else if (field === 'array') {\n      setInitial?.([])\n      setField?.({ initial: [], deftype: 'json', type: Type.Array() })\n      return Type.Array()\n    } else if (typeof field === 'string' && this.types[field]) {\n      transformers.push({\n        types: [field as any],\n        load: this.types[field].load,\n        dump: this.types[field].dump,\n      }, ...(this.types[field].transformers ?? []))\n      setInitial?.(this.types[field].initial)\n      setField?.({ ...this.types[field], type: field })\n      return Type.fromField(field)\n    } else if (typeof field === 'string') {\n      setInitial?.(Field.getInitial((field as any).split('(')[0]))\n      setField?.(field)\n      return Type.fromField(field.split('(')[0])\n    } else if (typeof field === 'object' && field.type === 'object') {\n      const inner = field.inner ? unravel(field.inner, value => (value.type = 'object', value.inner ??= {})) : Object.create(null)\n      const initial = Object.create(null)\n      const res = Type.Object(mapValues(inner, (x, k) => this.parseField(x, transformers, value => initial[k] = value)))\n      setInitial?.(Field.getInitial('json', initial))\n      setField?.({ initial: Field.getInitial('json', initial), ...field, deftype: 'json', type: res })\n      return res\n    } else if (typeof field === 'object' && field.type === 'array') {\n      const res = field.inner ? Type.Array(this.parseField(field.inner, transformers)) : Type.Array()\n      setInitial?.([])\n      setField?.({ initial: [], ...field, deftype: 'json', type: res })\n      return res\n    } else if (typeof field === 'object' && this.types[field.type]) {\n      transformers.push({\n        types: [field.type as any],\n        load: this.types[field.type].load,\n        dump: this.types[field.type].dump,\n      }, ...(this.types[field.type].transformers ?? []))\n      setInitial?.(field.initial === undefined ? this.types[field.type].initial : field.initial)\n      setField?.({ initial: this.types[field.type].initial, ...field })\n      return Type.fromField(field.type)\n    } else {\n      setInitial?.(Field.getInitial(field.type, field.initial))\n      setField?.(field)\n      return Type.fromField(field.type)\n    }\n  }\n\n  private parseField(field: any, transformers: Driver.Transformer[] = [], setInitial?: (value) => void, setField?: (value: Field.Parsable) => void): Type {\n    let midfield\n    let type = this._parseField(field, transformers, setInitial, (value) => (midfield = value, setField?.(value)))\n    if (typeof field === 'object' && field.load && field.dump) {\n      if (type.inner) type = Type.fromField(this.define({ ...omit(midfield, ['load', 'dump']), type } as any))\n\n      const name = this.define({ ...field, deftype: midfield.deftype, type: type.type })\n      transformers.push({\n        types: [name as any],\n        load: field.load,\n        dump: field.dump,\n      })\n      // for transform type, intentionally assign a null initial on default\n      setInitial?.(field.initial)\n      setField?.({ ...field, deftype: midfield.deftype ?? this.types[type.type]?.deftype ?? type.type, initial: midfield.initial, type: name })\n      return Type.fromField(name as any)\n    }\n    if (typeof midfield === 'object') setField?.({ ...midfield, deftype: midfield.deftype ?? this.types[type.type]?.deftype ?? type?.type })\n    return type\n  }\n\n  define<K extends Exclude<Keys<N>, Field.Type | 'object' | 'array'>>(\n    name: K,\n    field: Field.Definition<N[K], N> | Field.Transform<N[K], any, N>,\n  ): K\n\n  define<T>(field: Field.Definition<T, N> | Field.Transform<T, any, N>): Field.NewType<T>\n  define(name: any, field?: any) {\n    if (typeof name === 'object') {\n      field = name\n      name = undefined\n    }\n\n    if (name && this.types[name]) throw new Error(`type \"${name}\" already defined`)\n    if (!name) while (this.types[name = '_define_' + randomId()]);\n\n    const transformers = []\n    const type = this._parseField(field, transformers, undefined, value => field = value)\n    field.transformers = transformers\n\n    this.ctx.effect(() => {\n      this.types[name] = { ...field }\n      this.types[name].deftype ??= this.types[field.type]?.deftype ?? type.type as any\n      return () => delete this.types[name]\n    })\n    return name as any\n  }\n\n  migrate<K extends Keys<S>>(\n    name: K,\n    fields: Field.Extension<S[K], N>,\n    callback: Model.Migration<this>,\n  ) {\n    this.extend(name, fields, { callback })\n  }\n\n  select<T>(table: Selection<T>, query?: Query<T>): Selection<T>\n  select<K extends Keys<S>>(\n    table: K,\n    query?: Query<S[K]>,\n    include?: Relation.Include<S[K], Values<S>> | null,\n  ): Selection<S[K]>\n\n  select(table: any, query?: any, include?: any) {\n    let sel = new Selection(this.getDriver(table), table, query)\n    if (typeof table !== 'string') return sel\n    const whereOnly = include === null, isAssoc = !!include?.$assoc\n    const rawquery = typeof query === 'function' ? query : () => query\n    const modelFields = this.tables[table].fields\n    if (include) include = filterKeys(include, (key) => !!modelFields[key]?.relation)\n    for (const key in { ...sel.query, ...sel.query.$not }) {\n      if (modelFields[key]?.relation) {\n        if (sel.query[key] === null && !modelFields[key].relation.required) {\n          sel.query[key] = Object.fromEntries(modelFields[key]!.relation!.references.map(k => [k, null]))\n        }\n        if (sel.query[key] && typeof sel.query[key] !== 'function' && typeof sel.query[key] === 'object'\n          && Object.keys(sel.query[key]).every(x => modelFields[key]!.relation!.fields.includes(`${key}.${x}`))) {\n          Object.entries(sel.query[key]).forEach(([k, v]) => sel.query[`${key}.${k}`] = v)\n          delete sel.query[key]\n        }\n        if (sel.query.$not?.[key] === null && !modelFields[key].relation.required) {\n          sel.query.$not[key] = Object.fromEntries(modelFields[key]!.relation!.references.map(k => [k, null]))\n        }\n        if (sel.query.$not?.[key] && typeof sel.query.$not[key] !== 'function' && typeof sel.query.$not[key] === 'object'\n          && Object.keys(sel.query.$not[key]).every(x => modelFields[key]!.relation!.fields.includes(`${key}.${x}`))) {\n          Object.entries(sel.query.$not[key]).forEach(([k, v]) => sel.query.$not![`${key}.${k}`] = v)\n          delete sel.query.$not[key]\n        }\n        if (!include || !Object.getOwnPropertyNames(include).includes(key)) {\n          (include ??= {})[key] = true\n        }\n      }\n    }\n\n    sel.query = omit(sel.query, Object.keys(include ?? {}))\n    if (Object.keys(sel.query.$not ?? {}).length) {\n      sel.query.$not = omit(sel.query.$not!, Object.keys(include ?? {}))\n      if (Object.keys(sel.query.$not).length === 0) Reflect.deleteProperty(sel.query, '$not')\n    }\n\n    if (include && typeof include === 'object') {\n      if (typeof table !== 'string') throw new Error('cannot include relations on derived selection')\n      const extraFields: string[] = []\n      const applyQuery = (sel: Selection, key: string) => {\n        const query2 = rawquery(sel.row)\n        const relquery = query2[key] !== undefined ? query2[key]\n          : query2.$not?.[key] !== undefined ? { $not: query2.$not?.[key] }\n            : undefined\n        return relquery === undefined ? sel : sel.where(this.transformRelationQuery(table, sel.row, key, relquery))\n      }\n      for (const key in include) {\n        if (!include[key] || !modelFields[key]?.relation) continue\n        const relation: Relation.Config<S> = modelFields[key]!.relation as any\n        const relmodel = this.tables[relation.table]\n        if (relation.type === 'oneToOne' || relation.type === 'manyToOne') {\n          sel = whereOnly ? sel : sel.join(key, this.select(relation.table,\n            typeof include[key] === 'object' ? filterKeys(include[key], (k) => !relmodel.fields[k]?.relation) : {} as any,\n            typeof include[key] === 'object' ? filterKeys(include[key], (k) => !!relmodel.fields[k]?.relation) : include[key],\n          ), (self, other) => Eval.and(\n            ...relation.fields.map((k, i) => Eval.eq(self[k], other[relation.references[i]])),\n          ), !isAssoc)\n          sel = applyQuery(sel, key)\n        } else if (relation.type === 'oneToMany') {\n          sel = whereOnly ? sel : sel.join(key, this.select(relation.table,\n            typeof include[key] === 'object' ? filterKeys(include[key], (k) => !relmodel.fields[k]?.relation) : {} as any,\n            typeof include[key] === 'object' ? filterKeys(include[key], (k) => !!relmodel.fields[k]?.relation) : include[key],\n          ), (self, other) => Eval.and(\n            ...relation.fields.map((k, i) => Eval.eq(self[k], other[relation.references[i]])),\n          ), true)\n          sel = applyQuery(sel, key)\n          sel = whereOnly ? sel : sel.groupBy([\n            ...Object.entries(modelFields).filter(([k, field]) => !extraFields.some(x => k.startsWith(`${x}.`)) && Field.available(field)).map(([k]) => k),\n            ...extraFields,\n          ], {\n            [key]: row => Eval.ignoreNull(Eval.array(row[key])),\n          })\n        } else if (relation.type === 'manyToMany') {\n          const assocTable: any = Relation.buildAssociationTable(relation.table, table)\n          const references = relation.fields.map(x => Relation.buildAssociationKey(x, table))\n          const shared = Object.entries(relation.shared).map(([x, y]) => [Relation.buildSharedKey(x, y), {\n            field: x,\n            reference: y,\n          }] as const)\n          sel = whereOnly ? sel : sel.join(key, this.select(assocTable, {}, { $assoc: true, [relation.table]: include[key] } as any),\n            (self, other) => Eval.and(\n              ...shared.map(([k, v]) => Eval.eq(self[v.field], other[k])),\n              ...relation.fields.map((k, i) => Eval.eq(self[k], other[references[i]])),\n            ), true)\n          sel = applyQuery(sel, key)\n          sel = whereOnly ? sel : sel.groupBy([\n            ...Object.entries(modelFields).filter(([k, field]) => !extraFields.some(x => k.startsWith(`${x}.`)) && Field.available(field)).map(([k]) => k),\n            ...extraFields,\n          ], {\n            [key]: row => Eval.ignoreNull(Eval.array(row[key][relation.table as any])),\n          })\n        }\n        extraFields.push(key)\n      }\n    }\n    return sel\n  }\n\n  join<const X extends Join1.Input<S>>(\n    tables: X,\n    callback?: Join1.Predicate<S, X>,\n    optional?: boolean[],\n  ): Selection<Join1.Output<S, X>>\n\n  join<X extends Join2.Input<S>>(\n    tables: X,\n    callback?: Join2.Predicate<S, X>,\n    optional?: Dict<boolean, Keys<X>>,\n  ): Selection<Join2.Output<S, X>>\n\n  join(tables: any, query = (...args: any[]) => Eval.and(), optional?: any) {\n    const oldTables = tables\n    if (Array.isArray(oldTables)) {\n      tables = Object.fromEntries(oldTables.map((name) => [name, this.select(name)]))\n    }\n    let sels = mapValues(tables, (t: TableLike<S>) => {\n      return typeof t === 'string' ? this.select(t) : t\n    })\n    if (Object.keys(sels).length === 0) throw new Error('no tables to join')\n    const drivers = new Set(Object.values(sels).map(sel => sel.driver[Database.transact] ?? sel.driver))\n    if (drivers.size !== 1) throw new Error('cannot join tables from different drivers')\n    if (Object.keys(sels).length === 2 && (optional?.[0] || optional?.[Object.keys(sels)[0]])) {\n      if (optional[1] || optional[Object.keys(sels)[1]]) throw new Error('full join is not supported')\n      sels = Object.fromEntries(Object.entries(sels).reverse())\n    }\n    const sel = new Selection([...drivers][0], sels)\n    if (Array.isArray(oldTables)) {\n      sel.args[0].having = Eval.and(query(...oldTables.map(name => sel.row[name])))\n      sel.args[0].optional = Object.fromEntries(oldTables.map((name, index) => [name, optional?.[index]]))\n    } else {\n      sel.args[0].having = Eval.and(query(sel.row))\n      sel.args[0].optional = optional\n    }\n    return this.select(sel)\n  }\n\n  async get<K extends Keys<S>>(table: K, query: Query<S[K]>): Promise<S[K][]>\n\n  async get<K extends Keys<S>, P extends FlatKeys<S[K]> = any>(\n    table: K,\n    query: Query<S[K]>,\n    cursor?: Driver.Cursor<P, S, K>,\n  ): Promise<FlatPick<S[K], P>[]>\n\n  async get<K extends Keys<S>>(table: K, query: Query<S[K]>, cursor?: any) {\n    let fields = Array.isArray(cursor) ? cursor : cursor?.fields\n    fields = fields ? Object.fromEntries(fields.map(x => [x, true])) : cursor?.include\n    return this.select(table, query, fields).execute(cursor) as any\n  }\n\n  async eval<K extends Keys<S>, T>(table: K, expr: Selection.Callback<S[K], T, true>, query?: Query<S[K]>): Promise<T> {\n    return this.select(table, query).execute(typeof expr === 'function' ? expr : () => expr)\n  }\n\n  async set<K extends Keys<S>>(\n    table: K,\n    query: Query<S[K]>,\n    update: Row.Computed<S[K], Update<S[K]>>,\n  ): Promise<Driver.WriteResult> {\n    const rawupdate = typeof update === 'function' ? update : () => update\n    let sel = this.select(table, query, null)\n    if (typeof update === 'function') update = update(sel.row)\n    const primary = makeArray(sel.model.primary)\n    if (primary.some(key => key in update)) {\n      throw new TypeError(`cannot modify primary key`)\n    }\n\n    const relations: [string, Relation.Config<S>][] = Object.entries(sel.model.fields)\n      .filter(([key, field]) => key in update && field!.relation)\n      .map(([key, field]) => [key, field!.relation!] as const) as any\n    if (relations.length) {\n      return await this.ensureTransaction(async (database) => {\n        const rows = await database.get(table, query)\n        sel = database.select(table, query, null)\n        let baseUpdate = omit(rawupdate(sel.row), relations.map(([key]) => key) as any)\n        baseUpdate = sel.model.format(baseUpdate)\n        for (const [key] of relations) {\n          await Promise.all(rows.map(row => database.processRelationUpdate(table, row, key, rawupdate(row as any)[key])))\n        }\n        return Object.keys(baseUpdate).length === 0 ? {} : await sel._action('set', baseUpdate).execute()\n      })\n    }\n\n    update = sel.model.format(update)\n    if (Object.keys(update).length === 0) return {}\n    return sel._action('set', update).execute()\n  }\n\n  async remove<K extends Keys<S>>(table: K, query: Query<S[K]>): Promise<Driver.WriteResult> {\n    const sel = this.select(table, query, null)\n    return sel._action('remove').execute()\n  }\n\n  async create<K extends Keys<S>>(table: K, data: Create<S[K], S>): Promise<S[K]>\n  async create<K extends Keys<S>>(table: K, data: any): Promise<S[K]> {\n    const sel = this.select(table)\n\n    if (!this.hasRelation(table, data)) {\n      const { primary, autoInc } = sel.model\n      if (!autoInc) {\n        const keys = makeArray(primary)\n        if (keys.some(key => getCell(data, key) === undefined)) {\n          throw new Error('missing primary key')\n        }\n      }\n      return sel._action('create', sel.model.create(data)).execute()\n    } else {\n      return this.ensureTransaction(database => database.createOrUpdate(table, data, false))\n    }\n  }\n\n  async upsert<K extends Keys<S>>(\n    table: K,\n    upsert: Row.Computed<S[K], Update<S[K]>[]>,\n    keys?: MaybeArray<FlatKeys<S[K], Indexable>>,\n  ): Promise<Driver.WriteResult> {\n    const sel = this.select(table)\n    if (typeof upsert === 'function') upsert = upsert(sel.row)\n    upsert = upsert.map(item => sel.model.format(item))\n    keys = makeArray(keys || sel.model.primary) as any\n    return sel._action('upsert', upsert, keys).execute()\n  }\n\n  makeProxy(marker: any, getDriver?: (driver: Driver<any, C>, database: this) => Driver<any, C>) {\n    const drivers = new Map<Driver<any, C>, Driver<any, C>>()\n    const database = new Proxy(this, {\n      get: (target, p, receiver) => {\n        if (p === marker) return true\n        if (p !== 'getDriver') return Reflect.get(target, p, receiver)\n        return (name: any) => {\n          const original = this.getDriver(name)\n          let driver = drivers.get(original)\n          if (!driver) {\n            driver = getDriver?.(original, database) ?? new Proxy(original, {\n              get: (target, p, receiver) => {\n                if (p === 'database') return database\n                return Reflect.get(target, p, receiver)\n              },\n            })\n            drivers.set(original, driver)\n          }\n          return driver\n        }\n      },\n    })\n    return database\n  }\n\n  withTransaction(callback: (database: this) => Promise<void>) {\n    return this.transact(callback)\n  }\n\n  async transact<T>(callback: (database: this) => Promise<T>) {\n    if (this[Database.transact]) throw new Error('nested transactions are not supported')\n    const finalTasks: Promise<void>[] = []\n    const database = this.makeProxy(Database.transact, (driver) => {\n      let initialized = false, session: any\n      let _resolve: (value: any) => void\n      const sessionTask = new Promise((resolve) => _resolve = resolve)\n      driver = new Proxy(driver, {\n        get: (target, p, receiver) => {\n          if (p === Database.transact) return target\n          if (p === 'database') return database\n          if (p === 'session') return session\n          if (p === '_ensureSession') return () => sessionTask\n          return Reflect.get(target, p, receiver)\n        },\n      })\n      finalTasks.push(driver.withTransaction((_session) => {\n        if (initialized) initialTask = initialTaskFactory()\n        initialized = true\n        _resolve(session = _session)\n        return initialTask as any\n      }))\n      return driver\n    })\n    const initialTaskFactory = () => Promise.resolve().then(() => callback(database))\n    let initialTask = initialTaskFactory()\n    return initialTask.catch(noop).finally(() => Promise.all(finalTasks))\n  }\n\n  async stopAll() {\n    await Promise.all(this.drivers.splice(0, Infinity).map(driver => driver.stop()))\n  }\n\n  async drop<K extends Keys<S>>(table: K) {\n    if (this[Database.transact]) throw new Error('cannot drop table in transaction')\n    await this.getDriver(table).drop(table)\n  }\n\n  async dropAll() {\n    if (this[Database.transact]) throw new Error('cannot drop table in transaction')\n    await Promise.all(Object.values(this.drivers).map(driver => driver.dropAll()))\n  }\n\n  async stats() {\n    await this.prepared()\n    const stats: Driver.Stats = { size: 0, tables: {} }\n    await Promise.all(Object.values(this.drivers).map(async (driver) => {\n      const { size = 0, tables } = await driver.stats()\n      stats.size += size\n      Object.assign(stats.tables, tables)\n    }))\n    return stats\n  }\n\n  private ensureTransaction<T>(callback: (database: this) => Promise<T>) {\n    if (this[Database.transact]) {\n      return callback(this)\n    } else {\n      return this.transact(callback)\n    }\n  }\n\n  private transformRelationQuery(table: any, row: any, key: any, query: Query.FieldExpr) {\n    const relation: Relation.Config<S> = this.tables[table].fields[key]!.relation! as any\n    const results: Eval.Expr<boolean>[] = []\n    if (relation.type === 'oneToOne' || relation.type === 'manyToOne') {\n      if (query === null) {\n        results.push(Eval.nin(\n          relation.fields.map(x => row[x]),\n          this.select(relation.table).evaluate(relation.references),\n        ))\n      } else {\n        results.push(Eval.in(\n          relation.fields.map(x => row[x]),\n          this.select(relation.table, query as any).evaluate(relation.references),\n        ))\n      }\n    } else if (relation.type === 'oneToMany') {\n      if (query.$or) results.push(Eval.or(...query.$or.map((q: any) => this.transformRelationQuery(table, row, key, q).$expr)))\n      if (query.$and) results.push(...query.$and.map((q: any) => this.transformRelationQuery(table, row, key, q).$expr))\n      if (query.$not) results.push(Eval.not(this.transformRelationQuery(table, row, key, query.$not).$expr))\n      if (query.$some) {\n        results.push(Eval.in(\n          relation.fields.map(x => row[x]),\n          this.select(relation.table, query.$some).evaluate(relation.references),\n        ))\n      }\n      if (query.$none) {\n        results.push(Eval.nin(\n          relation.fields.map(x => row[x]),\n          this.select(relation.table, query.$none).evaluate(relation.references),\n        ))\n      }\n      if (query.$every) {\n        results.push(Eval.nin(\n          relation.fields.map(x => row[x]),\n          this.select(relation.table, Eval.not(query.$every as any) as any).evaluate(relation.references),\n        ))\n      }\n    } else if (relation.type === 'manyToMany') {\n      const assocTable: any = Relation.buildAssociationTable(table, relation.table)\n      const fields: any[] = relation.fields.map(x => Relation.buildAssociationKey(x, table))\n      const references = relation.references.map(x => Relation.buildAssociationKey(x, relation.table))\n      if (query.$or) results.push(Eval.or(...query.$or.map((q: any) => this.transformRelationQuery(table, row, key, q).$expr)))\n      if (query.$and) results.push(...query.$and.map((q: any) => this.transformRelationQuery(table, row, key, q).$expr))\n      if (query.$not) results.push(Eval.not(this.transformRelationQuery(table, row, key, query.$not).$expr))\n      if (query.$some) {\n        const innerTable = this.select(relation.table, query.$some).evaluate(relation.references)\n        const relTable = this.select(assocTable, r => Eval.in(references.map(x => r[x]), innerTable)).evaluate(fields)\n        results.push(Eval.in(relation.fields.map(x => row[x]), relTable))\n      }\n      if (query.$none) {\n        const innerTable = this.select(relation.table, query.$none).evaluate(relation.references)\n        const relTable = this.select(assocTable, r => Eval.in(references.map(x => r[x]), innerTable)).evaluate(fields)\n        results.push(Eval.nin(relation.fields.map(x => row[x]), relTable))\n      }\n      if (query.$every) {\n        const innerTable = this.select(relation.table, Eval.not(query.$every as any) as any).evaluate(relation.references)\n        const relTable = this.select(assocTable, r => Eval.in(references.map(x => r[x]), innerTable)).evaluate(fields)\n        results.push(Eval.nin(relation.fields.map(x => row[x]), relTable))\n      }\n    }\n    return { $expr: Eval.and(...results) } as any\n  }\n\n  private async createOrUpdate<K extends Keys<S>>(table: K, data: any, upsert: boolean = true): Promise<S[K]> {\n    const sel = this.select(table)\n    data = { ...data }\n    const tasks = ['']\n    for (const key in data) {\n      if (data[key] !== undefined && this.tables[table].fields[key]?.relation) {\n        const relation = this.tables[table].fields[key].relation\n        if (relation.type === 'oneToOne' && relation.required) tasks.push(key)\n        else if (relation.type === 'oneToOne') tasks.unshift(key)\n        else if (relation.type === 'oneToMany') tasks.push(key)\n        else if (relation.type === 'manyToOne') tasks.unshift(key)\n        else if (relation.type === 'manyToMany') tasks.push(key)\n      }\n    }\n\n    for (const key of [...tasks]) {\n      if (!key) {\n        // create the plain data, with or without upsert\n        const { primary, autoInc } = sel.model\n        const keys = makeArray(primary)\n        if (keys.some(key => isNullable(getCell(data, key)))) {\n          if (!autoInc) {\n            throw new Error('missing primary key')\n          } else {\n            // nullable relation may pass null here, remove it to enable autoInc\n            delete data[primary as string]\n            upsert = false\n          }\n        }\n        if (upsert) {\n          await sel._action('upsert', [sel.model.format(omit(data, tasks))], keys).execute()\n        } else {\n          Object.assign(data, await sel._action('create', sel.model.create(omit(data, tasks))).execute())\n        }\n        continue\n      }\n      const value = data[key]\n      const relation: Relation.Config<S> = this.tables[table].fields[key]!.relation! as any\n      if (relation.type === 'oneToOne') {\n        if (value.$literal) {\n          data[key] = value.$literal\n          remove(tasks, key)\n        } else if (value.$create || !isUpdateExpr(value)) {\n          const result = await this.createOrUpdate(relation.table, {\n            ...Object.fromEntries(relation.references.map((k, i) => [k, getCell(data, relation.fields[i])])),\n            ...value.$create ?? value,\n          } as any)\n          if (!relation.required) {\n            relation.references.forEach((k, i) => data[relation.fields[i]] = getCell(result, k))\n          }\n        } else if (value.$upsert) {\n          await this.upsert(relation.table, [{\n            ...Object.fromEntries(relation.references.map((k, i) => [k, getCell(data, relation.fields[i])])),\n            ...value.$upsert,\n          }])\n          if (!relation.required) {\n            relation.references.forEach((k, i) => data[relation.fields[i]] = getCell(value.$upsert, k))\n          }\n        } else if (value.$connect) {\n          if (relation.required) {\n            await this.set(relation.table,\n              value.$connect,\n              Object.fromEntries(relation.references.map((k, i) => [k, getCell(data, relation.fields[i])])) as any,\n            )\n          } else {\n            const result = relation.references.every(k => value.$connect![k as any] !== undefined) ? [value.$connect]\n              : await this.get(relation.table, value.$connect as any)\n            if (result.length !== 1) throw new Error('related row not found or not unique')\n            relation.references.forEach((k, i) => data[relation.fields[i]] = getCell(result[0], k))\n          }\n        }\n      } else if (relation.type === 'manyToOne') {\n        if (value.$literal) {\n          data[key] = value.$literal\n          remove(tasks, key)\n        } else if (value.$create || !isUpdateExpr(value)) {\n          const result = await this.createOrUpdate(relation.table, value.$create ?? value)\n          relation.references.forEach((k, i) => data[relation.fields[i]] = getCell(result, k))\n        } else if (value.$upsert) {\n          await this.upsert(relation.table, [value.$upsert])\n          relation.references.forEach((k, i) => data[relation.fields[i]] = getCell(value.$upsert, k))\n        } else if (value.$connect) {\n          const result = relation.references.every(k => value.$connect![k as any] !== undefined) ? [value.$connect]\n            : await this.get(relation.table, value.$connect as any)\n          if (result.length !== 1) throw new Error('related row not found or not unique')\n          relation.references.forEach((k, i) => data[relation.fields[i]] = getCell(result[0], k))\n        }\n      } else if (relation.type === 'oneToMany') {\n        if (value.$create || Array.isArray(value)) {\n          for (const item of makeArray(value.$create ?? value)) {\n            await this.createOrUpdate(relation.table, {\n              ...Object.fromEntries(relation.references.map((k, i) => [k, getCell(data, relation.fields[i])])),\n              ...item,\n            })\n          }\n        }\n        if (value.$upsert) {\n          await this.upsert(relation.table, makeArray(value.$upsert).map(r => ({\n            ...Object.fromEntries(relation.references.map((k, i) => [k, getCell(data, relation.fields[i])])),\n            ...r,\n          })))\n        }\n        if (value.$connect) {\n          await this.set(relation.table,\n            value.$connect,\n            Object.fromEntries(relation.references.map((k, i) => [k, getCell(data, relation.fields[i])])) as any,\n          )\n        }\n      } else if (relation.type === 'manyToMany') {\n        const assocTable = Relation.buildAssociationTable(relation.table, table)\n        const fields = relation.fields.map(x => Relation.buildAssociationKey(x, table))\n        const references = relation.references.map(x => Relation.buildAssociationKey(x, relation.table))\n        const shared = Object.entries(relation.shared).map(([x, y]) => [Relation.buildSharedKey(x, y), {\n          field: x,\n          reference: y,\n        }] as const)\n        const result: any[] = []\n        if (value.$create || Array.isArray(value)) {\n          for (const item of makeArray(value.$create ?? value)) {\n            result.push(await this.createOrUpdate(relation.table, {\n              ...Object.fromEntries(shared.map(([, v]) => [v.reference, getCell(item, v.reference) ?? getCell(data, v.field)])),\n              ...item,\n            }))\n          }\n        }\n        if (value.$upsert) {\n          const upsert = makeArray(value.$upsert).map(r => ({\n            ...Object.fromEntries(shared.map(([, v]) => [v.reference, getCell(r, v.reference) ?? getCell(data, v.field)])),\n            ...r,\n          }))\n          await this.upsert(relation.table, upsert)\n          result.push(...upsert)\n        }\n        if (value.$connect) {\n          for (const item of makeArray(value.$connect)) {\n            if (references.every(k => item[k] !== undefined)) result.push(item)\n            else result.push(...await this.get(relation.table, item))\n          }\n        }\n        await this.upsert(assocTable as any, result.map(r => ({\n          ...Object.fromEntries(shared.map(([k, v]) => [k, getCell(r, v.reference) ?? getCell(data, v.field)])),\n          ...Object.fromEntries(fields.map((k, i) => [k, getCell(data, relation.fields[i])])),\n          ...Object.fromEntries(references.map((k, i) => [k, getCell(r, relation.references[i])])),\n        } as any)))\n      }\n    }\n    return data\n  }\n\n  private async processRelationUpdate(table: any, row: any, key: any, value: Relation.Modifier) {\n    const model = this.tables[table], update = Object.create(null)\n    const relation: Relation.Config<S> = this.tables[table].fields[key]!.relation! as any\n    if (relation.type === 'oneToOne') {\n      if (value === null) {\n        value = relation.required ? { $remove: {} } : { $disconnect: {} }\n      }\n      if (typeof value === 'object' && !isUpdateExpr(value)) {\n        value = { $create: value }\n      }\n      if (value.$remove) {\n        await this.remove(relation.table, Object.fromEntries(relation.references.map((k, i) => [k, getCell(row, relation.fields[i])])) as any)\n      }\n      if (value.$disconnect) {\n        if (relation.required) {\n          await this.set(relation.table,\n            mergeQuery(Object.fromEntries(relation.references.map((k, i) => [k, getCell(row, relation.fields[i])])), value.$disconnect),\n            Object.fromEntries(relation.references.map((k, i) => [k, null])) as any,\n          )\n        } else {\n          Object.assign(update, Object.fromEntries(relation.fields.map((k, i) => [k, null])))\n        }\n      }\n      if (value.$set || typeof value === 'function') {\n        await this.set(\n          relation.table,\n          Object.fromEntries(relation.references.map((k, i) => [k, getCell(row, relation.fields[i])])) as any,\n          value.$set ?? value as any,\n        )\n      }\n      if (value.$create) {\n        const result = await this.createOrUpdate(relation.table, {\n          ...Object.fromEntries(relation.references.map((k, i) => [k, getCell(row, relation.fields[i])])),\n          ...value.$create,\n        })\n        if (!relation.required) {\n          Object.assign(update, Object.fromEntries(relation.fields.map((k, i) => [k, getCell(result, relation.references[i])])))\n        }\n      }\n      if (value.$upsert) {\n        await this.upsert(relation.table, makeArray(value.$upsert).map(r => ({\n          ...Object.fromEntries(relation.references.map((k, i) => [k, getCell(row, relation.fields[i])])),\n          ...r,\n        })))\n        if (!relation.required) {\n          Object.assign(update, Object.fromEntries(relation.fields.map((k, i) => [k, getCell(value.$upsert, relation.references[i])])))\n        }\n      }\n      if (value.$connect) {\n        if (relation.required) {\n          await this.set(relation.table,\n            value.$connect,\n            Object.fromEntries(relation.references.map((k, i) => [k, getCell(row, relation.fields[i])])) as any,\n          )\n        } else {\n          const result = await this.get(relation.table, value.$connect as any)\n          if (result.length !== 1) throw new Error('related row not found or not unique')\n          Object.assign(update, Object.fromEntries(relation.fields.map((k, i) => [k, getCell(result[0], relation.references[i])])))\n        }\n      }\n    } else if (relation.type === 'manyToOne') {\n      if (value === null) {\n        value = { $disconnect: {} }\n      }\n      if (typeof value === 'object' && !isUpdateExpr(value)) {\n        value = { $create: value }\n      }\n      if (value.$remove) {\n        await this.remove(relation.table, Object.fromEntries(relation.references.map((k, i) => [k, getCell(row, relation.fields[i])])) as any)\n      }\n      if (value.$disconnect) {\n        Object.assign(update, Object.fromEntries(relation.fields.map((k, i) => [k, null])))\n      }\n      if (value.$set || typeof value === 'function') {\n        await this.set(\n          relation.table,\n          Object.fromEntries(relation.references.map((k, i) => [k, getCell(row, relation.fields[i])])) as any,\n          value.$set ?? value as any,\n        )\n      }\n      if (value.$create) {\n        const result = await this.createOrUpdate(relation.table, {\n          ...Object.fromEntries(relation.references.map((k, i) => [k, getCell(row, relation.fields[i])])),\n          ...value.$create,\n        })\n        Object.assign(update, Object.fromEntries(relation.fields.map((k, i) => [k, getCell(result, relation.references[i])])))\n      }\n      if (value.$upsert) {\n        await this.upsert(relation.table, makeArray(value.$upsert).map(r => ({\n          ...Object.fromEntries(relation.references.map((k, i) => [k, getCell(row, relation.fields[i])])),\n          ...r,\n        })))\n        Object.assign(update, Object.fromEntries(relation.fields.map((k, i) => [k, getCell(value.$upsert, relation.references[i])])))\n      }\n      if (value.$connect) {\n        const result = await this.get(relation.table, value.$connect)\n        if (result.length !== 1) throw new Error('related row not found or not unique')\n        Object.assign(update, Object.fromEntries(relation.fields.map((k, i) => [k, getCell(result[0], relation.references[i])])))\n      }\n    } else if (relation.type === 'oneToMany') {\n      if (Array.isArray(value)) {\n        const $create: any[] = [], $upsert: any[] = []\n        value.forEach(item => this.hasRelation(relation.table, item) ? $create.push(item) : $upsert.push(item))\n        value = { $remove: {}, $create, $upsert }\n      }\n      if (value.$remove) {\n        await this.remove(relation.table, mergeQuery(Object.fromEntries(relation.references.map((k, i) => [k, row[relation.fields[i]]])), value.$remove))\n      }\n      if (value.$disconnect) {\n        await this.set(relation.table,\n          mergeQuery(Object.fromEntries(relation.references.map((k, i) => [k, getCell(row, relation.fields[i])])), value.$disconnect),\n          Object.fromEntries(relation.references.map((k, i) => [k, null])) as any,\n        )\n      }\n      if (value.$set || typeof value === 'function') {\n        for (const setexpr of makeArray(value.$set ?? value) as any[]) {\n          const [query, update] = setexpr.update ? [setexpr.where, setexpr.update] : [{}, setexpr]\n          await this.set(relation.table,\n            mergeQuery(Object.fromEntries(relation.references.map((k, i) => [k, row[relation.fields[i]]])), query),\n            update,\n          )\n        }\n      }\n      if (value.$create) {\n        for (const item of makeArray(value.$create)) {\n          await this.createOrUpdate(relation.table, {\n            ...Object.fromEntries(relation.references.map((k, i) => [k, getCell(row, relation.fields[i])])),\n            ...item,\n          })\n        }\n      }\n      if (value.$upsert) {\n        await this.upsert(relation.table, makeArray(value.$upsert).map(r => ({\n          ...Object.fromEntries(relation.references.map((k, i) => [k, getCell(row, relation.fields[i])])),\n          ...r,\n        })))\n      }\n      if (value.$connect) {\n        await this.set(relation.table,\n          value.$connect,\n          Object.fromEntries(relation.references.map((k, i) => [k, row[relation.fields[i]]])) as any,\n        )\n      }\n    } else if (relation.type === 'manyToMany') {\n      const assocTable = Relation.buildAssociationTable(table, relation.table) as Keys<S>\n      const fields = relation.fields.map(x => Relation.buildAssociationKey(x, table))\n      const references = relation.references.map(x => Relation.buildAssociationKey(x, relation.table))\n      const shared = Object.entries(relation.shared).map(([x, y]) => [Relation.buildSharedKey(x, y), {\n        field: x,\n        reference: y,\n      }] as const)\n      if (Array.isArray(value)) {\n        const $create: any[] = [], $upsert: any[] = []\n        value.forEach(item => this.hasRelation(relation.table, item) ? $create.push(item) : $upsert.push(item))\n        value = { $disconnect: {}, $create, $upsert }\n      }\n      if (value.$remove) {\n        const rows = await this.select(assocTable, {\n          ...Object.fromEntries(shared.map(([k, v]) => [k, getCell(row, v.field)])),\n          ...Object.fromEntries(fields.map((k, i) => [k, getCell(row, relation.fields[i])])) as any,\n          [relation.table]: value.$remove,\n        }, null).execute()\n        await this.remove(assocTable, r => Eval.in(\n          [...shared.map(([k, v]) => r[k]), ...fields.map(x => r[x]), ...references.map(x => r[x])],\n          rows.map(r => [...shared.map(([k, v]) => getCell(r, k)), ...fields.map(x => getCell(r, x)), ...references.map(x => getCell(r, x))]),\n        ))\n        await this.remove(relation.table, (r) => Eval.in(\n          [...shared.map(([k, v]) => r[v.reference]), ...relation.references.map(x => r[x])],\n          rows.map(r => [...shared.map(([k, v]) => getCell(r, k)), ...references.map(x => getCell(r, x))]),\n        ))\n      }\n      if (value.$disconnect) {\n        const rows = await this.select(assocTable, {\n          ...Object.fromEntries(shared.map(([k, v]) => [k, getCell(row, v.field)])),\n          ...Object.fromEntries(fields.map((k, i) => [k, getCell(row, relation.fields[i])])) as any,\n          [relation.table]: value.$disconnect,\n        }, null).execute()\n        await this.remove(assocTable, r => Eval.in(\n          [...shared.map(([k, v]) => r[k]), ...fields.map(x => r[x]), ...references.map(x => r[x])],\n          rows.map(r => [...shared.map(([k, v]) => getCell(r, k)), ...fields.map(x => getCell(r, x)), ...references.map(x => getCell(r, x))]),\n        ))\n      }\n      if (value.$set) {\n        for (const setexpr of makeArray(value.$set) as any[]) {\n          const [query, update] = setexpr.update ? [setexpr.where, setexpr.update] : [{}, setexpr]\n          const rows = await this.select(assocTable, (r: any) => ({\n            ...Object.fromEntries(shared.map(([k, v]) => [k, getCell(row, v.field)])),\n            ...Object.fromEntries(fields.map((k, i) => [k, getCell(row, relation.fields[i])])) as any,\n            [relation.table]: query,\n          }), null).execute()\n          await this.set(relation.table,\n            (r) => Eval.in(\n              [...shared.map(([k, v]) => r[v.reference]), ...relation.references.map(x => r[x])],\n              rows.map(r => [...shared.map(([k, v]) => getCell(r, k)), ...references.map(x => getCell(r, x))]),\n            ),\n            update,\n          )\n        }\n      }\n      if (value.$create) {\n        const result: any[] = []\n        for (const item of makeArray(value.$create)) {\n          result.push(await this.createOrUpdate(relation.table, {\n            ...Object.fromEntries(relation.references.map((k, i) => [k, getCell(row, relation.fields[i])])),\n            ...item,\n          }))\n        }\n        await this.upsert(assocTable, result.map(r => ({\n          ...Object.fromEntries(shared.map(([k, v]) => [k, getCell(row, v.field)])),\n          ...Object.fromEntries(fields.map((k, i) => [k, row[relation.fields[i]]])),\n          ...Object.fromEntries(references.map((k, i) => [k, r[relation.references[i] as any]])),\n        })) as any)\n      }\n      if (value.$upsert) {\n        await this.upsert(relation.table, makeArray(value.$upsert).map(r => ({\n          ...Object.fromEntries(relation.references.map((k, i) => [k, getCell(row, relation.fields[i])])),\n          ...r,\n        })))\n        await this.upsert(assocTable, makeArray(value.$upsert).map(r => ({\n          ...Object.fromEntries(shared.map(([k, v]) => [k, getCell(row, v.field)])),\n          ...Object.fromEntries(fields.map((k, i) => [k, row[relation.fields[i]]])),\n          ...Object.fromEntries(references.map((k, i) => [k, r[relation.references[i] as any]])),\n        })) as any)\n      }\n      if (value.$connect) {\n        const rows = await this.get(relation.table,\n          mergeQuery(Object.fromEntries(shared.map(([k, v]) => [v.reference, getCell(row, v.field)])), value.$connect))\n        await this.upsert(assocTable, rows.map(r => ({\n          ...Object.fromEntries(shared.map(([k, v]) => [k, getCell(row, v.field)])),\n          ...Object.fromEntries(fields.map((k, i) => [k, row[relation.fields[i]]])),\n          ...Object.fromEntries(references.map((k, i) => [k, r[relation.references[i] as any]])),\n        })) as any)\n      }\n    }\n    if (Object.keys(update).length) {\n      await this.set(table, pick(model.format(row), makeArray(model.primary)), update)\n    }\n  }\n\n  private hasRelation<K extends Keys<S>>(table: K, data: Create<S[K], S>): boolean\n  private hasRelation(table: any, data: any) {\n    for (const key in data) {\n      if (data[key] !== undefined && this.tables[table].fields[key]?.relation) return true\n    }\n    return false\n  }\n}\n", "import { Binary, Intersect, isNullable } from 'cosmokit'\nimport { Eval, isEvalExpr } from './eval.ts'\n\nexport type Values<S> = S[keyof S]\n\nexport type Keys<O, T = any> = Values<{\n  [P in keyof O]: O[P] extends T | undefined ? P : never\n}> & string\n\nexport type FlatKeys<O, T = any> = Keys<Flatten<O>, T>\n\nexport type FlatPick<O, K extends FlatKeys<O>> = {\n  [P in string & keyof O as K extends P | `${P}.${any}` ? P : never]:\n    | P extends K\n    ? O[P]\n    : FlatPick<O[P], Extract<K extends `${any}.${infer R}` ? R : never, FlatKeys<O[P]>>>\n}\n\nexport type DeepPartial<T> =\n  | T extends Values<AtomicTypes> ? T\n  : T extends (infer U)[] ? DeepPartial<U>[]\n  : T extends object ? { [K in keyof T]?: DeepPartial<T[K]> }\n  : T\n\nexport interface AtomicTypes {\n  Number: number\n  String: string\n  Boolean: boolean\n  BigInt: bigint\n  Symbol: symbol\n  Date: Date\n  RegExp: RegExp\n  Function: Function\n  ArrayBuffer: ArrayBuffer\n  SharedArrayBuffer: SharedArrayBuffer\n}\n\nexport type Indexable = string | number | bigint\nexport type Comparable = string | number | boolean | bigint | Date\n\ntype FlatWrap<S, A extends 0[], P extends string> = { [K in P]: S }\n  // rule out atomic types\n  | (S extends Values<AtomicTypes> ? never\n  // rule out array types\n  : S extends any[] ? never\n  // check recursion depth\n  // rule out dict / infinite types\n  : string extends keyof S ? never\n  : A extends [0, ...infer R extends 0[]] ? FlatMap<S, R, `${P}.`>\n  : never)\n\ntype FlatMap<S, T extends 0[], P extends string = ''> = Values<{\n  [K in keyof S & string as `${P}${K}`]: FlatWrap<S[K], T, `${P}${K}`>\n}>\n\ntype Sequence<N extends number, A extends 0[] = []> = A['length'] extends N ? A : Sequence<N, [0, ...A]>\n\nexport type Flatten<S, D extends number = 5> = Intersect<FlatMap<S, Sequence<D>>>\n\nexport type Row<S> = {\n  [K in keyof S]-?: Row.Cell<NonNullable<S[K]>>\n}\n\nexport namespace Row {\n  export type Cell<T> = Eval.Expr<T, false> & (T extends Comparable ? {} : Row<T>)\n  export type Computed<S, T> = T | ((row: Row<S>) => T)\n}\n\nexport function isComparable(value: any): value is Comparable {\n  return typeof value === 'string'\n    || typeof value === 'number'\n    || typeof value === 'boolean'\n    || typeof value === 'bigint'\n    || value instanceof Date\n}\n\nexport function isFlat(value: any): value is Values<AtomicTypes> {\n  return !value\n    || typeof value !== 'object'\n    || isEvalExpr(value)\n    || Object.keys(value).length === 0\n    || Array.isArray(value)\n    || value instanceof Date\n    || value instanceof RegExp\n    || Binary.isSource(value)\n}\n\nconst letters = 'abcdefghijklmnopqrstuvwxyz'\n\nexport function randomId() {\n  return Array(8).fill(0).map(() => letters[Math.floor(Math.random() * letters.length)]).join('')\n}\n\nexport interface RegExpLike {\n  source: string\n  flags?: string\n}\n\nexport function makeRegExp(source: string | RegExpLike, flags?: string) {\n  return (source instanceof RegExp && !flags) ? source : new RegExp((source as any).source ?? source, flags ?? (source as any).flags)\n}\n\nexport function unravel(source: object, init?: (value) => any) {\n  const result = {}\n  for (const key in source) {\n    let node = result\n    const segments = key.split('.').reverse()\n    for (let index = segments.length - 1; index > 0; index--) {\n      const segment = segments[index]\n      node = node[segment] ??= {}\n      if (init) node = init(node)\n    }\n    node[segments[0]] = source[key]\n  }\n  return result\n}\n\nexport function flatten(source: object, prefix = '', ignore: (value: any) => boolean = isFlat) {\n  const result = {}\n  for (const key in source) {\n    const value = source[key]\n    if (ignore(value)) {\n      result[`${prefix}${key}`] = value\n    } else {\n      Object.assign(result, flatten(value, `${prefix}${key}.`, ignore))\n    }\n  }\n  return result\n}\n\nexport function getCell(row: any, path: any): any {\n  if (path in row) return row[path]\n  if (path.includes('.')) {\n    const index = path.indexOf('.')\n    return getCell(row[path.slice(0, index)] ?? {}, path.slice(index + 1))\n  } else {\n    return row[path]\n  }\n}\n\nexport function isEmpty(value: any) {\n  if (isNullable(value)) return true\n  if (typeof value !== 'object') return false\n  for (const key in value) {\n    if (!isEmpty(value[key])) return false\n  }\n  return true\n}\n", "import { defineProperty, isNullable, mapValues } from 'cosmokit'\nimport { AtomicTypes, Comparable, Flatten, isComparable, isEmpty, makeRegExp, Row, Values } from './utils.ts'\nimport { Type } from './type.ts'\nimport { Field, Relation } from './model.ts'\nimport { Query } from './query.ts'\n\nexport function isEvalExpr(value: any): value is Eval.Expr {\n  return value && Object.keys(value).some(key => key.startsWith('$'))\n}\n\nexport const isUpdateExpr: (value: any) => boolean = isEvalExpr\n\nexport function isAggrExpr(expr: Eval.Expr): boolean {\n  return expr['$'] || expr['$select']\n}\n\nexport function hasSubquery(value: any): boolean {\n  if (!isEvalExpr(value)) return false\n  return Object.entries(value).filter(([k]) => k.startsWith('$')).some(([k, v]) => {\n    if (isNullable(v) || isComparable(v)) return false\n    if (k === '$exec') return true\n    if (isEvalExpr(v)) return hasSubquery(v)\n    if (Array.isArray(v)) return v.some(x => hasSubquery(x))\n    if (typeof v === 'object') return Object.values(v).some(x => hasSubquery(x))\n    return false\n  })\n}\n\ntype UnevalObject<S> = {\n  [K in keyof S]?: (undefined extends S[K] ? null : never) | Uneval<Exclude<S[K], undefined>, boolean>\n}\n\nexport type Uneval<U, A extends boolean> =\n  | U extends Values<AtomicTypes> ? Eval.Term<U, A>\n  : U extends (infer T extends object)[] ? Relation.Modifier<T> | Eval.Array<T, A>\n  : U extends object ? Eval.Expr<U, A> | UnevalObject<Flatten<U>> | Relation.Modifier<U>\n  : any\n\nexport type Eval<U> =\n  | U extends Values<AtomicTypes> ? U\n  : U extends Eval.Expr<infer T> ? T\n  : never\n\nconst kExpr = Symbol('expr')\nconst kType = Symbol('type')\nconst kAggr = Symbol('aggr')\n\nexport namespace Eval {\n  export interface Expr<T = any, A extends boolean = boolean> {\n    [kExpr]: true\n    [kType]?: T\n    [kAggr]?: A\n    [Type.kType]?: Type<T>\n  }\n\n  export type Any<A extends boolean = boolean> = Comparable | Expr<any, A>\n\n  export type Term<T, A extends boolean = boolean> = T | Expr<T, A>\n  export type Array<T, A extends boolean = boolean> = Term<T, A>[] | Expr<T[], A>\n\n  export type Unary<S, R> = <T extends S, A extends boolean>(x: Term<T, A>) => Expr<R, A>\n  export type Binary<S, R> = <T extends S, A extends boolean>(x: Term<T, A>, y: Term<T, A>) => Expr<R, A>\n  export type Multi<S, R> = <T extends S, A extends boolean>(...args: Term<T, A>[]) => Expr<R, A>\n\n  export interface Aggr<S> {\n    <T extends S>(value: Term<T, false>): Expr<T, true>\n    <T extends S, A extends boolean>(value: Array<T, A>): Expr<T, A>\n  }\n\n  export interface Branch<T, A extends boolean> {\n    case: Term<boolean, A>\n    then: Term<T, A>\n  }\n\n  export interface Static {\n    <A extends boolean>(key: string, value: any, type: Type): Eval.Expr<any, A>\n\n    ignoreNull<T, A extends boolean>(value: Eval.Expr<T, A>): Eval.Expr<T, A>\n    select(...args: Any[]): Expr<any[], false>\n    query<T extends object>(row: Row<T>, query: Query.Expr<T>, expr?: Term<boolean>): Expr<boolean, false>\n\n    // univeral\n    if<T extends Comparable, A extends boolean>(cond: Any<A>, vThen: Term<T, A>, vElse: Term<T, A>): Expr<T, A>\n    ifNull<T extends Comparable, A extends boolean>(...args: Term<T, A>[]): Expr<T, A>\n    switch<T, A extends boolean>(branches: Branch<T, A>[], vDefault: Term<T, A>): Expr<T, A>\n\n    // arithmetic\n    add: Multi<number, number>\n    mul: Multi<number, number>\n    multiply: Multi<number, number>\n    sub: Binary<number, number>\n    subtract: Binary<number, number>\n    div: Binary<number, number>\n    divide: Binary<number, number>\n    mod: Binary<number, number>\n    modulo: Binary<number, number>\n\n    // mathematic\n    abs: Unary<number, number>\n    floor: Unary<number, number>\n    ceil: Unary<number, number>\n    round: Unary<number, number>\n    exp: Unary<number, number>\n    log<A extends boolean>(x: Term<number, A>, base?: Term<number, A>): Expr<number, A>\n    pow: Binary<number, number>\n    power: Binary<number, number>\n    random(): Expr<number, false>\n\n    // comparison\n    eq: Multi<Comparable, boolean>\n    ne: Binary<Comparable, boolean>\n    gt: Binary<Comparable, boolean>\n    ge: Binary<Comparable, boolean>\n    gte: Binary<Comparable, boolean>\n    lt: Binary<Comparable, boolean>\n    le: Binary<Comparable, boolean>\n    lte: Binary<Comparable, boolean>\n\n    // element\n    in<T extends Comparable, A extends boolean>(x: Term<T, A>, array: Array<T, A>): Expr<boolean, A>\n    in<T extends Comparable, A extends boolean>(x: Term<T, A>[], array: Array<T[], A>): Expr<boolean, A>\n    nin<T extends Comparable, A extends boolean>(x: Term<T, A>, array: Array<T, A>): Expr<boolean, A>\n    nin<T extends Comparable, A extends boolean>(x: Term<T, A>[], array: Array<T[], A>): Expr<boolean, A>\n\n    // string\n    concat: Multi<string, string>\n    regex<A extends boolean>(x: Term<string, A>, y: RegExp): Expr<boolean, A>\n    regex<A extends boolean>(x: Term<string, A>, y: Term<string, A>, flags?: string): Expr<boolean, A>\n\n    // logical / bitwise\n    and: Multi<boolean, boolean> & Multi<number, number> & Multi<bigint, bigint>\n    or: Multi<boolean, boolean> & Multi<number, number> & Multi<bigint, bigint>\n    not: Unary<boolean, boolean> & Unary<number, number> & Unary<bigint, bigint>\n    xor: Multi<boolean, boolean> & Multi<number, number> & Multi<bigint, bigint>\n\n    // typecast\n    literal<T>(value: T, type?: Type<T> | Field.Type<T> | Field.NewType<T> | string): Expr<T, false>\n    number: Unary<any, number>\n\n    // aggregation / json\n    sum: Aggr<number>\n    avg: Aggr<number>\n    max: Aggr<Comparable>\n    min: Aggr<Comparable>\n    count(value: Any<false>): Expr<number, true>\n    length(value: Any<false>): Expr<number, true>\n    length<A extends boolean>(value: any[] | Expr<any[], A>): Expr<number, A>\n\n    object<T extends any>(row: Row.Cell<T>): Expr<T, false>\n    object<T extends any>(row: Row<T>): Expr<T, false>\n    array<T>(value: Expr<T, false>): Expr<T[], true>\n\n    get<T extends object, K extends keyof T, A extends boolean>(x: Term<T, A>, key: K): Expr<T[K], A>\n    get<T extends any, A extends boolean>(x: Array<T, A>, index: Term<number, A>): Expr<T, A>\n  }\n}\n\nexport const Eval = ((key, value, type) => defineProperty(defineProperty({ ['$' + key]: value }, kExpr, true), Type.kType, type)) as Eval.Static\n\nconst operators = Object.create(null) as Record<`$${keyof Eval.Static}`, (args: any, data: any) => any>\n\noperators['$'] = getRecursive\n\ntype UnaryCallback<T> = T extends (value: infer R) => Eval.Expr<infer S> ? (value: R, data: any[]) => S : never\nfunction unary<K extends keyof Eval.Static>(key: K, callback: UnaryCallback<Eval.Static[K]>, type: Type | ((...args: any[]) => Type)): Eval.Static[K] {\n  operators[`$${key}`] = callback\n  return ((value: any) => Eval(key, value, typeof type === 'function' ? type(value) : type)) as any\n}\n\ntype MultivariateCallback<T> = T extends (...args: infer R) => Eval.Expr<infer S> ? (args: R, data: any) => S : never\nfunction multary<K extends keyof Eval.Static>(\n  key: K, callback: MultivariateCallback<Eval.Static[K]>,\n  type: Type | ((...args: any[]) => Type),\n): Eval.Static[K] {\n  operators[`$${key}`] = callback\n  return (...args: any) => Eval(key, args, typeof type === 'function' ? type(...args) : type) as any\n}\n\ntype BinaryCallback<T> = T extends (...args: any[]) => Eval.Expr<infer S> ? (...args: any[]) => S : never\nfunction comparator<K extends keyof Eval.Static>(key: K, callback: BinaryCallback<Eval.Static[K]>): Eval.Static[K] {\n  operators[`$${key}`] = (args, data) => {\n    const left = executeEval(data, args[0])\n    const right = executeEval(data, args[1])\n    if (isNullable(left) || isNullable(right)) return true\n    return callback(left.valueOf(), right.valueOf())\n  }\n  return (...args: any) => Eval(key, args, Type.Boolean) as any\n}\n\nEval.switch = (branches, vDefault) => Eval('switch', { branches, default: vDefault }, Type.fromTerm(branches[0]))\noperators.$switch = (args, data) => {\n  for (const branch of args.branches) {\n    if (executeEval(data, branch.case)) return executeEval(data, branch.then)\n  }\n  return executeEval(data, args.default)\n}\n\n// special forms\nEval.ignoreNull = (expr) => (expr['$ignoreNull'] = true, expr[Type.kType]!.ignoreNull = true, expr)\nEval.select = multary('select', (args, table) => args.map(arg => executeEval(table, arg)), Type.Array())\nEval.query = (row, query, expr = true) => ({ $expr: expr, ...query }) as any\nEval.exec = unary('exec', (expr, data) => (expr.driver as any).executeSelection(expr, data), (expr) => Type.fromTerm(expr.args[0]))\n\n// univeral\nEval.if = multary('if', ([cond, vThen, vElse], data) => executeEval(data, cond) ? executeEval(data, vThen)\n  : executeEval(data, vElse), (cond, vThen, vElse) => Type.fromTerm(vThen))\nEval.ifNull = multary('ifNull', ([value, fallback], data) => executeEval(data, value) ?? executeEval(data, fallback), (value) => Type.fromTerm(value))\n\n// arithmetic\nEval.add = multary('add', (args, data) => args.reduce<number>((prev, curr) => prev + executeEval(data, curr), 0), Type.Number)\nEval.mul = Eval.multiply = multary('multiply', (args, data) => args.reduce<number>((prev, curr) => prev * executeEval(data, curr), 1), Type.Number)\nEval.sub = Eval.subtract = multary('subtract', ([left, right], data) => executeEval(data, left) - executeEval(data, right), Type.Number)\nEval.div = Eval.divide = multary('divide', ([left, right], data) => executeEval(data, left) / executeEval(data, right), Type.Number)\nEval.mod = Eval.modulo = multary('modulo', ([left, right], data) => executeEval(data, left) % executeEval(data, right), Type.Number)\n\n// mathematic\nEval.abs = unary('abs', (arg, data) => Math.abs(executeEval(data, arg)), Type.Number)\nEval.floor = unary('floor', (arg, data) => Math.floor(executeEval(data, arg)), Type.Number)\nEval.ceil = unary('ceil', (arg, data) => Math.ceil(executeEval(data, arg)), Type.Number)\nEval.round = unary('round', (arg, data) => Math.round(executeEval(data, arg)), Type.Number)\nEval.exp = unary('exp', (arg, data) => Math.exp(executeEval(data, arg)), Type.Number)\nEval.log = multary('log', ([left, right], data) => Math.log(executeEval(data, left)) / Math.log(executeEval(data, right ?? Math.E)), Type.Number)\nEval.pow = Eval.power = multary('power', ([left, right], data) => Math.pow(executeEval(data, left), executeEval(data, right)), Type.Number)\nEval.random = () => Eval('random', {}, Type.Number)\noperators.$random = () => Math.random()\n\n// comparison\nEval.eq = comparator('eq', (left, right) => left === right)\nEval.ne = comparator('ne', (left, right) => left !== right)\nEval.gt = comparator('gt', (left, right) => left > right)\nEval.ge = Eval.gte = comparator('gte', (left, right) => left >= right)\nEval.lt = comparator('lt', (left, right) => left < right)\nEval.le = Eval.lte = comparator('lte', (left, right) => left <= right)\n\n// element\nEval.in = (value, array) => Eval('in', [Array.isArray(value) ? Eval.select(...value) : value, array], Type.Boolean)\noperators.$in = ([value, array], data) => {\n  const val = executeEval(data, value), arr = executeEval(data, array)\n  if (typeof val === 'object') return arr.includes(val) || arr.map(JSON.stringify).includes(JSON.stringify(val))\n  return arr.includes(val)\n}\nEval.nin = (value, array) => Eval('nin', [Array.isArray(value) ? Eval.select(...value) : value, array], Type.Boolean)\noperators.$nin = ([value, array], data) => {\n  const val = executeEval(data, value), arr = executeEval(data, array)\n  if (typeof val === 'object') return !arr.includes(val) && !arr.map(JSON.stringify).includes(JSON.stringify(val))\n  return !arr.includes(val)\n}\n\n// string\nEval.concat = multary('concat', (args, data) => args.map(arg => executeEval(data, arg)).join(''), Type.String)\nEval.regex = multary('regex', ([value, regex, flags], data) => makeRegExp(executeEval(data, regex), flags).test(executeEval(data, value)), Type.Boolean)\n\n// logical / bitwise\nEval.and = multary('and', (args, data) => {\n  const type = Type.fromTerms(args, Type.Boolean)\n  if (Field.boolean.includes(type.type)) return args.every(arg => executeEval(data, arg))\n  else if (Field.number.includes(type.type)) return args.map(arg => executeEval(data, arg)).reduce((prev, curr) => prev & curr)\n  else if (type.type === 'bigint') return args.map(arg => BigInt(executeEval(data, arg) ?? 0)).reduce((prev, curr) => prev & curr)\n}, (...args) => Type.fromTerms(args, Type.Boolean))\nEval.or = multary('or', (args, data) => {\n  const type = Type.fromTerms(args, Type.Boolean)\n  if (Field.boolean.includes(type.type)) return args.some(arg => executeEval(data, arg))\n  else if (Field.number.includes(type.type)) return args.map(arg => executeEval(data, arg)).reduce((prev, curr) => prev | curr)\n  else if (type.type === 'bigint') return args.map(arg => BigInt(executeEval(data, arg) ?? 0)).reduce((prev, curr) => prev | curr)\n}, (...args) => Type.fromTerms(args, Type.Boolean))\nEval.not = unary('not', (value, data) => {\n  const type = Type.fromTerms([value], Type.Boolean)\n  if (Field.boolean.includes(type.type)) return !executeEval(data, value)\n  else if (Field.number.includes(type.type)) return ~executeEval(data, value) as any\n  else if (type.type === 'bigint') return ~BigInt(executeEval(data, value) ?? 0)\n}, (value) => Type.fromTerms([value], Type.Boolean))\nEval.xor = multary('xor', (args, data) => {\n  const type = Type.fromTerms(args, Type.Boolean)\n  if (Field.boolean.includes(type.type)) return args.map(arg => executeEval(data, arg)).reduce((prev, curr) => prev !== curr)\n  else if (Field.number.includes(type.type)) return args.map(arg => executeEval(data, arg)).reduce((prev, curr) => prev ^ curr)\n  else if (type.type === 'bigint') return args.map(arg => BigInt(executeEval(data, arg) ?? 0)).reduce((prev, curr) => prev ^ curr)\n}, (...args) => Type.fromTerms(args, Type.Boolean))\n\n// typecast\nEval.literal = multary('literal', ([value, type]) => value, (value, type) => type ? Type.fromField(type) : Type.fromTerm(value))\nEval.number = unary('number', (arg, data) => {\n  const value = executeEval(data, arg)\n  return value instanceof Date ? Math.floor(value.valueOf() / 1000) : Number(value)\n}, Type.Number)\n\nconst unwrapAggr = (expr: any, def?: Type) => {\n  let type = Type.fromTerm(expr)\n  type = Type.getInner(type) ?? type\n  return (def && type.type === 'expr') ? def : type\n}\n\n// aggregation\nEval.sum = unary('sum', (expr, table) => Array.isArray(table)\n  ? table.reduce<number>((prev, curr) => prev + executeAggr(expr, curr), 0)\n  : Array.from<number>(executeEval(table, expr)).reduce((prev, curr) => prev + curr, 0), Type.Number)\nEval.avg = unary('avg', (expr, table) => {\n  if (Array.isArray(table)) return table.reduce((prev, curr) => prev + executeAggr(expr, curr), 0) / table.length\n  else {\n    const array = Array.from<number>(executeEval(table, expr))\n    return array.reduce((prev, curr) => prev + curr, 0) / array.length\n  }\n}, Type.Number)\nEval.max = unary('max', (expr, table) => Array.isArray(table)\n  ? table.map(data => executeAggr(expr, data)).reduce((x, y) => x > y ? x : y, -Infinity)\n  : Array.from<number>(executeEval(table, expr)).reduce((x, y) => x > y ? x : y, -Infinity), (expr) => unwrapAggr(expr, Type.Number))\nEval.min = unary('min', (expr, table) => Array.isArray(table)\n  ? table.map(data => executeAggr(expr, data)).reduce((x, y) => x < y ? x : y, Infinity)\n  : Array.from<number>(executeEval(table, expr)).reduce((x, y) => x < y ? x : y, Infinity), (expr) => unwrapAggr(expr, Type.Number))\nEval.count = unary('count', (expr, table) => new Set(table.map(data => executeAggr(expr, data))).size, Type.Number)\ndefineProperty(Eval, 'length', unary('length', (expr, table) => Array.isArray(table)\n  ? table.map(data => executeAggr(expr, data)).length\n  : Array.from(executeEval(table, expr)).length, Type.Number))\n\noperators.$object = (field, table) => mapValues(field, value => executeAggr(value, table))\nEval.object = (fields: any) => {\n  if (fields.$model) {\n    const modelFields: [string, Field][] = Object.entries(fields.$model.fields)\n    const prefix: string = fields.$prefix\n    fields = Object.fromEntries(modelFields\n      .filter(([, field]) => Field.available(field))\n      .filter(([path]) => path.startsWith(prefix))\n      .map(([k]) => [k.slice(prefix.length), fields[k.slice(prefix.length)]]))\n    return Eval('object', fields, Type.Object(mapValues(fields, (value) => Type.fromTerm(value))))\n  }\n  return Eval('object', fields, Type.Object(mapValues(fields, (value) => Type.fromTerm(value)))) as any\n}\n\nEval.array = unary('array', (expr, table) => Array.isArray(table)\n  ? table.map(data => executeAggr(expr, data)).filter(x => !expr[Type.kType]?.ignoreNull || !isEmpty(x))\n  : Array.from(executeEval(table, expr)).filter(x => !expr[Type.kType]?.ignoreNull || !isEmpty(x)), (expr) => Type.Array(Type.fromTerm(expr)))\n\nEval.get = multary('get', ([x, key], data) => executeEval(data, x)?.[executeEval(data, key)], (x, key) => Type.getInner(Type.fromTerm(x), key) ?? Type.Any)\n\nexport { Eval as $ }\n\nexport type Update<T = any> = UnevalObject<Flatten<T>>\n\nfunction getRecursive(args: string | string[], data: any): any {\n  if (typeof args === 'string') {\n    // for backwards compatibility, TODO remove in v2\n    return getRecursive(['_', args], data)\n  }\n\n  const [ref, path] = args\n  let value = data[ref]\n  if (!value) return value\n  if (path in value) return value[path]\n  const prefix = Object.keys(value).find(s => path.startsWith(s + '.')) || path.split('.', 1)[0]\n  const rest = path.slice(prefix.length + 1).split('.').filter(Boolean)\n  rest.unshift(prefix)\n  for (const key of rest) {\n    value = value[key]\n    if (!value) return value\n  }\n  return value\n}\n\nfunction executeEvalExpr(expr: any, data: any) {\n  for (const key in expr) {\n    if (key in operators) {\n      return operators[key](expr[key], data)\n    }\n  }\n  return expr\n}\n\nfunction executeAggr(expr: any, data: any) {\n  if (typeof expr === 'string') {\n    return getRecursive(expr, data)\n  }\n  return executeEvalExpr(expr, data)\n}\n\nexport function executeEval(data: any, expr: any) {\n  if (isComparable(expr) || isNullable(expr)) {\n    return expr\n  }\n  if (Array.isArray(expr)) {\n    return expr.map(item => executeEval(data, item))\n  }\n  return executeEvalExpr(expr, data)\n}\n\nexport function executeUpdate(data: any, update: any, ref: string) {\n  for (const key in update) {\n    let root = data\n    const path = key.split('.')\n    const last = path.pop()!\n    for (const key of path) {\n      root = root[key] ||= {}\n    }\n    root[last] = executeEval({ [ref]: data, _: data }, update[key])\n  }\n  return data\n}\n", "import { Binary, defineProperty, isNullable, mapValues } from 'cosmokit'\nimport { Field } from './model.ts'\nimport { Eval, isEvalExpr } from './eval.ts'\nimport { isEmpty } from './utils.ts'\n// import { Keys } from './utils.ts'\n\nexport interface Type<T = any, N = any> {\n  [Type.kType]?: true\n  // FIXME\n  type: Field.Type<T> // | Keys<N, T> | Field.NewType<T>\n  inner?: T extends (infer I)[] ? Type<I, N> : Field.Type<T> extends 'json' ? { [key in keyof T]: Type<T[key], N> } : never\n  array?: boolean\n  // For left joined unmatched result only\n  ignoreNull?: boolean\n}\n\nexport namespace Type {\n  export const kType = Symbol.for('minato.type')\n\n  export const Any: Type = fromField('expr')\n  export const Boolean: Type<boolean> = fromField('boolean')\n  export const Number: Type<number> = fromField('double')\n  export const String: Type<string> = fromField('string')\n\n  type Extract<T> =\n    | T extends Type<infer I> ? I\n    : T extends Field<infer I> ? I\n    : T extends Field.Type<infer I> ? I\n    : T extends Eval.Term<infer I> ? I\n    : never\n\n  export type Object<T = any> = Type<T>\n  export const Object = <T extends any>(obj?: T): Object<{ [K in keyof T]: Extract<T> }> => defineProperty({\n    type: 'json' as any,\n    inner: globalThis.Object.keys(obj ?? {}).length ? mapValues(obj!, (value) => isType(value) ? value : fromField(value)) as any : undefined,\n  }, kType, true)\n\n  export type Array<T = any> = Type<T[]>\n  export const Array = <T>(type?: Type<T>): Type.Array<T> => defineProperty({\n    type: 'json',\n    inner: type,\n    array: true,\n  }, kType, true)\n\n  export function fromPrimitive<T>(value: T): Type<T> {\n    if (isNullable(value)) return fromField('expr' as any)\n    else if (typeof value === 'number') return Number as any\n    else if (typeof value === 'string') return String as any\n    else if (typeof value === 'boolean') return Boolean as any\n    else if (typeof value === 'bigint') return fromField('bigint' as any)\n    else if (value instanceof Date) return fromField('timestamp' as any)\n    else if (Binary.is(value)) return fromField('binary' as any)\n    else if (globalThis.Array.isArray(value)) return Array(value.length ? fromPrimitive(value[0]) : undefined) as any\n    else if (typeof value === 'object') return fromField('json' as any)\n    throw new TypeError(`invalid primitive: ${value}`)\n  }\n\n  // FIXME: Type | Field<T> | Field.Type<T> | Keys<N, T> | Field.NewType<T>\n  export function fromField<T, N>(field: any): Type<T, N> {\n    if (isType(field)) return field\n    else if (field === 'array') return Array() as never\n    else if (field === 'object') return Object() as never\n    else if (typeof field === 'string') return defineProperty({ type: field }, kType, true) as never\n    else if (field.type) return field.type\n    else if (field.expr?.[kType]) return field.expr[kType]\n    throw new TypeError(`invalid field: ${field}`)\n  }\n\n  export function fromTerm<T>(value: Eval.Term<T>, initial?: Type): Type<T> {\n    if (isEvalExpr(value)) return value[kType] ?? initial ?? fromField('expr' as any)\n    else return fromPrimitive(value as T)\n  }\n\n  export function fromTerms(values: Eval.Term<any>[], initial?: Type): Type {\n    return values.map((x) => fromTerm(x)).find((type) => type.type !== 'expr') ?? initial ?? fromField('expr')\n  }\n\n  export function isType(value: any): value is Type {\n    return value?.[kType] === true\n  }\n\n  export function isArray(type?: Type) {\n    return (type?.type === 'json') && type?.array\n  }\n\n  export function getInner(type?: Type, key?: string): Type | undefined {\n    if (!type?.inner) return\n    if (isArray(type)) return type.inner\n    if (isNullable(key)) return\n    if (type.inner[key]) return type.inner[key]\n    if (key.includes('.')) return key.split('.').reduce((t, k) => getInner(t, k), type)\n    const fields = globalThis.Object.entries(type.inner)\n      .filter(([k]) => k.startsWith(`${key}.`))\n      .map(([k, v]) => [k.slice(key.length + 1), v])\n    return fields.length ? Object(globalThis.Object.fromEntries(fields)) : undefined\n  }\n\n  export function transform(value: any, type: Type, callback: (value: any, type?: Type) => any) {\n    if (!isNullable(value) && type?.inner) {\n      if (Type.isArray(type)) {\n        return (value as any[]).map(x => callback(x, Type.getInner(type))).filter(x => !type.ignoreNull || !isEmpty(x))\n      } else {\n        if (type.ignoreNull && isEmpty(value)) return null\n        return mapValues(value, (x, k) => callback(x, Type.getInner(type, k)))\n      }\n    }\n    return value\n  }\n}\n", "import { clone, deepEqual, defineProperty, filterKeys, isNullable, makeArray, mapValues, MaybeArray } from 'cosmokit'\nimport { Context } from 'cordis'\nimport { Eval, isEvalExpr, Update } from './eval.ts'\nimport { DeepPartial, FlatKeys, Flatten, isFlat, Keys, Row, unravel } from './utils.ts'\nimport { Type } from './type.ts'\nimport { Driver } from './driver.ts'\nimport { Query } from './query.ts'\nimport { Selection } from './selection.ts'\nimport { Create } from './database.ts'\n\nconst Primary = Symbol('minato.primary')\nexport type Primary = (string | number) & { [Primary]: true }\n\nexport namespace Relation {\n  const Marker = Symbol('minato.relation')\n  export type Marker = { [Marker]: true }\n\n  export const Type = ['oneToOne', 'oneToMany', 'manyToOne', 'manyToMany'] as const\n  export type Type = typeof Type[number]\n\n  export interface Config<S extends any = any, T extends Keys<S> = Keys<S>, K extends string = string> {\n    type: Type\n    table: T\n    references: Keys<S[T]>[]\n    fields: K[]\n    shared: Record<K, Keys<S[T]>>\n    required: boolean\n  }\n\n  export interface Definition<K extends string = string> {\n    type: 'oneToOne' | 'manyToOne' | 'manyToMany'\n    table?: string\n    target?: string\n    references?: MaybeArray<string>\n    fields?: MaybeArray<K>\n    shared?: MaybeArray<K> | Partial<Record<K, string>>\n  }\n\n  export type Include<T, S> = boolean | {\n    [P in keyof T]?: T[P] extends MaybeArray<infer U> | undefined ? U extends S ? Include<U, S> : Query.Expr<Flatten<U>> : never\n  }\n\n  export type SetExpr<S extends object = any> = ((row: Row<S>) => Update<S>) | {\n    where: Query.Expr<Flatten<S>> | Selection.Callback<S, boolean>\n    update: Row.Computed<S, Update<S>>\n  }\n\n  export interface Modifier<T extends object = any, S extends any = any> {\n    $create?: MaybeArray<Create<T, S>>\n    $upsert?: MaybeArray<DeepPartial<T>>\n    $set?: MaybeArray<SetExpr<T>>\n    $remove?: Query.Expr<Flatten<T>> | Selection.Callback<T, boolean>\n    $connect?: Query.Expr<Flatten<T>> | Selection.Callback<T, boolean>\n    $disconnect?: Query.Expr<Flatten<T>> | Selection.Callback<T, boolean>\n  }\n\n  export function buildAssociationTable(...tables: [string, string]) {\n    return '_' + tables.sort().join('_')\n  }\n\n  export function buildAssociationKey(key: string, table: string) {\n    return `${table}.${key}`\n  }\n\n  export function buildSharedKey(field: string, reference: string) {\n    return [field, reference].sort().join('_')\n  }\n\n  export function parse(def: Definition, key: string, model: Model, relmodel: Model, subprimary?: boolean): [Config, Config] {\n    const shared = !def.shared ? {}\n      : typeof def.shared === 'string' ? { [def.shared]: def.shared }\n        : Array.isArray(def.shared) ? Object.fromEntries(def.shared.map(x => [x, x]))\n          : def.shared\n    const fields = def.fields ?? ((subprimary || def.type === 'manyToOne'\n      || (def.type === 'oneToOne' && (model.name === relmodel.name || !makeArray(relmodel.primary).every(key => !relmodel.fields[key]?.nullable))))\n      ? makeArray(relmodel.primary).map(x => `${key}.${x}`) : model.primary)\n    const relation: Config = {\n      type: def.type,\n      table: def.table ?? relmodel.name,\n      fields: makeArray(fields),\n      shared: shared as any,\n      references: makeArray(def.references ?? relmodel.primary),\n      required: def.type !== 'manyToOne' && model.name !== relmodel.name\n        && makeArray(fields).every(key => !model.fields[key]?.nullable || makeArray(model.primary).includes(key)),\n    }\n    // remove shared keys from fields and references\n    Object.entries(shared).forEach(([k, v]) => {\n      relation.fields = relation.fields.filter(x => x !== k)\n      relation.references = relation.references.filter(x => x !== v)\n    })\n    const inverse: Config = {\n      type: relation.type === 'oneToMany' ? 'manyToOne'\n        : relation.type === 'manyToOne' ? 'oneToMany'\n          : relation.type,\n      table: model.name,\n      fields: relation.references,\n      references: relation.fields,\n      shared: Object.fromEntries(Object.entries(shared).map(([k, v]) => [v, k])),\n      required: relation.type !== 'oneToMany'\n        && relation.references.every(key => !relmodel.fields[key]?.nullable || makeArray(relmodel.primary).includes(key)),\n    }\n    if (inverse.required) relation.required = false\n    return [relation, inverse]\n  }\n}\n\nexport interface Field<T = any> {\n  type: Type<T>\n  deftype?: Field.Type<T>\n  length?: number\n  nullable?: boolean\n  initial?: T\n  precision?: number\n  scale?: number\n  expr?: Eval.Expr\n  legacy?: string[]\n  deprecated?: boolean\n  relation?: Relation.Config\n  transformers?: Driver.Transformer[]\n}\n\nexport namespace Field {\n  export const number: Type[] = ['integer', 'unsigned', 'float', 'double', 'decimal']\n  export const string: Type[] = ['char', 'string', 'text']\n  export const boolean: Type[] = ['boolean']\n  export const date: Type[] = ['timestamp', 'date', 'time']\n  export const object: Type[] = ['list', 'json']\n\n  export type Type<T = any> =\n    | T extends Primary ? 'primary'\n    : T extends number ? 'integer' | 'unsigned' | 'float' | 'double' | 'decimal'\n    : T extends string ? 'char' | 'string' | 'text'\n    : T extends boolean ? 'boolean'\n    : T extends Date ? 'timestamp' | 'date' | 'time'\n    : T extends ArrayBuffer ? 'binary'\n    : T extends bigint ? 'bigint'\n    : T extends unknown[] ? 'list' | 'json' | 'oneToMany' | 'manyToMany'\n    : T extends object ? 'json' | 'oneToOne' | 'manyToOne'\n    : 'expr'\n\n  type Shorthand<S extends string> = S | `${S}(${any})`\n\n  export type Object<T = any, N = any> = {\n    type: 'object'\n    inner?: Extension<T, N>\n  } & Omit<Field<T>, 'type'>\n\n  export type Array<T = any, N = any> = {\n    type: 'array'\n    inner?: Literal<T, N> | Definition<T, N> | Transform<T, any, N>\n  } & Omit<Field<T[]>, 'type'>\n\n  export type Transform<S = any, T = S, N = any> = {\n    type: Type<T> | Keys<N, T> | NewType<T> | 'object' | 'array'\n    dump: (value: S | null) => T | null | void\n    load: (value: T | null) => S | null | void\n    initial?: S\n  } & Omit<Definition<T, N>, 'type' | 'initial'>\n\n  export type Definition<T, N> =\n    | (Omit<Field<T>, 'type'> & { type: Type<T> | Keys<N, T> | NewType<T> })\n    | (T extends object ? Object<T, N> : never)\n    | (T extends (infer I)[] ? Array<I, N> : never)\n\n  export type Literal<T, N> =\n    | Shorthand<Type<T>>\n    | Keys<N, T>\n    | NewType<T>\n    | (T extends object ? 'object' : never)\n    | (T extends unknown[] ? 'array' : never)\n\n  export type Parsable<T = any> = {\n    type: Type<T> | Field<T>['type']\n  } & Omit<Field<T>, 'type'>\n\n  type MapField<O = any, N = any> = {\n    [K in keyof O]?:\n      | Literal<O[K], N>\n      | Definition<O[K], N>\n      | Transform<O[K], any, N>\n      | (O[K] extends object | undefined ? Relation.Definition<FlatKeys<O>> : never)\n  }\n\n  export type Extension<O = any, N = any> = MapField<Flatten<O>, N>\n\n  const NewType = Symbol('minato.newtype')\n  export type NewType<T> = string & { [NewType]: T }\n\n  export type Config<O = any> = {\n    [K in keyof O]?: Field<O[K]>\n  }\n\n  const regexp = /^(\\w+)(?:\\((.+)\\))?$/\n\n  export function parse(source: string | Parsable): Field {\n    if (typeof source === 'function') throw new TypeError('view field is not supported')\n    if (typeof source !== 'string') {\n      return {\n        initial: null,\n        deftype: source.type as any,\n        ...source,\n        type: Type.fromField(source.type),\n      }\n    }\n\n    // parse string definition\n    const capture = regexp.exec(source)\n    if (!capture) throw new TypeError('invalid field definition')\n    const type = capture[1] as Type\n    const args = (capture[2] || '').split(',')\n    const field: Field = { deftype: type, type: Type.fromField(type) }\n\n    // set default initial value\n    if (field.initial === undefined) field.initial = getInitial(type)\n\n    // set length information\n    if (type === 'decimal') {\n      field.precision = +args[0]\n      field.scale = +args[1]\n    } else if (args[0]) {\n      field.length = +args[0]\n    }\n\n    return field\n  }\n\n  export function getInitial(type: Field.Type, initial?: any) {\n    if (initial === undefined) {\n      if (Field.number.includes(type)) return 0\n      if (Field.string.includes(type)) return ''\n      if (type === 'list') return []\n      if (type === 'json') return {}\n    }\n    return initial\n  }\n\n  export function available(field?: Field) {\n    return !!field && !field.deprecated && !field.relation && field.deftype !== 'expr'\n  }\n}\n\nexport namespace Model {\n  export type Migration<D = any> = (database: D) => Promise<void>\n\n  export interface Config<K extends string = string> {\n    callback?: Migration\n    autoInc: boolean\n    primary: MaybeArray<K>\n    unique: MaybeArray<K>[]\n    indexes: (MaybeArray<K> | Driver.IndexDef<K>)[]\n    foreign: {\n      [P in K]?: [string, string]\n    }\n  }\n}\n\nexport interface Model extends Model.Config {}\n\nexport class Model<S = any> {\n  declare ctx?: Context\n  declare indexes: Driver.Index<FlatKeys<S>>[]\n  fields: Field.Config<S> = {}\n  migrations = new Map<Model.Migration, string[]>()\n\n  declare private type: Type<S> | undefined\n\n  constructor(public name: string) {\n    this.autoInc = false\n    this.primary = 'id' as never\n    this.unique = []\n    this.indexes = []\n    this.foreign = {}\n  }\n\n  extend(fields: Field.Extension<S>, config?: Partial<Model.Config>): void\n  extend(fields = {}, config: Partial<Model.Config> = {}) {\n    const { primary, autoInc, unique = [], indexes = [], foreign, callback } = config\n\n    this.primary = primary || this.primary\n    this.autoInc = autoInc || this.autoInc\n    unique.forEach(key => this.unique.includes(key) || this.unique.push(key))\n    indexes.map(x => this.parseIndex(x)).forEach(index => (this.indexes.some(ind => deepEqual(ind, index))) || this.indexes.push(index))\n    Object.assign(this.foreign, foreign)\n\n    if (callback) this.migrations.set(callback, Object.keys(fields))\n\n    for (const key in fields) {\n      this.fields[key] = Field.parse(fields[key])\n      this.fields[key].deprecated = !!callback\n    }\n\n    if (typeof this.primary === 'string' && this.fields[this.primary]?.deftype === 'primary') {\n      this.autoInc = true\n    }\n\n    // check index\n    this.checkIndex(this.primary)\n    this.unique.forEach(index => this.checkIndex(index))\n    this.indexes.forEach(index => this.checkIndex(index))\n  }\n\n  private parseIndex(index: MaybeArray<string> | Driver.Index): Driver.Index {\n    if (typeof index === 'string' || Array.isArray(index)) {\n      return {\n        name: `index:${this.name}:` + makeArray(index).join('+'),\n        unique: false,\n        keys: Object.fromEntries(makeArray(index).map(key => [key, 'asc'])),\n      }\n    } else {\n      return {\n        name: index.name ?? `index:${this.name}:` + Object.keys(index.keys).join('+'),\n        unique: index.unique ?? false,\n        keys: index.keys,\n      }\n    }\n  }\n\n  private checkIndex(index: MaybeArray<string> | Driver.Index) {\n    for (const key of typeof index === 'string' || Array.isArray(index) ? makeArray(index) : Object.keys(index.keys)) {\n      if (!this.fields[key]) {\n        throw new TypeError(`missing field definition for index key \"${key}\"`)\n      }\n    }\n  }\n\n  resolveValue(field: string | Field | Type, value: any) {\n    if (isNullable(value)) return value\n    if (typeof field === 'string') field = this.fields[field] as Field\n    if (field) field = Type.fromField(field)\n    if (field?.type === 'time') {\n      const date = new Date(0)\n      date.setHours(value.getHours(), value.getMinutes(), value.getSeconds(), value.getMilliseconds())\n      return date\n    } else if (field?.type === 'date') {\n      const date = new Date(value)\n      date.setHours(0, 0, 0, 0)\n      return date\n    }\n    return value\n  }\n\n  resolveModel(obj: any, model?: Type) {\n    if (!model) model = this.getType()\n    if (isNullable(obj) || !model.inner) return obj\n    if (Type.isArray(model) && Array.isArray(obj)) {\n      return obj.map(x => this.resolveModel(x, Type.getInner(model)!))\n    }\n\n    const result = {}\n    for (const key in obj) {\n      const type = Type.getInner(model, key)\n      if (!type || isNullable(obj[key])) {\n        result[key] = obj[key]\n      } else if (type.type !== 'json') {\n        result[key] = this.resolveValue(type, obj[key])\n      } else if (isEvalExpr(obj[key])) {\n        result[key] = obj[key]\n      } else if (type.inner && Type.isArray(type) && Array.isArray(obj[key])) {\n        result[key] = obj[key].map(x => this.resolveModel(x, Type.getInner(type)))\n      } else if (type.inner) {\n        result[key] = this.resolveModel(obj[key], type)\n      } else {\n        result[key] = obj[key]\n      }\n    }\n    return result\n  }\n\n  format(source: object, strict = true, prefix = '', result = {} as S) {\n    const fields = Object.keys(this.fields).filter(key => !this.fields[key].relation)\n    Object.entries(source).map(([key, value]) => {\n      key = prefix + key\n      if (value === undefined) return\n      if (fields.includes(key)) {\n        result[key] = value\n        return\n      }\n      const field = fields.find(field => key.startsWith(field + '.'))\n      if (field) {\n        result[key] = value\n      } else if (isFlat(value)) {\n        if (strict && (typeof value !== 'object' || Object.keys(value).length)) {\n          throw new TypeError(`unknown field \"${key}\" in model ${this.name}`)\n        }\n      } else {\n        this.format(value, strict, key + '.', result)\n      }\n    })\n    return (strict && prefix === '') ? this.resolveModel(result) : result\n  }\n\n  parse(source: object, strict = true, prefix = '', result = {} as S) {\n    const fields = Object.keys(this.fields).filter(key => !this.fields[key].relation)\n    if (strict && prefix === '') {\n      // initialize object layout\n      Object.assign(result as any, unravel(Object.fromEntries(fields\n        .filter(key => key.includes('.'))\n        .map(key => [key.slice(0, key.lastIndexOf('.')), {}])),\n      ))\n    }\n    for (const key in source) {\n      let node = result\n      const segments = key.split('.').reverse()\n      for (let index = segments.length - 1; index > 0; index--) {\n        const segment = segments[index]\n        node = node[segment] ??= {}\n      }\n      if (key in source) {\n        const fullKey = prefix + key, value = source[key]\n        const field = fields.find(field => fullKey === field || fullKey.startsWith(field + '.'))\n        if (field) {\n          node[segments[0]] = value\n        } else if (isFlat(value)) {\n          if (strict) {\n            throw new TypeError(`unknown field \"${fullKey}\" in model ${this.name}`)\n          } else {\n            node[segments[0]] = value\n          }\n        } else {\n          this.parse(value, strict, fullKey + '.', node[segments[0]] ??= {})\n        }\n      }\n    }\n    return (strict && prefix === '') ? this.resolveModel(result) : result\n  }\n\n  create(data?: {}) {\n    const result = {} as S\n    const keys = makeArray(this.primary)\n    for (const key in this.fields) {\n      if (!Field.available(this.fields[key])) continue\n      const { initial } = this.fields[key]!\n      if (!keys.includes(key) && !isNullable(initial)) {\n        result[key] = clone(initial)\n      }\n    }\n    return this.parse({ ...result, ...data })\n  }\n\n  avaiableFields() {\n    return filterKeys(this.fields, (_, field) => Field.available(field))\n  }\n\n  getType(): Type<S>\n  getType(key: string): Type | undefined\n  getType(key?: string): Type | undefined {\n    if (!this.type) defineProperty(this, 'type', Type.Object(mapValues(this.fields, field => Type.fromField(field!))) as any)\n    return key ? Type.getInner(this.type, key) : this.type\n  }\n}\n", "import { defineProperty, Dict, filterKeys, mapValues } from 'cosmokit'\nimport { Driver } from './driver.ts'\nimport { Eval, executeEval, isAggrExpr, isEvalExpr } from './eval.ts'\nimport { Field, Model } from './model.ts'\nimport { Query } from './query.ts'\nimport { FlatKeys, FlatPick, Flatten, getCell, Keys, randomId, Row } from './utils.ts'\nimport { Type } from './type.ts'\n\ndeclare module './eval.ts' {\n  export namespace Eval {\n    export interface Static {\n      exec<S, T>(value: Executable<S, T>): Expr<T>\n    }\n  }\n}\n\nexport type Direction = 'asc' | 'desc'\n\nexport interface Modifier {\n  limit: number\n  offset: number\n  sort: [Eval.Expr, Direction][]\n  group?: string[]\n  having: Eval.Expr<boolean>\n  fields?: Dict<Eval.Expr>\n  optional: Dict<boolean>\n}\n\nnamespace Executable {\n  export type Action = 'get' | 'set' | 'remove' | 'create' | 'upsert' | 'eval'\n\n  export interface Payload {\n    type: Action\n    table: string | Selection | Dict<Selection.Immutable>\n    ref: string\n    query: Query.Expr\n    args: any[]\n  }\n}\n\nconst createRow = (ref: string, expr = {}, prefix = '', model?: Model, intermediate?: Eval.Expr) => new Proxy(expr, {\n  get(target, key) {\n    if (key === '$prefix') return prefix\n    if (key === '$model') return model\n    if (typeof key === 'symbol' || key in target || key.startsWith('$')) return Reflect.get(target, key)\n\n    if (intermediate) {\n      if (Type.isArray(expr?.[Type.kType]) && Number.isInteger(+key)) {\n        return createRow(ref, Eval.get(expr as any, +key), '', model, Eval.get(expr as any, +key))\n      } else {\n        return createRow(ref, Eval.get(intermediate as any, `${prefix}${key}`), `${prefix}${key}.`, model, intermediate)\n      }\n    }\n\n    let type: Type\n    const field = model?.fields[prefix + key as string]\n    if (Type.isArray(expr?.[Type.kType]) && Number.isInteger(+key)) {\n      // indexing array\n      type = Type.getInner(expr?.[Type.kType]) ?? Type.fromField('expr')\n      return createRow(ref, Eval.get(expr as any, +key), '', model, Eval.get(expr as any, +key))\n    } else if (Type.getInner(expr?.[Type.kType], key)) {\n      // type may conatins object layout\n      type = Type.getInner(expr?.[Type.kType], key)!\n    } else if (field) {\n      type = Type.fromField(field)\n    } else if (Object.keys(model?.fields!).some(k => k.startsWith(`${prefix}${key}.`))) {\n      type = Type.Object(Object.fromEntries(Object.entries(model?.fields!)\n        .filter(([k]) => k.startsWith(`${prefix}${key}`))\n        .map(([k, field]) => [k.slice(prefix.length + key.length + 1), Type.fromField(field!)])))\n    } else {\n      // unknown field inside json\n      type = model?.getType(`${prefix}${key}`) ?? Type.fromField('expr')\n    }\n\n    const row = createRow(ref, Eval('', [ref, `${prefix}${key}`], type), `${prefix}${key}.`, model)\n    if (!field && Object.keys(model?.fields!).some(k => k.startsWith(`${prefix}${key}.`))) {\n      return createRow(ref, Eval.object(row), `${prefix}${key}.`, model)\n    } else {\n      return row\n    }\n  },\n})\n\ninterface Executable extends Executable.Payload {}\n\nclass Executable<S = any, T = any> {\n  public readonly row!: Row<S>\n  public readonly model!: Model\n  public readonly driver!: Driver\n\n  constructor(driver: Driver, payload: Executable.Payload) {\n    Object.assign(this, payload)\n    defineProperty(this, 'driver', driver)\n    defineProperty(this, 'model', driver.model(this.table))\n    defineProperty(this, 'row', createRow(this.ref, {}, '', this.model))\n  }\n\n  protected resolveQuery(query?: Query<S>): Query.Expr<S>\n  protected resolveQuery(query: Query<S> = {}): any {\n    if (typeof query === 'function') {\n      const expr = query(this.row)\n      return expr['$expr'] ? expr : isEvalExpr(expr) ? { $expr: expr } : expr\n    }\n    if (Array.isArray(query) || query instanceof RegExp || ['string', 'number', 'bigint'].includes(typeof query)) {\n      const { primary } = this.model\n      if (Array.isArray(primary)) {\n        throw new TypeError('invalid shorthand for composite primary key')\n      }\n      return { [primary]: query }\n    }\n    return query\n  }\n\n  protected resolveField(field: FieldLike<S>): Eval.Expr {\n    if (typeof field === 'string') {\n      return this.row[field]\n    } else if (typeof field === 'function') {\n      return field(this.row)\n    } else {\n      throw new TypeError('invalid field definition')\n    }\n  }\n\n  protected resolveFields(fields: string | string[] | Dict<FieldLike<S>>) {\n    if (typeof fields === 'string') fields = [fields]\n    if (Array.isArray(fields)) {\n      const modelFields = Object.keys(this.model.fields)\n      const entries = fields.flatMap((key) => {\n        if (this.model.fields[key]) return [[key, this.row[key]]]\n        else if (modelFields.some(path => path.startsWith(key + '.'))) {\n          return modelFields.filter(path => path.startsWith(key + '.')).map(path => [path, this.row[path]])\n        }\n        return [[key, key.split('.').reduce((row, k) => row[k], this.row)]]\n      })\n      return Object.fromEntries(entries)\n    } else {\n      const entries = Object.entries(fields).flatMap(([key, field]) => {\n        const expr = this.resolveField(field)\n        if (expr['$object'] && !Type.fromTerm(expr).ignoreNull) {\n          return Object.entries(expr['$object']).map(([key2, expr2]) => [`${key}.${key2}`, expr2])\n        }\n        return [[key, expr]]\n      })\n      return Object.fromEntries(entries)\n    }\n  }\n\n  async execute(): Promise<T> {\n    await this.driver.database.prepared()\n    await this.driver._ensureSession()\n    return this.driver[this.type as any](this, ...this.args)\n  }\n}\n\ntype FieldLike<S = any> = FlatKeys<S> | Selection.Callback<S>\n\ntype FieldType<S, T extends FieldLike<S>> =\n  | T extends FlatKeys<S> ? Flatten<S>[T]\n  : T extends Selection.Callback<S> ? Eval<ReturnType<T>>\n  : never\n\ntype FieldMap<S, M extends Dict<FieldLike<S>>> = {\n  [K in keyof M]: FieldType<S, M[K]>\n}\n\nexport namespace Selection {\n  export type Callback<S = any, T = any, A extends boolean = boolean> = (row: Row<S>) => Eval.Expr<T, A>\n\n  export interface Immutable extends Executable, Executable.Payload {\n    tables: Dict<Model>\n  }\n\n  export interface Mutable extends Executable, Executable.Payload {\n    tables: Dict<Model>\n    table: string\n  }\n}\n\nexport interface Selection extends Executable.Payload {\n  args: [Modifier]\n}\n\nexport class Selection<S = any> extends Executable<S, S[]> {\n  public tables: Dict<Model> = {}\n\n  constructor(driver: Driver<any>, table: string | Selection | Dict<Selection.Immutable>, query?: Query) {\n    super(driver, {\n      type: 'get',\n      ref: randomId(),\n      table,\n      query: null as never,\n      args: [{ sort: [], limit: Infinity, offset: 0, group: undefined, having: Eval.and(), optional: {} }],\n    })\n    this.tables[this.ref] = this.model\n    this.query = this.resolveQuery(query)\n    if (typeof table !== 'string') {\n      Object.assign(this.tables, table.tables)\n    }\n  }\n\n  where(query: Query<S>) {\n    this.query.$and ||= []\n    this.query.$and.push(this.resolveQuery(query))\n    return this\n  }\n\n  limit(limit: number): this\n  limit(offset: number, limit: number): this\n  limit(...args: [number] | [number, number]) {\n    if (args.length > 1) this.offset(args.shift()!)\n    this.args[0].limit = args[0]\n    return this\n  }\n\n  offset(offset: number) {\n    this.args[0].offset = offset\n    return this\n  }\n\n  orderBy(field: FieldLike<S>, direction: Direction = 'asc') {\n    this.args[0].sort.push([this.resolveField(field), direction])\n    return this\n  }\n\n  groupBy<K extends FlatKeys<S>>(fields: K | readonly K[], query?: Selection.Callback<S, boolean>): Selection<FlatPick<S, K>>\n  groupBy<K extends FlatKeys<S>, U extends Dict<FieldLike<S>>>(\n    fields: K | K[],\n    extra?: U,\n    query?: Selection.Callback<S, boolean>,\n  ): Selection<FlatPick<S, K> & FieldMap<S, U>>\n\n  groupBy<K extends Dict<FieldLike<S>>>(fields: K, query?: Selection.Callback<S, boolean>): Selection<FieldMap<S, K>>\n  groupBy<K extends Dict<FieldLike<S>>, U extends Dict<FieldLike<S>>>(\n    fields: K,\n    extra?: U,\n    query?: Selection.Callback<S, boolean>,\n  ): Selection<FieldMap<S, K & U>>\n\n  groupBy(fields: any, ...args: any[]) {\n    this.args[0].fields = this.resolveFields(fields)\n    this.args[0].group = Object.keys(this.args[0].fields!)\n    const extra = typeof args[0] === 'function' ? undefined : args.shift()\n    Object.assign(this.args[0].fields!, this.resolveFields(extra || {}))\n    if (args[0]) this.having(args[0])\n    return new Selection(this.driver, this)\n  }\n\n  having(query: Selection.Callback<S, boolean>) {\n    this.args[0].having['$and'].push(this.resolveField(query))\n    return this\n  }\n\n  project<K extends FlatKeys<S>>(fields: K | readonly K[]): Selection<FlatPick<S, K>>\n  project<U extends Dict<FieldLike<S>>>(fields: U): Selection<FieldMap<S, U>>\n  project(fields: Keys<S>[] | Dict<FieldLike<S>>) {\n    this.args[0].fields = this.resolveFields(fields)\n    return new Selection(this.driver, this)\n  }\n\n  join<K extends string, U>(\n    name: K,\n    selection: Selection<U>,\n    callback: (self: Row<S>, other: Row<U>) => Eval.Expr<boolean> = () => Eval.and(),\n    optional: boolean = false,\n  ): Selection<S & { [P in K]: U}> {\n    const fields = Object.fromEntries(Object.entries(this.model.fields)\n      .filter(([key, field]) => Field.available(field) && !key.startsWith(name + '.'))\n      .map(([key]) => [key, (row) => getCell(row[this.ref], key)]))\n    const joinFields = Object.fromEntries(Object.entries(selection.model.fields)\n      .filter(([key, field]) => Field.available(field) || Field.available(this.model.fields[`${name}.${key}`]))\n      .map(([key]) => [key,\n        (row) => Field.available(this.model.fields[`${name}.${key}`]) ? getCell(row[this.ref], `${name}.${key}`) : getCell(row[name], key),\n      ]))\n    if (optional) {\n      return this.driver.database\n        .join({ [this.ref]: this as Selection, [name]: selection }, (t: any) => callback(t[this.ref], t[name]), { [this.ref]: false, [name]: true })\n        .project({ ...fields, [name]: (row) => Eval.ignoreNull(Eval.object(mapValues(joinFields, x => x(row)))) }) as any\n    } else {\n      return this.driver.database\n        .join({ [this.ref]: this as Selection, [name]: selection }, (t: any) => callback(t[this.ref], t[name]))\n        .project({ ...fields, [name]: (row) => Eval.ignoreNull(Eval.object(mapValues(joinFields, x => x(row)))) }) as any\n    }\n  }\n\n  _action(type: Executable.Action, ...args: any[]) {\n    return new Executable(this.driver, { ...this, type, args })\n  }\n\n  evaluate<T>(callback: Selection.Callback<S, T, true>): Eval.Expr<T, true>\n  evaluate<K extends Keys<S>>(field: K): Eval.Expr<S[K][], false>\n  evaluate<K extends Keys<S>>(field: K[]): Eval.Expr<any[][], false>\n  evaluate(): Eval.Expr<S[], boolean>\n  evaluate(callback?: any): any {\n    const selection = new Selection(this.driver, this)\n    if (!callback) callback = (row: any) => Eval.array(Eval.object(row))\n    const expr = Array.isArray(callback) ? Eval.select(...callback.map(x => this.resolveField(x))) : this.resolveField(callback)\n    if (isAggrExpr(expr)) defineProperty(expr, Type.kType, Type.Array(Type.fromTerm(expr)))\n    return Eval.exec(selection._action('eval', expr))\n  }\n\n  execute(): Promise<S[]>\n  execute<K extends FlatKeys<S> = any>(cursor?: Driver.Cursor<K>): Promise<FlatPick<S, K>[]>\n  execute<T>(callback: Selection.Callback<S, T, true>): Promise<T>\n  async execute(cursor?: any) {\n    if (typeof cursor === 'function') {\n      const selection = new Selection(this.driver, this)\n      return selection._action('eval', this.resolveField(cursor)).execute()\n    }\n    if (Array.isArray(cursor)) {\n      cursor = { fields: cursor }\n    } else if (!cursor) {\n      cursor = {}\n    }\n    if (cursor.fields) this.project(cursor.fields)\n    if (cursor.limit !== undefined) this.limit(cursor.limit)\n    if (cursor.offset !== undefined) this.offset(cursor.offset)\n    if (cursor.sort) {\n      for (const field in cursor.sort) {\n        this.orderBy(field as any, cursor.sort[field])\n      }\n    }\n    const rows = await super.execute()\n    if (!cursor.fields) return rows\n    return rows.map((row) => {\n      return filterKeys(row as any, key => {\n        return (cursor.fields as string[]).some(k => k === key || k.startsWith(`${key}.`))\n      })\n    })\n  }\n}\n\nexport namespace Selection {\n  export function is(sel: any): sel is Selection {\n    return sel && !!sel.tables as any\n  }\n}\n\nexport function executeSort(data: any[], modifier: Modifier, name: string) {\n  const { limit, offset, sort } = modifier\n\n  // step 1: sort data\n  data.sort((a, b) => {\n    for (const [field, direction] of sort) {\n      const sign = direction === 'asc' ? 1 : -1\n      const x = executeEval({ [name]: a, _: a }, field)\n      const y = executeEval({ [name]: b, _: b }, field)\n      if (x < y) return -sign\n      if (x > y) return sign\n    }\n    return 0\n  })\n\n  // step 2: truncate data\n  return data.slice(offset, offset + limit)\n}\n", "import { Awaitable, deepEqual, defineProperty, Dict, mapValues, remove } from 'cosmokit'\nimport { Context, Logger, Service } from 'cordis'\nimport { Eval, Update } from './eval.ts'\nimport { Direction, Modifier, Selection } from './selection.ts'\nimport { Field, Model, Relation } from './model.ts'\nimport { Database } from './database.ts'\nimport { Type } from './type.ts'\nimport { FlatKeys, Keys, Values } from './utils.ts'\n\nexport namespace Driver {\n  export interface Stats {\n    size: number\n    tables: Dict<TableStats>\n  }\n\n  export interface TableStats {\n    count: number\n    size: number\n  }\n\n  export type Cursor<K extends string = string, S = any, T extends Keys<S> = any> = K[] | CursorOptions<K, S, T>\n\n  export interface CursorOptions<K extends string = string, S = any, T extends Keys<S> = any> {\n    limit?: number\n    offset?: number\n    fields?: K[]\n    sort?: Partial<Dict<Direction, FlatKeys<S[T]>>>\n    include?: Relation.Include<S[T], Values<S>>\n  }\n\n  export interface WriteResult {\n    inserted?: number\n    matched?: number\n    modified?: number\n    removed?: number\n  }\n\n  export interface IndexDef<K extends string = string> {\n    name?: string\n    keys: { [P in K]?: 'asc' | 'desc' }\n  }\n\n  export interface Index<K extends string = string> extends IndexDef<K> {\n    unique?: boolean\n  }\n\n  export interface Transformer<S = any, T = any> {\n    types: Field.Type<S>[]\n    dump: (value: S | null) => T | null | void\n    load: (value: T | null) => S | null | void\n  }\n}\n\nexport namespace Driver {\n  export type Constructor<T> = new (ctx: Context, config: T) => Driver<T>\n}\n\nexport abstract class Driver<T = any, C extends Context = Context> {\n  static inject = ['model']\n\n  abstract start(): Promise<void>\n  abstract stop(): Promise<void>\n  abstract drop(table: string): Promise<void>\n  abstract dropAll(): Promise<void>\n  abstract stats(): Promise<Partial<Driver.Stats>>\n  abstract prepare(name: string): Promise<void>\n  abstract get(sel: Selection.Immutable, modifier: Modifier): Promise<any>\n  abstract eval(sel: Selection.Immutable, expr: Eval.Expr): Promise<any>\n  abstract set(sel: Selection.Mutable, data: Update): Promise<Driver.WriteResult>\n  abstract remove(sel: Selection.Mutable): Promise<Driver.WriteResult>\n  abstract create(sel: Selection.Mutable, data: any): Promise<any>\n  abstract upsert(sel: Selection.Mutable, data: any[], keys: string[]): Promise<Driver.WriteResult>\n  abstract withTransaction(callback: (session?: any) => Promise<void>): Promise<void>\n  abstract getIndexes(table: string): Promise<Driver.Index[]>\n  abstract createIndex(table: string, index: Driver.Index): Promise<void>\n  abstract dropIndex(table: string, name: string): Promise<void>\n\n  public database: Database<any, any, C>\n  public logger: Logger\n  public types: Dict<Driver.Transformer> = Object.create(null)\n\n  constructor(public ctx: C, public config: T) {\n    this.database = ctx.model\n    this.logger = ctx.logger(this.constructor.name)\n\n    ctx.on('ready', async () => {\n      await Promise.resolve()\n      await this.start()\n      ctx.model.drivers.push(this)\n      ctx.model.refresh()\n      const database = Object.create(ctx.model) // FIXME use original model\n      defineProperty(database, 'ctx', ctx)\n      database._driver = this\n      database[Service.tracker] = {\n        associate: 'database',\n        property: 'ctx',\n      }\n      ctx.set('database', Context.associate(database, 'database'))\n    })\n\n    ctx.on('dispose', async () => {\n      remove(ctx.model.drivers, this)\n      await this.stop()\n    })\n  }\n\n  model<S = any>(table: string | Selection.Immutable | Dict<string | Selection.Immutable>): Model<S> {\n    if (typeof table === 'string') {\n      const model = this.database.tables[table]\n      if (model) return model\n      throw new TypeError(`unknown table name \"${table}\"`)\n    }\n\n    if (Selection.is(table)) {\n      if (!table.args[0].fields && (typeof table.table === 'string' || Selection.is(table.table))) {\n        return table.model\n      }\n      const model = new Model('temp')\n      if (table.args[0].fields) {\n        model.fields = mapValues(table.args[0].fields, (expr) => ({\n          type: Type.fromTerm(expr),\n        }))\n      } else {\n        model.fields = mapValues(table.model.fields, (field) => ({\n          type: Type.fromField(field),\n        }))\n      }\n      return model\n    }\n\n    const model = new Model('temp')\n    for (const key in table) {\n      const submodel = this.model(table[key])\n      for (const field in submodel.fields) {\n        if (!Field.available(submodel.fields[field])) continue\n        model.fields[`${key}.${field}`] = {\n          expr: Eval('', [table[key].ref, field], Type.fromField(submodel.fields[field]!)),\n          type: Type.fromField(submodel.fields[field]!),\n        }\n      }\n    }\n    return model\n  }\n\n  protected async migrate(name: string, hooks: MigrationHooks) {\n    const database = this.database.makeProxy(Database.migrate)\n    const model = this.model(name)\n    await (database.migrateTasks[name] = Promise.resolve(database.migrateTasks[name]).then(() => {\n      return Promise.all([...model.migrations].map(async ([migrate, keys]) => {\n        try {\n          if (!hooks.before(keys)) return\n          await migrate(database)\n          hooks.after(keys)\n        } catch (reason) {\n          hooks.error(reason)\n        }\n      }))\n    }).then(hooks.finalize).catch(hooks.error))\n  }\n\n  define<S, T>(converter: Driver.Transformer<S, T>) {\n    converter.types.forEach(type => this.types[type] = converter)\n  }\n\n  async _ensureSession() {}\n\n  async prepareIndexes(table: string) {\n    const oldIndexes = await this.getIndexes(table)\n    const { indexes } = this.model(table)\n    for (const index of indexes) {\n      const oldIndex = oldIndexes.find(info => info.name === index.name)\n      if (!oldIndex) {\n        await this.createIndex(table, index)\n      } else if (!deepEqual(oldIndex, index)) {\n        await this.dropIndex(table, index.name!)\n        await this.createIndex(table, index)\n      }\n    }\n  }\n}\n\nexport interface MigrationHooks {\n  before: (keys: string[]) => boolean\n  after: (keys: string[]) => void\n  finalize: () => Awaitable<void>\n  error: (reason: any) => void\n}\n", "export namespace RuntimeError {\n  export type Code =\n    | 'duplicate-entry'\n    | 'unsupported-expression'\n}\n\nexport class RuntimeError<T extends RuntimeError.Code> extends Error {\n  name = 'RuntimeError'\n\n  constructor(public code: T, message?: string) {\n    super(message || code.replace('-', ' '))\n  }\n\n  static check<T extends RuntimeError.Code>(error: any, code?: RuntimeError.Code): error is RuntimeError<T> {\n    if (!(error instanceof RuntimeError)) return false\n    return !code || error.message === code\n  }\n}\n", "import { Extract, isNullable } from 'cosmokit'\nimport { Eval, executeEval } from './eval.ts'\nimport { AtomicTypes, Comparable, Flatten, flatten, getCell, Indexable, isComparable, isFlat, makeRegExp, RegExpLike, Values } from './utils.ts'\nimport { Selection } from './selection.ts'\n\nexport type Query<T = any> = Query.Expr<Flatten<T>> | Query.Shorthand<Indexable> | Selection.Callback<T, boolean>\n\nexport namespace Query {\n  export interface FieldExpr<T = any> {\n    // logical\n    $or?: Field<T>[]\n    $and?: Field<T>[]\n    $not?: Field<T>\n\n    // existence\n    $exists?: boolean\n\n    // membership\n    $in?: Extract<T, Indexable, T[]>\n    $nin?: Extract<T, Indexable, T[]>\n\n    // arithmatic\n    $eq?: Extract<T, Comparable>\n    $ne?: Extract<T, Comparable>\n    $gt?: Extract<T, Comparable>\n    $gte?: Extract<T, Comparable>\n    $lt?: Extract<T, Comparable>\n    $lte?: Extract<T, Comparable>\n\n    // list\n    $el?: T extends (infer U)[] ? Field<U> : never\n    $size?: Extract<T, any[], number>\n\n    // regexp\n    $regex?: Extract<T, string, string | RegExpLike>\n    $regexFor?: Extract<T, string, string | { input: string; flags?: string }>\n\n    // bitwise\n    $bitsAllClear?: Extract<T, number>\n    $bitsAllSet?: Extract<T, number>\n    $bitsAnyClear?: Extract<T, number>\n    $bitsAnySet?: Extract<T, number>\n\n    // relation\n    $some?: T extends (infer U)[] ? Query<U> : never\n    $none?: T extends (infer U)[] ? Query<U> : never\n    $every?: T extends (infer U)[] ? Query<U> : never\n  }\n\n  export interface LogicalExpr<T = any> {\n    $or?: Expr<T>[]\n    $and?: Expr<T>[]\n    $not?: Expr<T>\n    /** @deprecated use query callback instead */\n    $expr?: Eval.Term<boolean>\n  }\n\n  export type Shorthand<T = any> =\n    | Extract<T, Comparable>\n    | Extract<T, Indexable, T[]>\n    | Extract<T, string, RegExp>\n\n  export type Field<T = any> = FieldExpr<T> | Shorthand<T>\n\n  type NonNullExpr<T> = T extends Values<AtomicTypes> | any[] ? Field<T> : T extends object\n    ? Expr<Flatten<T>> | Selection.Callback<T, boolean>\n    : Field<T>\n\n  export type Expr<T = any> = LogicalExpr<T> & {\n    [K in keyof T]?: (undefined extends T[K] ? null : never) | NonNullExpr<Exclude<T[K], undefined>>\n  }\n}\n\ntype QueryOperators = {\n  [K in keyof Query.FieldExpr]?: (query: NonNullable<Query.FieldExpr[K]>, data: any) => boolean\n}\n\nconst queryOperators: QueryOperators = {\n  // logical\n  $or: (query, data) => query.reduce((prev, query) => prev || executeFieldQuery(query, data), false),\n  $and: (query, data) => query.reduce((prev, query) => prev && executeFieldQuery(query, data), true),\n  $not: (query, data) => !executeFieldQuery(query, data),\n\n  // existence\n  $exists: (query, data) => query !== isNullable(data),\n\n  // comparison\n  $eq: (query, data) => data.valueOf() === query.valueOf(),\n  $ne: (query, data) => data.valueOf() !== query.valueOf(),\n  $gt: (query, data) => data.valueOf() > query.valueOf(),\n  $gte: (query, data) => data.valueOf() >= query.valueOf(),\n  $lt: (query, data) => data.valueOf() < query.valueOf(),\n  $lte: (query, data) => data.valueOf() <= query.valueOf(),\n\n  // membership\n  $in: (query, data) => query.includes(data),\n  $nin: (query, data) => !query.includes(data),\n\n  // regexp\n  $regex: (query, data) => makeRegExp(query).test(data),\n  $regexFor: (query, data) => typeof query === 'string' ? makeRegExp(data).test(query) : makeRegExp(data, query.flags).test(query.input),\n\n  // bitwise\n  $bitsAllSet: (query, data) => (query & data) === query,\n  $bitsAllClear: (query, data) => (query & data) === 0,\n  $bitsAnySet: (query, data) => (query & data) !== 0,\n  $bitsAnyClear: (query, data) => (query & data) !== query,\n\n  // list\n  $el: (query, data) => data.some(item => executeFieldQuery(query, item)),\n  $size: (query, data) => data.length === query,\n}\n\nfunction executeFieldQuery(query: Query.Field, data: any) {\n  // shorthand syntax\n  if (Array.isArray(query)) {\n    return query.includes(data)\n  } else if (query instanceof RegExp) {\n    return query.test(data)\n  } else if (isComparable(query)) {\n    return data.valueOf() === query.valueOf()\n  } else if (isNullable(query)) {\n    return isNullable(data)\n  }\n\n  for (const key in query) {\n    if (key in queryOperators) {\n      if (!queryOperators[key](query[key], data)) return false\n    }\n  }\n\n  return true\n}\n\nexport function executeQuery(data: any, query: Query.Expr, ref: string, env: any = {}): boolean {\n  const entries: [string, any][] = Object.entries(query)\n  return entries.every(([key, value]) => {\n    // execute logical query\n    if (key === '$and') {\n      return (value as Query.Expr[]).reduce((prev, query) => prev && executeQuery(data, query, ref, env), true)\n    } else if (key === '$or') {\n      return (value as Query.Expr[]).reduce((prev, query) => prev || executeQuery(data, query, ref, env), false)\n    } else if (key === '$not') {\n      return !executeQuery(data, value, ref, env)\n    } else if (key === '$expr') {\n      return executeEval({ ...env, [ref]: data, _: data }, value)\n    }\n\n    // execute field query\n    try {\n      const flattenQuery = isFlat(query[key]) ? { [key]: query[key] } : flatten(query[key], `${key}.`)\n      return Object.entries(flattenQuery).every(([key, value]) => executeFieldQuery(value, getCell(data, key)))\n    } catch {\n      return false\n    }\n  })\n}\n", "import { Database } from './database.ts'\n\nexport * from './database.ts'\nexport * from './driver.ts'\nexport * from './error.ts'\nexport * from './eval.ts'\nexport * from './model.ts'\nexport * from './query.ts'\nexport * from './selection.ts'\nexport * from './type.ts'\nexport * from './utils.ts'\n\ndeclare module 'cordis' {\n  interface Events {\n    'model'(name: string): void\n  }\n\n  interface Context {\n    [Types]: Types\n    [Tables]: Tables\n    [Context.Minato]: Context.Minato<this>\n    [Context.Database]: Context.Database<this>\n    model: Database<this[typeof Tables], this[typeof Types], this> & this[typeof Context.Minato]\n    database: Database<this[typeof Tables], this[typeof Types], this> & this[typeof Context.Database]\n  }\n\n  namespace Context {\n    const Minato: unique symbol\n    const Database: unique symbol\n    // https://github.com/typescript-eslint/typescript-eslint/issues/6720\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    interface Minato<C extends Context = Context> {}\n    // https://github.com/typescript-eslint/typescript-eslint/issues/6720\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    interface Database<C extends Context = Context> {}\n  }\n}\n\nexport { Logger, Schema, Schema as z } from 'cordis'\n\nexport const Types = Symbol('minato.types')\nexport interface Types {}\n\nexport const Tables = Symbol('minato.tables')\nexport interface Tables {}\n\nexport default Database\n", "var __defProp = Object.defineProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\n\n// src/index.ts\nimport { Context as Context4, Logger as Logger2, Service as Service4, z as z2 } from \"cordis\";\nimport { defineProperty as defineProperty2 } from \"cosmokit\";\n\n// src/internal.ts\nimport { Service } from \"cordis\";\nimport { remove } from \"cosmokit\";\nimport { pathToRegexp } from \"path-to-regexp\";\nvar InternalRouter = class {\n  constructor(ctx) {\n    this.ctx = ctx;\n  }\n  static {\n    __name(this, \"InternalRouter\");\n  }\n  [Service.tracker] = {\n    property: \"ctx\"\n  };\n  routes = [];\n  define(path, callback) {\n    return this.ctx.effect(() => {\n      const route = {\n        ...pathToRegexp(path),\n        callback\n      };\n      this.routes.push(route);\n      return () => remove(this.routes, route);\n    });\n  }\n  handle(bot, method, path, query, headers, body) {\n    for (const route of this.routes) {\n      const capture = route.regexp.exec(path);\n      if (!capture) continue;\n      const params = {};\n      route.keys.forEach(({ name }, index) => {\n        params[name] = capture[index + 1];\n      });\n      return route.callback({\n        bot,\n        method,\n        params,\n        query,\n        body,\n        headers: Object.fromEntries(headers.entries())\n      });\n    }\n  }\n};\n\n// src/index.ts\nimport { HTTP } from \"@cordisjs/plugin-http\";\nimport h3 from \"@satorijs/element\";\nexport * from \"cordis\";\nexport * from \"cosmokit\";\nimport * as Universal from \"@satorijs/protocol\";\n\n// src/bot.ts\nimport { clone as clone2, pick } from \"cosmokit\";\nimport { Service as Service3 } from \"cordis\";\n\n// src/session.ts\nimport { Channel } from \"@satorijs/protocol\";\nimport { clone, defineProperty, isNullable } from \"cosmokit\";\nimport { Context, Service as Service2 } from \"cordis\";\nimport h from \"@satorijs/element\";\nvar Session = class {\n  static {\n    __name(this, \"Session\");\n  }\n  [Service2.tracker] = {\n    associate: \"session\",\n    property: \"ctx\"\n  };\n  id;\n  // for backward compatibility\n  sn;\n  bot;\n  app;\n  event;\n  locales = [];\n  constructor(bot, event) {\n    event.selfId ??= bot.selfId;\n    event.platform ??= bot.platform;\n    event.timestamp ??= Date.now();\n    this.event = event;\n    this.sn = this.id = ++bot.ctx.satori._sessionSeq;\n    defineProperty(this, \"bot\", bot);\n    defineProperty(this, \"app\", bot.ctx.root);\n    defineProperty(this, Context.current, bot.ctx);\n    return Context.associate(this, \"session\");\n  }\n  /** @deprecated */\n  get data() {\n    return this.event;\n  }\n  get isDirect() {\n    return this.event.channel.type === Channel.Type.DIRECT;\n  }\n  set isDirect(value) {\n    (this.event.channel ??= {}).type = value ? Channel.Type.DIRECT : Channel.Type.TEXT;\n  }\n  get author() {\n    return {\n      ...this.event.user,\n      ...this.event.member,\n      userId: this.event.user?.id,\n      username: this.event.user?.name,\n      nickname: this.event.member?.name\n    };\n  }\n  get uid() {\n    return `${this.platform}:${this.userId}`;\n  }\n  get gid() {\n    return `${this.platform}:${this.guildId}`;\n  }\n  get cid() {\n    return `${this.platform}:${this.channelId}`;\n  }\n  get fid() {\n    return `${this.platform}:${this.channelId}:${this.userId}`;\n  }\n  get sid() {\n    return `${this.platform}:${this.selfId}`;\n  }\n  get elements() {\n    return this.event.message?.elements;\n  }\n  set elements(value) {\n    this.event.message ??= {};\n    this.event.message.elements = value;\n  }\n  get content() {\n    return this.event.message?.elements?.join(\"\");\n  }\n  set content(value) {\n    this.event.message ??= {};\n    this.event.message.quote = void 0;\n    this.event.message.elements = isNullable(value) ? value : h.parse(value);\n    if (this.event.message.elements?.[0]?.type === \"quote\") {\n      const el = this.event.message.elements.shift();\n      this.event.message.quote = {\n        ...el.attrs,\n        content: el.children.join(\"\")\n      };\n    }\n  }\n  setInternal(type, data) {\n    this.event._type = type;\n    this.event._data = data;\n    const internal = Object.create(this.bot.internal);\n    defineProperty(this, type, Object.assign(internal, data));\n  }\n  async transform(elements) {\n    return await h.transformAsync(elements, async ({ type, attrs, children }, session) => {\n      const render = type === \"component\" ? attrs.is : this.app.get(\"component:\" + type);\n      if (!render) return true;\n      children = await render(attrs, children, session);\n      return this.transform(h.toElementArray(children));\n    }, this);\n  }\n  toJSON() {\n    const event = {\n      login: {\n        platform: this.platform,\n        user: { id: this.selfId }\n      },\n      ...clone(this.event),\n      sn: this.sn,\n      [\"id\"]: this.sn\n      // for backward compatibility\n    };\n    if (event.message?.elements) {\n      event.message.content = this.content;\n      delete event.message.elements;\n      if (event.message.quote) {\n        event.message.content = `<quote id=\"${event.message.quote.id}\">${event.message.quote.content}</quote> ` + event.message.content;\n      }\n    }\n    return event;\n  }\n};\nfunction defineAccessor(prototype, name, keys) {\n  Object.defineProperty(prototype, name, {\n    get() {\n      return keys.reduce((data, key) => data?.[key], this);\n    },\n    set(value) {\n      if (value === void 0) return;\n      const _keys = keys.slice();\n      const last = _keys.pop();\n      const data = _keys.reduce((data2, key) => data2[key] ??= {}, this);\n      data[last] = value;\n    }\n  });\n}\n__name(defineAccessor, \"defineAccessor\");\ndefineAccessor(Session.prototype, \"type\", [\"event\", \"type\"]);\ndefineAccessor(Session.prototype, \"subtype\", [\"event\", \"subtype\"]);\ndefineAccessor(Session.prototype, \"subsubtype\", [\"event\", \"subsubtype\"]);\ndefineAccessor(Session.prototype, \"selfId\", [\"event\", \"selfId\"]);\ndefineAccessor(Session.prototype, \"platform\", [\"event\", \"platform\"]);\ndefineAccessor(Session.prototype, \"timestamp\", [\"event\", \"timestamp\"]);\ndefineAccessor(Session.prototype, \"userId\", [\"event\", \"user\", \"id\"]);\ndefineAccessor(Session.prototype, \"channelId\", [\"event\", \"channel\", \"id\"]);\ndefineAccessor(Session.prototype, \"channelName\", [\"event\", \"channel\", \"name\"]);\ndefineAccessor(Session.prototype, \"guildId\", [\"event\", \"guild\", \"id\"]);\ndefineAccessor(Session.prototype, \"guildName\", [\"event\", \"guild\", \"name\"]);\ndefineAccessor(Session.prototype, \"messageId\", [\"event\", \"message\", \"id\"]);\ndefineAccessor(Session.prototype, \"operatorId\", [\"event\", \"operator\", \"id\"]);\ndefineAccessor(Session.prototype, \"roleId\", [\"event\", \"role\", \"id\"]);\ndefineAccessor(Session.prototype, \"quote\", [\"event\", \"message\", \"quote\"]);\n\n// src/bot.ts\nimport { Methods, Status } from \"@satorijs/protocol\";\nvar eventAliases = [\n  [\"message-created\", \"message\"],\n  [\"guild-removed\", \"guild-deleted\"],\n  [\"guild-member-removed\", \"guild-member-deleted\"]\n];\nvar Bot = class {\n  constructor(ctx, config, platform) {\n    this.ctx = ctx;\n    this.config = config;\n    this.sn = ++ctx.satori._loginSeq;\n    this.internal = null;\n    this._internalRouter = new InternalRouter(ctx);\n    this.context = ctx;\n    ctx.bots.push(this);\n    this.context.emit(\"bot-added\", this);\n    if (platform) {\n      this.logger = ctx.logger(platform);\n      this.platform = platform;\n    }\n    this.features = Object.entries(Methods).filter(([, value]) => this[value.name]).map(([key]) => key);\n    ctx.on(\"ready\", async () => {\n      await Promise.resolve();\n      this.dispatchLoginEvent(\"login-added\");\n      return this.start();\n    });\n    ctx.on(\"dispose\", () => this.dispose());\n    ctx.on(\"interaction/button\", (session) => {\n      const cb = this.callbacks[session.event.button.id];\n      if (cb) cb(session);\n    });\n  }\n  static {\n    __name(this, \"Bot\");\n  }\n  static reusable = true;\n  static MessageEncoder;\n  [Service3.tracker] = {\n    associate: \"bot\",\n    property: \"ctx\"\n  };\n  sn;\n  user = {};\n  isBot = true;\n  hidden = false;\n  platform;\n  features;\n  adapter;\n  error;\n  callbacks = {};\n  logger;\n  _internalRouter;\n  // Same as `this.ctx`, but with a more specific type.\n  context;\n  _status = Status.OFFLINE;\n  getInternalUrl(path, init, slash) {\n    let search = new URLSearchParams(init).toString();\n    if (search) search = \"?\" + search;\n    return `internal${slash ? \"/\" : \":\"}${this.platform}/${this.selfId}${path}${search}`;\n  }\n  defineInternalRoute(path, callback) {\n    return this._internalRouter.define(path, callback);\n  }\n  update(login) {\n    const { status, ...rest } = login;\n    Object.assign(this, rest);\n    this.status = status;\n  }\n  dispose() {\n    const index = this.ctx.bots.findIndex((bot) => bot.sid === this.sid);\n    if (index >= 0) {\n      this.ctx.bots.splice(index, 1);\n      this.context.emit(\"bot-removed\", this);\n      this.dispatchLoginEvent(\"login-removed\");\n    }\n    return this.stop();\n  }\n  dispatchLoginEvent(type) {\n    const session = this.session();\n    session.type = type;\n    session.event.login = this.toJSON();\n    this.dispatch(session);\n  }\n  get status() {\n    return this._status;\n  }\n  set status(value) {\n    if (value === this._status) return;\n    this._status = value;\n    if (this.ctx.bots?.some((bot) => bot.sid === this.sid)) {\n      this.context.emit(\"bot-status-updated\", this);\n      this.dispatchLoginEvent(\"login-updated\");\n    }\n  }\n  get isActive() {\n    return this._status !== Status.OFFLINE && this._status !== Status.DISCONNECT;\n  }\n  online() {\n    this.status = Status.ONLINE;\n    this.error = null;\n  }\n  offline(error) {\n    this.status = Status.OFFLINE;\n    this.error = error;\n  }\n  async start() {\n    if (this.isActive) return;\n    this.status = Status.CONNECT;\n    try {\n      await this.context.parallel(\"bot-connect\", this);\n      await this.adapter?.connect(this);\n    } catch (error) {\n      this.offline(error);\n    }\n  }\n  async stop() {\n    if (!this.isActive) return;\n    this.status = Status.DISCONNECT;\n    try {\n      await this.context.parallel(\"bot-disconnect\", this);\n      await this.adapter?.disconnect(this);\n    } catch (error) {\n      this.context.emit(this.ctx, \"internal/error\", error);\n    } finally {\n      this.offline();\n    }\n  }\n  get sid() {\n    return `${this.platform}:${this.selfId}`;\n  }\n  session(event = {}) {\n    return new Session(this, event);\n  }\n  dispatch(session) {\n    if (!this.ctx.lifecycle.isActive) return;\n    let events = [session.type];\n    for (const aliases of eventAliases) {\n      if (aliases.includes(session.type)) {\n        events = aliases;\n        session.type = aliases[0];\n        break;\n      }\n    }\n    this.context.emit(\"internal/session\", session);\n    if (session.type === \"internal\") {\n      this.context.emit(session.event._type, session.event._data, session.bot);\n      return;\n    }\n    for (const event of events) {\n      this.context.emit(session, event, session);\n    }\n  }\n  async createMessage(channelId, content, guildId, options) {\n    const { MessageEncoder: MessageEncoder2 } = this.constructor;\n    return new MessageEncoder2(this, channelId, guildId, options).send(content);\n  }\n  async sendMessage(channelId, content, guildId, options) {\n    const messages = await this.createMessage(channelId, content, guildId, options);\n    return messages.map((message) => message.id);\n  }\n  async sendPrivateMessage(userId, content, guildId, options) {\n    const { id } = await this.createDirectChannel(userId, guildId ?? options?.session?.guildId);\n    return this.sendMessage(id, content, null, options);\n  }\n  async createUpload(...uploads) {\n    const ids = [];\n    for (const upload of uploads) {\n      const id = Math.random().toString(36).slice(2);\n      const headers = new Headers();\n      headers.set(\"content-type\", upload.type);\n      if (upload.filename) {\n        headers.set(\"content-disposition\", `attachment; filename=\"${upload.filename}\"`);\n      }\n      this.ctx.satori._tempStore[id] = {\n        status: 200,\n        body: upload.data,\n        headers\n      };\n      ids.push(id);\n    }\n    const timer = setTimeout(() => dispose(), 6e5);\n    const dispose = /* @__PURE__ */ __name(() => {\n      _dispose();\n      clearTimeout(timer);\n      for (const id of ids) {\n        delete this.ctx.satori._tempStore[id];\n      }\n    }, \"dispose\");\n    const _dispose = this.ctx.on(\"dispose\", dispose);\n    return ids.map((id) => this.getInternalUrl(`/_tmp/${id}`));\n  }\n  async supports(name, session = {}) {\n    return !!this[Methods[name]?.name];\n  }\n  async checkPermission(name, session) {\n    if (name.startsWith(\"bot.\")) {\n      return this.supports(name.slice(4), session);\n    }\n  }\n  toJSON() {\n    return clone2({\n      ...pick(this, [\"sn\", \"platform\", \"selfId\", \"status\", \"hidden\", \"features\"]),\n      // make sure `user.id` is present\n      user: this.user.id ? this.user : void 0,\n      adapter: this.platform\n    });\n  }\n  async getLogin() {\n    return this.toJSON();\n  }\n  /** @deprecated use `bot.getLogin()` instead */\n  async getSelf() {\n    const { user } = await this.getLogin();\n    return user;\n  }\n};\nvar iterableMethods = [\n  \"getMessage\",\n  \"getReaction\",\n  \"getFriend\",\n  \"getGuild\",\n  \"getGuildMember\",\n  \"getGuildRole\",\n  \"getChannel\"\n];\nfor (const name of iterableMethods) {\n  Bot.prototype[name + \"Iter\"] = function(...args) {\n    let list;\n    if (!this[name + \"List\"]) throw new Error(`not implemented: ${name}List`);\n    const getList = /* @__PURE__ */ __name(async () => {\n      list = await this[name + \"List\"](...args, list?.next);\n      if (name === \"getMessage\") list.data.reverse();\n    }, \"getList\");\n    return {\n      async next() {\n        if (list?.data.length) return { done: false, value: list.data.shift() };\n        if (list && !list?.next) return { done: true, value: void 0 };\n        await getList();\n        return this.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      }\n    };\n  };\n}\ndefineAccessor(Bot.prototype, \"selfId\", [\"user\", \"id\"]);\ndefineAccessor(Bot.prototype, \"userId\", [\"user\", \"id\"]);\n\n// src/adapter.ts\nimport { remove as remove2, Time } from \"cosmokit\";\nimport { Status as Status2 } from \"@satorijs/protocol\";\nimport { z } from \"cordis\";\nvar Adapter = class {\n  constructor(ctx) {\n    this.ctx = ctx;\n  }\n  static {\n    __name(this, \"Adapter\");\n  }\n  static schema = false;\n  bots = [];\n  async connect(bot) {\n  }\n  async disconnect(bot) {\n  }\n  fork(ctx, bot) {\n    bot.adapter = this;\n    this.bots.push(bot);\n    ctx.on(\"dispose\", () => {\n      remove2(this.bots, bot);\n    });\n  }\n};\n((Adapter2) => {\n  Adapter2.WsClientConfig = z.object({\n    retryTimes: z.natural().description(\"初次连接时的最大重试次数。\").default(6),\n    retryInterval: z.natural().role(\"ms\").description(\"初次连接时的重试时间间隔。\").default(5 * Time.second),\n    retryLazy: z.natural().role(\"ms\").description(\"连接关闭后的重试时间间隔。\").default(Time.minute)\n  }).description(\"连接设置\");\n  class WsClientBase extends Adapter2 {\n    constructor(ctx, config) {\n      super(ctx);\n      this.config = config;\n    }\n    static {\n      __name(this, \"WsClientBase\");\n    }\n    socket;\n    connectionId = 0;\n    async start() {\n      let retryCount = 0;\n      const connectionId = ++this.connectionId;\n      const logger = this.ctx.logger(\"adapter\");\n      const { retryTimes, retryInterval, retryLazy } = this.config;\n      const reconnect = /* @__PURE__ */ __name((initial, message) => {\n        if (!this.getActive() || connectionId !== this.connectionId) return;\n        let timeout = retryInterval;\n        if (retryCount >= retryTimes) {\n          if (initial) {\n            return this.setStatus(Status2.OFFLINE, new Error(message));\n          } else {\n            timeout = retryLazy;\n          }\n        }\n        retryCount++;\n        this.setStatus(Status2.RECONNECT);\n        logger.warn(`${message}, will retry in ${Time.format(timeout)}...`);\n        setTimeout(() => {\n          if (!this.getActive() || connectionId !== this.connectionId) return;\n          connect();\n        }, timeout);\n      }, \"reconnect\");\n      const connect = /* @__PURE__ */ __name(async (initial = false) => {\n        logger.debug(\"websocket client opening\");\n        let socket;\n        try {\n          socket = await this.prepare();\n        } catch (error) {\n          reconnect(initial, error.toString() || `failed to prepare websocket`);\n          return;\n        }\n        const url = socket.url.replace(/\\?.+/, \"\");\n        socket.addEventListener(\"error\", (event) => {\n          if (event.message) logger.warn(event.message);\n        });\n        socket.addEventListener(\"close\", ({ code, reason }) => {\n          if (this.socket === socket) this.socket = null;\n          logger.debug(`websocket closed with ${code}`);\n          reconnect(initial, reason.toString() || `failed to connect to ${url}, code: ${code}`);\n        });\n        socket.addEventListener(\"open\", () => {\n          retryCount = 0;\n          this.socket = socket;\n          logger.info(\"connect to server: %c\", url);\n          this.accept(socket);\n        });\n      }, \"connect\");\n      connect(true);\n    }\n    async stop() {\n      this.socket?.close();\n    }\n  }\n  Adapter2.WsClientBase = WsClientBase;\n  class WsClient extends WsClientBase {\n    constructor(ctx, bot) {\n      super(ctx, bot.config);\n      this.bot = bot;\n      bot.adapter = this;\n    }\n    static {\n      __name(this, \"WsClient\");\n    }\n    static reusable = true;\n    getActive() {\n      return this.bot.isActive;\n    }\n    setStatus(status, error = null) {\n      this.bot.status = status;\n      this.bot.error = error;\n    }\n    async connect(bot) {\n      this.start();\n    }\n    async disconnect(bot) {\n      this.stop();\n    }\n  }\n  Adapter2.WsClient = WsClient;\n})(Adapter || (Adapter = {}));\n\n// src/message.ts\nimport h2 from \"@satorijs/element\";\nvar AggregateError = class extends Error {\n  constructor(errors, message = \"\") {\n    super(message);\n    this.errors = errors;\n  }\n  static {\n    __name(this, \"AggregateError\");\n  }\n};\nvar MessageEncoder = class {\n  constructor(bot, channelId, guildId, options = {}) {\n    this.bot = bot;\n    this.channelId = channelId;\n    this.guildId = guildId;\n    this.options = options;\n  }\n  static {\n    __name(this, \"MessageEncoder\");\n  }\n  errors = [];\n  results = [];\n  session;\n  async prepare() {\n  }\n  async render(elements, flush) {\n    for (const element of elements) {\n      await this.visit(element);\n    }\n    if (flush) {\n      await this.flush();\n    }\n  }\n  async send(content) {\n    this.session = this.bot.session({\n      type: \"send\",\n      channel: { id: this.channelId, ...this.options.session?.event.channel },\n      guild: this.options.session?.event.guild\n    });\n    for (const key in this.options.session || {}) {\n      if (key === \"id\" || key === \"event\") continue;\n      this.session[key] = this.options.session[key];\n    }\n    await this.prepare();\n    const session = this.options.session ?? this.session;\n    this.session.elements = await session.transform(h2.normalize(content));\n    const btns = h2.select(this.session.elements, \"button\").filter((v) => v.attrs.type !== \"link\" && !v.attrs.id);\n    for (const btn of btns) {\n      const r = Math.random().toString(36).slice(2);\n      btn.attrs.id ||= r;\n      if (typeof btn.attrs.action === \"function\") this.bot.callbacks[btn.attrs.id] = btn.attrs.action;\n    }\n    if (await this.session.app.serial(this.session, \"before-send\", this.session, this.options)) return [];\n    await this.render(this.session.elements);\n    await this.flush();\n    if (this.errors.length) {\n      throw new AggregateError(this.errors);\n    } else {\n      return this.results;\n    }\n  }\n};\n\n// src/index.ts\nh3.warn = new Logger2(\"element\").warn;\nHTTP.createConfig = /* @__PURE__ */ __name(function createConfig(endpoint) {\n  return z2.object({\n    endpoint: z2.string().role(\"link\").description(\"要连接的服务器地址。\").default(typeof endpoint === \"string\" ? endpoint : null).required(typeof endpoint === \"boolean\" ? endpoint : false),\n    headers: z2.dict(String).role(\"table\").description(\"要附加的额外请求头。\"),\n    ...this.Config.dict\n  }).description(\"请求设置\");\n}, \"createConfig\");\nvar SatoriContext = class extends Context4 {\n  static {\n    __name(this, \"SatoriContext\");\n  }\n  constructor(config) {\n    super(config);\n    this.provide(\"satori\", void 0, true);\n    this.plugin(Satori);\n  }\n};\nvar DisposableSet = class {\n  constructor(ctx) {\n    this.ctx = ctx;\n    defineProperty2(this, Service4.tracker, {\n      property: \"ctx\"\n    });\n  }\n  static {\n    __name(this, \"DisposableSet\");\n  }\n  sn = 0;\n  map1 = /* @__PURE__ */ new Map();\n  map2 = /* @__PURE__ */ new Map();\n  add(...values) {\n    const sn = ++this.sn;\n    return this.ctx.effect(() => {\n      let hasUpdate = false;\n      for (const value of values) {\n        if (!this.map2.has(value)) {\n          this.map2.set(value, /* @__PURE__ */ new Set());\n          hasUpdate = true;\n        }\n        this.map2.get(value).add(sn);\n      }\n      this.map1.set(sn, values);\n      if (hasUpdate) this.ctx.emit(\"satori/meta\");\n      return () => {\n        let hasUpdate2 = false;\n        this.map1.delete(sn);\n        for (const value of values) {\n          this.map2.get(value).delete(sn);\n          if (this.map2.get(value).size === 0) {\n            this.map2.delete(value);\n            hasUpdate2 = true;\n          }\n        }\n        if (hasUpdate2) this.ctx.emit(\"satori/meta\");\n      };\n    });\n  }\n  [Symbol.iterator]() {\n    return new Set([].concat(...this.map1.values()))[Symbol.iterator]();\n  }\n};\nvar Satori = class extends Service4 {\n  static {\n    __name(this, \"Satori\");\n  }\n  static [Service4.provide] = \"satori\";\n  static [Service4.immediate] = true;\n  uid = Math.random().toString(36).slice(2);\n  proxyUrls = new DisposableSet(this.ctx);\n  _internalRouter;\n  _tempStore = /* @__PURE__ */ Object.create(null);\n  _loginSeq = 0;\n  _sessionSeq = 0;\n  constructor(ctx) {\n    super(ctx);\n    ctx.mixin(\"satori\", [\"bots\", \"component\"]);\n    defineProperty2(this.bots, Service4.tracker, {});\n    const self = this;\n    ctx.on(\"http/file\", async function(_url, options) {\n      const url = new URL(_url);\n      if (url.protocol !== \"internal:\") return;\n      const { status, body, headers } = await self.handleInternalRoute(\"GET\", url);\n      if (status >= 400) throw new Error(`Failed to fetch ${_url}, status code: ${status}`);\n      if (status >= 300) {\n        const location = headers?.get(\"location\");\n        return this.file(location, options);\n      }\n      const type = headers?.get(\"content-type\");\n      const filename = headers?.get(\"content-disposition\")?.split(\"filename=\")[1];\n      return { data: body, filename, type, mime: type };\n    });\n    this._internalRouter = new InternalRouter(ctx);\n    this.defineInternalRoute(\"/_tmp/:id\", async ({ params, method }) => {\n      if (method !== \"GET\") return { status: 405 };\n      return this._tempStore[params.id] ?? { status: 404 };\n    });\n  }\n  bots = new Proxy([], {\n    get(target, prop) {\n      if (prop in target || typeof prop === \"symbol\") {\n        return Reflect.get(target, prop);\n      }\n      return target.find((bot) => bot.sid === prop);\n    },\n    deleteProperty(target, prop) {\n      if (prop in target || typeof prop === \"symbol\") {\n        return Reflect.deleteProperty(target, prop);\n      }\n      const bot = target.findIndex((bot2) => bot2.sid === prop);\n      if (bot < 0) return true;\n      target.splice(bot, 1);\n      return true;\n    }\n  });\n  component(name, component, options = {}) {\n    const render = /* @__PURE__ */ __name(async (attrs, children, session) => {\n      if (options.session && session.type === \"send\") {\n        throw new Error(\"interactive components is not available outside sessions\");\n      }\n      const result = await component(attrs, children, session);\n      return session.transform(h3.normalize(result));\n    }, \"render\");\n    return this.ctx.set(\"component:\" + name, render);\n  }\n  defineInternalRoute(path, callback) {\n    return this._internalRouter.define(path, callback);\n  }\n  async handleInternalRoute(method, url, headers = new Headers(), body) {\n    const capture = /^([^/]+)\\/([^/]+)(\\/.+)$/.exec(url.pathname);\n    if (!capture) return { status: 400 };\n    const [, platform, selfId, path] = capture;\n    const bot = this.bots[`${platform}:${selfId}`];\n    if (!bot) return { status: 404 };\n    let response = await bot._internalRouter.handle(bot, method, path, url.searchParams, headers, body);\n    response ??= await this._internalRouter.handle(bot, method, path, url.searchParams, headers, body);\n    if (!response) return { status: 404 };\n    return response;\n  }\n  toJSON(meta = false) {\n    return {\n      logins: meta ? void 0 : this.bots.map((bot) => bot.toJSON()),\n      proxyUrls: [...this.proxyUrls]\n    };\n  }\n};\nvar src_default = Satori;\nexport {\n  Adapter,\n  Bot,\n  SatoriContext as Context,\n  h3 as Element,\n  HTTP,\n  InternalRouter,\n  MessageEncoder,\n  MessageEncoder as Messenger,\n  MessageEncoder as Modulator,\n  HTTP as Quester,\n  Satori,\n  Session,\n  Universal,\n  src_default as default,\n  defineAccessor,\n  h3 as h,\n  h3 as segment\n};\n", "var __defProp = Object.defineProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\n\n// src/adapter/browser.ts\nvar v4 = /^(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}$/;\nvar v6seg = \"[a-fA-F\\\\d]{1,4}\";\nvar v6core = [\n  `(?:${v6seg}:){7}(?:${v6seg}|:)`,\n  // 1:2:3:4:5:6:7::  1:2:3:4:5:6:7:8\n  `(?:${v6seg}:){6}(?:${v4}|:${v6seg}|:)`,\n  // 1:2:3:4:5:6::    1:2:3:4:5:6::8   1:2:3:4:5:6::8  1:2:3:4:5:6::1.2.3.4\n  `(?:${v6seg}:){5}(?::${v4}|(?::${v6seg}){1,2}|:)`,\n  // 1:2:3:4:5::      1:2:3:4:5::7:8   1:2:3:4:5::8    1:2:3:4:5::7:1.2.3.4\n  `(?:${v6seg}:){4}(?:(?::${v6seg}){0,1}:${v4}|(?::${v6seg}){1,3}|:)`,\n  // 1:2:3:4::        1:2:3:4::6:7:8   1:2:3:4::8      1:2:3:4::6:7:1.2.3.4\n  `(?:${v6seg}:){3}(?:(?::${v6seg}){0,2}:${v4}|(?::${v6seg}){1,4}|:)`,\n  // 1:2:3::          1:2:3::5:6:7:8   1:2:3::8        1:2:3::5:6:7:1.2.3.4\n  `(?:${v6seg}:){2}(?:(?::${v6seg}){0,3}:${v4}|(?::${v6seg}){1,5}|:)`,\n  // 1:2::            1:2::4:5:6:7:8   1:2::8          1:2::4:5:6:7:1.2.3.4\n  `(?:${v6seg}:){1}(?:(?::${v6seg}){0,4}:${v4}|(?::${v6seg}){1,6}|:)`,\n  // 1::              1::3:4:5:6:7:8   1::8            1::3:4:5:6:7:1.2.3.4\n  `(?::(?:(?::${v6seg}){0,5}:${v4}|(?::${v6seg}){1,7}|:))`\n  // ::2:3:4:5:6:7:8  ::2:3:4:5:6:7:8  ::8             ::1.2.3.4\n];\nvar v6 = new RegExp(`^(?:${v6core.join(\"|\")})(?:%[0-9a-zA-Z]{1,})?$`);\nasync function lookup(address) {\n  if (v4.test(address)) return { address, family: 4 };\n  if (v6.test(address)) return { address, family: 6 };\n  throw new Error(\"Invalid IP address\");\n}\n__name(lookup, \"lookup\");\nasync function loadFile(url) {\n  return void 0;\n}\n__name(loadFile, \"loadFile\");\nvar { WebSocket } = globalThis;\nexport {\n  WebSocket,\n  loadFile,\n  lookup\n};\n", "var __defProp = Object.defineProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\n\n// src/index.ts\nimport { Context, Schema, Service } from \"cordis\";\nimport { Binary, defineProperty, isNullable, trimSlash } from \"cosmokit\";\nimport { loadFile, lookup, WebSocket } from \"@cordisjs/plugin-http/adapter\";\n\n// src/utils.ts\nvar bogonV4 = [\n  \"0.0.0.0/8\",\n  // RFC 1122 'this' network\n  \"10.0.0.0/8\",\n  // RFC 1918 private space\n  \"100.64.0.0/10\",\n  // RFC 6598 Carrier grade nat space\n  \"127.0.0.0/8\",\n  // RFC 1122 localhost\n  \"169.254.0.0/16\",\n  // RFC 3927 link local\n  \"172.16.0.0/12\",\n  // RFC 1918 private space\n  \"192.0.2.0/24\",\n  // RFC 5737 TEST-NET-1\n  \"192.88.99.0/24\",\n  // RFC 7526 6to4 anycast relay\n  \"192.168.0.0/16\",\n  // RFC 1918 private space\n  \"198.18.0.0/15\",\n  // RFC 2544 benchmarking\n  \"198.51.100.0/24\",\n  // RFC 5737 TEST-NET-2\n  \"203.0.113.0/24\",\n  // RFC 5737 TEST-NET-3\n  \"224.0.0.0/4\",\n  // multicast\n  \"240.0.0.0/4\"\n  // reserved\n];\nvar bogonV6 = [\n  \"::/8\",\n  // RFC 4291 IPv4-compatible, loopback, et al\n  \"0100::/64\",\n  // RFC 6666 Discard-Only\n  \"2001:2::/48\",\n  // RFC 5180 BMWG\n  \"2001:10::/28\",\n  // RFC 4843 ORCHID\n  \"2001:db8::/32\",\n  // RFC 3849 documentation\n  \"2002::/16\",\n  // RFC 7526 6to4 anycast relay\n  \"3ffe::/16\",\n  // RFC 3701 old 6bone\n  \"fc00::/7\",\n  // RFC 4193 unique local unicast\n  \"fe80::/10\",\n  // RFC 4291 link local unicast\n  \"fec0::/10\",\n  // RFC 3879 old site local unicast\n  \"ff00::/8\"\n  // RFC 4291 multicast\n];\nfunction parseIPv4(ip) {\n  return ip.split(\".\").reduce((a, b) => (a << 8n) + BigInt(b), 0n);\n}\n__name(parseIPv4, \"parseIPv4\");\nfunction parseIPv6(ip) {\n  const exp = ip.indexOf(\"::\");\n  let num = 0n;\n  if (exp !== -1 && exp !== 0) {\n    ip.slice(0, exp).split(\":\").forEach((piece, i) => {\n      num |= BigInt(`0x${piece}`) << BigInt((7 - i) * 16);\n    });\n  }\n  if (exp === ip.length - 2) {\n    return num;\n  }\n  const rest = exp === -1 ? ip : ip.slice(exp + 2);\n  const v4 = rest.includes(\".\");\n  const pieces = rest.split(\":\");\n  let start = 0;\n  if (v4) {\n    start += 2;\n    const [addr] = pieces.splice(-1, 1);\n    num |= parseIPv4(addr);\n  }\n  pieces.reverse().forEach((piece, i) => {\n    num |= BigInt(`0x${piece}`) << BigInt((start + i) * 8);\n  });\n  return num;\n}\n__name(parseIPv6, \"parseIPv6\");\nasync function isLocalAddress({ address, family }) {\n  if (family !== 4 && family !== 6) return false;\n  const { bogons, length, parse } = family === 4 ? { bogons: bogonV4, length: 32, parse: parseIPv4 } : { bogons: bogonV6, length: 128, parse: parseIPv6 };\n  const num = parse(address);\n  for (const bogon of bogons) {\n    const [prefix, cidr] = bogon.split(\"/\");\n    const mask = (1n << BigInt(cidr)) - 1n << BigInt(length - +cidr);\n    if ((num & mask) === parse(prefix)) return true;\n  }\n  return false;\n}\n__name(isLocalAddress, \"isLocalAddress\");\n\n// src/index.ts\nimport mimedb from \"mime-db\";\nvar kHTTPError = Symbol.for(\"cordis.http.error\");\nvar HTTPError = class extends Error {\n  constructor(message, code) {\n    super(message);\n    this.code = code;\n  }\n  static {\n    __name(this, \"HTTPError\");\n  }\n  [kHTTPError] = true;\n  response;\n  static is(error) {\n    return !!error?.[kHTTPError];\n  }\n};\nfunction encodeRequest(data) {\n  if (data instanceof URLSearchParams) return [null, data];\n  if (data instanceof ArrayBuffer) return [null, data];\n  if (ArrayBuffer.isView(data)) return [null, data];\n  if (data instanceof Blob) return [null, data];\n  if (data instanceof FormData) return [null, data];\n  return [\"application/json\", JSON.stringify(data)];\n}\n__name(encodeRequest, \"encodeRequest\");\nvar HTTP = class _HTTP extends Service {\n  static {\n    __name(this, \"HTTP\");\n  }\n  static Error = HTTPError;\n  /** @deprecated use `http.isError()` instead */\n  static isAxiosError = HTTPError.is;\n  static provide = \"http\";\n  static [Service.immediate] = true;\n  static {\n    for (const method of [\"get\", \"delete\"]) {\n      defineProperty(_HTTP.prototype, method, async function(url, config) {\n        const response = await this(url, { method, ...config });\n        return response.data;\n      });\n    }\n    for (const method of [\"patch\", \"post\", \"put\"]) {\n      defineProperty(_HTTP.prototype, method, async function(url, data, config) {\n        const response = await this(url, { method, data, ...config });\n        return response.data;\n      });\n    }\n  }\n  static Config = Schema.object({\n    timeout: Schema.natural().role(\"ms\").description(\"等待请求的最长时间。\"),\n    keepAlive: Schema.boolean().description(\"是否保持连接。\")\n  });\n  static Intercept = Schema.object({\n    baseURL: Schema.string().description(\"基础 URL。\"),\n    timeout: Schema.natural().role(\"ms\").description(\"等待请求的最长时间。\"),\n    keepAlive: Schema.boolean().description(\"是否保持连接。\")\n  });\n  isError = HTTPError.is;\n  _decoders = /* @__PURE__ */ Object.create(null);\n  constructor(...args) {\n    let ctx, config;\n    if (Context.is(args[0])) {\n      ctx = args[0];\n      config = args[1];\n    } else {\n      ctx = new Context();\n    }\n    super(ctx, \"http\");\n    this.config = config ?? {};\n    this.decoder(\"json\", (raw) => raw.json());\n    this.decoder(\"text\", (raw) => raw.text());\n    this.decoder(\"blob\", (raw) => raw.blob());\n    this.decoder(\"arraybuffer\", (raw) => raw.arrayBuffer());\n    this.decoder(\"formdata\", (raw) => raw.formData());\n    this.decoder(\"stream\", (raw) => raw.body);\n    this.ctx.on(\"http/file\", (url, options) => loadFile(url));\n    this.schema?.extend(_HTTP.Intercept);\n  }\n  static mergeConfig = /* @__PURE__ */ __name((target, source) => ({\n    ...target,\n    ...source,\n    headers: {\n      ...target?.headers,\n      ...source?.headers\n    }\n  }), \"mergeConfig\");\n  decoder(type, decoder) {\n    return this.ctx.effect(() => {\n      this._decoders[type] = decoder;\n      return () => delete this._decoders[type];\n    });\n  }\n  extend(config = {}) {\n    return this[Service.extend]({\n      config: _HTTP.mergeConfig(this.config, config)\n    });\n  }\n  resolveConfig(init) {\n    let result = { headers: {}, ...this.config };\n    this.ctx.emit({ ctx: this.ctx }, \"http/config\", result);\n    let intercept = this.ctx[Context.intercept];\n    while (intercept) {\n      result = _HTTP.mergeConfig(result, intercept.http);\n      intercept = Object.getPrototypeOf(intercept);\n    }\n    result = _HTTP.mergeConfig(result, init);\n    return result;\n  }\n  resolveURL(url, config, isWebSocket = false) {\n    if (config.endpoint) {\n      try {\n        new URL(url);\n      } catch {\n        url = trimSlash(config.endpoint) + url;\n      }\n    }\n    try {\n      url = new URL(url, config.baseURL);\n    } catch (error) {\n      throw new TypeError(`Invalid URL: ${url}`);\n    }\n    if (isWebSocket) url.protocol = url.protocol.replace(/^http/, \"ws\");\n    for (const [key, value] of Object.entries(config.params ?? {})) {\n      if (isNullable(value)) continue;\n      url.searchParams.append(key, value);\n    }\n    return url;\n  }\n  defaultDecoder(response) {\n    const type = response.headers.get(\"Content-Type\");\n    if (type?.startsWith(\"application/json\")) {\n      return response.json();\n    } else if (type?.startsWith(\"text/\")) {\n      return response.text();\n    } else {\n      return response.arrayBuffer();\n    }\n  }\n  async [Service.invoke](...args) {\n    let method;\n    if (typeof args[1] === \"string\" || args[1] instanceof URL) {\n      method = args.shift();\n    }\n    const config = this.resolveConfig(args[1]);\n    const url = this.resolveURL(args[0], config);\n    method ??= config.method ?? \"GET\";\n    const controller = new AbortController();\n    if (config.signal) {\n      if (config.signal.aborted) {\n        throw config.signal.reason;\n      }\n      config.signal.addEventListener(\"abort\", () => {\n        controller.abort(config.signal.reason);\n      });\n    }\n    const dispose = this.ctx.effect(() => {\n      const timer = config.timeout && setTimeout(() => {\n        controller.abort(new HTTPError(\"request timeout\", \"ETIMEDOUT\"));\n      }, config.timeout);\n      return (done) => {\n        clearTimeout(timer);\n        if (done) return;\n        controller.abort(new HTTPError(\"context disposed\", \"ETIMEDOUT\"));\n      };\n    });\n    controller.signal.addEventListener(\"abort\", () => dispose());\n    try {\n      const headers = new Headers(config.headers);\n      const init = {\n        method,\n        headers,\n        body: config.data,\n        keepalive: config.keepAlive,\n        redirect: config.redirect,\n        signal: controller.signal\n      };\n      if (config.data && typeof config.data === \"object\") {\n        const [type, body] = encodeRequest(config.data);\n        init.body = body;\n        if (type && !headers.has(\"Content-Type\")) {\n          headers.append(\"Content-Type\", type);\n        }\n      }\n      this.ctx.emit({ ctx: this.ctx }, \"http/fetch-init\", url, init, config);\n      const raw = await fetch(url, init).catch((cause) => {\n        if (_HTTP.Error.is(cause)) throw cause;\n        const error = new _HTTP.Error(`fetch ${url} failed`);\n        error.cause = cause;\n        throw error;\n      });\n      const response = {\n        data: null,\n        url: raw.url,\n        status: raw.status,\n        statusText: raw.statusText,\n        headers: raw.headers\n      };\n      const validateStatus = config.validateStatus ?? ((status) => status < 400);\n      if (!validateStatus(raw.status)) {\n        const error = new _HTTP.Error(raw.statusText);\n        error.response = response;\n        try {\n          response.data = await this.defaultDecoder(raw);\n        } catch {\n        }\n        throw error;\n      }\n      if (config.responseType) {\n        let decoder;\n        if (typeof config.responseType === \"function\") {\n          decoder = config.responseType;\n        } else {\n          decoder = this._decoders[config.responseType];\n          if (!decoder) {\n            throw new TypeError(`Unknown responseType: ${config.responseType}`);\n          }\n        }\n        response.data = await decoder(raw);\n      } else {\n        response.data = await this.defaultDecoder(raw);\n      }\n      return response;\n    } finally {\n      dispose(true);\n    }\n  }\n  async head(url, config) {\n    const response = await this(url, { method: \"HEAD\", ...config });\n    return response.headers;\n  }\n  axios(...args) {\n    this.ctx.emit(this.ctx, \"internal/warning\", \"ctx.http.axios() is deprecated, use ctx.http() instead\");\n    if (typeof args[0] === \"string\") {\n      return this(args[0], args[1]);\n    } else {\n      return this(args[0].url, args[0]);\n    }\n  }\n  ws(url, init) {\n    const config = this.resolveConfig(init);\n    url = this.resolveURL(url, config, true);\n    let options;\n    if (WebSocket !== globalThis.WebSocket) {\n      options = {\n        handshakeTimeout: config?.timeout,\n        headers: config?.headers\n      };\n      this.ctx.emit({ ctx: this.ctx }, \"http/websocket-init\", url, options, config);\n    }\n    const socket = new WebSocket(url, options);\n    const dispose = this.ctx.on(\"dispose\", () => {\n      socket.close(1e3, \"context disposed\");\n    });\n    socket.addEventListener(\"close\", () => {\n      dispose();\n    });\n    return socket;\n  }\n  async file(url, options = {}) {\n    const task = await this.ctx.serial(this, \"http/file\", url, options);\n    if (task) return task;\n    const capture = /^data:([\\w/.+-]+);base64,(.*)$/.exec(url);\n    if (capture) {\n      const [, type2, base64] = capture;\n      let name2 = \"file\";\n      const ext = type2 && mimedb[type2]?.extensions?.[0];\n      if (ext) name2 += `.${ext}`;\n      return { type: type2, mime: type2, data: Binary.fromBase64(base64), filename: name2 };\n    }\n    const { headers, data, url: responseUrl } = await this(url, {\n      method: \"GET\",\n      responseType: \"arraybuffer\",\n      timeout: +options.timeout || void 0\n    });\n    const type = headers.get(\"content-type\");\n    const [, name] = responseUrl.match(/.+\\/([^/?]*)(?=\\?)?/);\n    return { type, mime: type, filename: name, data };\n  }\n  async isLocal(url) {\n    let { hostname, protocol } = new URL(url);\n    if (protocol !== \"http:\" && protocol !== \"https:\") return true;\n    if (/^\\[.+\\]$/.test(hostname)) {\n      hostname = hostname.slice(1, -1);\n    }\n    try {\n      const address = await lookup(hostname);\n      return isLocalAddress(address);\n    } catch {\n      return false;\n    }\n  }\n};\nvar src_default = HTTP;\nexport {\n  HTTP,\n  src_default as default\n};\n", "import { arrayBufferToBase64, Awaitable, camelize, defineProperty, Dict, hyphenate, is, isNullable, makeArray } from 'cosmokit'\n\ndeclare global {\n  namespace JSX {\n    interface IntrinsicElements {\n      [key: string]: any\n      message: {\n        id?: string\n        forward?: boolean\n        children?: any[]\n      }\n      quote: {\n        id?: string\n        name?: string\n        avatar?: string\n        children?: any[]\n      }\n      at: {\n        id?: string\n        name?: string\n        avatar?: string\n        role?: string\n        type?: string\n      }\n      sharp: {\n        id?: string\n        name?: string\n        avatar?: string\n      }\n      img: ResourceElement\n      audio: ResourceElement\n      video: ResourceElement\n      file: ResourceElement\n    }\n\n    interface ResourceElement {\n      [key: string]: any\n      src?: string\n      title?: string\n      width?: string | number\n      height?: string | number\n      duration?: string | number\n      poster?: string\n    }\n  }\n}\n\nconst kElement = Symbol.for('satori.element')\n\ninterface Element {\n  [kElement]: true\n  type: string\n  attrs: Dict\n  /** @deprecated use `attrs` instead */\n  data: Dict\n  children: Element[]\n  source?: string\n  toString(strip?: boolean): string\n}\n\ninterface ElementConstructor extends Element { }\n\nclass ElementConstructor {\n  get data() {\n    return this.attrs\n  }\n\n  getTagName() {\n    if (this.type === 'component') {\n      return this.attrs.is?.name ?? 'component'\n    } else {\n      return this.type\n    }\n  }\n\n  toAttrString() {\n    return Object.entries(this.attrs).map(([key, value]) => {\n      if (isNullable(value)) return ''\n      key = hyphenate(key)\n      if (value === true) return ` ${key}`\n      if (value === false) return ` no-${key}`\n      return ` ${key}=\"${Element.escape('' + value, true)}\"`\n    }).join('')\n  }\n\n  toString(strip = false) {\n    if (this.type === 'text' && 'content' in this.attrs) {\n      return strip ? this.attrs.content : Element.escape(this.attrs.content)\n    }\n    const inner = this.children.map(child => child.toString(strip)).join('')\n    if (strip) return inner\n    const attrs = this.toAttrString()\n    const tag = this.getTagName()\n    if (!this.children.length) return `<${tag}${attrs}/>`\n    return `<${tag}${attrs}>${inner}</${tag}>`\n  }\n}\n\ndefineProperty(ElementConstructor, 'name', 'Element')\ndefineProperty(ElementConstructor.prototype, kElement, true)\n\ntype RenderFunction = Element.Render<Element.Fragment, any>\n\nfunction Element(type: string | RenderFunction, ...children: Element.Fragment[]): Element\nfunction Element(type: string | RenderFunction, attrs: Dict, ...children: Element.Fragment[]): Element\nfunction Element(type: string | RenderFunction, ...args: any[]) {\n  const el = Object.create(ElementConstructor.prototype)\n  const attrs: Dict = {}, children: Element[] = []\n  if (args[0] && typeof args[0] === 'object' && !Element.isElement(args[0]) && !Array.isArray(args[0])) {\n    const props = args.shift()\n    for (const [key, value] of Object.entries(props)) {\n      if (isNullable(value)) continue\n      // https://github.com/reactjs/rfcs/pull/107\n      if (key === 'children') {\n        args.push(...makeArray(value))\n      } else {\n        attrs[camelize(key)] = value\n      }\n    }\n  }\n  for (const child of args) {\n    children.push(...Element.toElementArray(child))\n  }\n  if (typeof type === 'function') {\n    attrs.is = type\n    type = 'component'\n  }\n  return Object.assign(el, { type, attrs, children })\n}\n\n// eslint-disable-next-line no-new-func\nconst evaluate = new Function('expr', 'context', `\n  try {\n    with (context) {\n      return eval(expr)\n    }\n  } catch {}\n`) as ((expr: string, context: object) => string)\n\nnamespace Element {\n  export const jsx = Element\n  export const jsxs = Element\n  export const jsxDEV = Element\n  export const Fragment = 'template'\n\n  export type Fragment = string | Element | (string | Element)[]\n  export type Visit<T, S> = (element: Element, session: S) => T\n  export type Render<T, S> = (attrs: Dict, children: Element[], session: S) => T\n  export type SyncTransformer<S = never> = boolean | Fragment | Render<boolean | Fragment, S>\n  export type Transformer<S = never> = boolean | Fragment | Render<Awaitable<boolean | Fragment>, S>\n\n  type SyncVisitor<S> = Dict<SyncTransformer<S>> | Visit<boolean | Fragment, S>\n  type Visitor<S> = Dict<Transformer<S>> | Visit<Awaitable<boolean | Fragment>, S>\n\n  export function isElement(source: any): source is Element {\n    return source && typeof source === 'object' && source[kElement]\n  }\n\n  export function toElement(content: string | Element) {\n    if (typeof content === 'string' || typeof content === 'number' || typeof content === 'boolean') {\n      content = '' + content\n      if (content) return Element('text', { content })\n    } else if (isElement(content)) {\n      return content\n    } else if (!isNullable(content)) {\n      throw new TypeError(`Invalid content: ${content}`)\n    }\n  }\n\n  export function toElementArray(content: Element.Fragment) {\n    if (Array.isArray(content)) {\n      return content.map(toElement).filter(x => x)\n    } else {\n      return [toElement(content)].filter(x => x)\n    }\n  }\n\n  export function normalize(source: Fragment, context?: any) {\n    return typeof source === 'string' ? parse(source, context) : toElementArray(source)\n  }\n\n  export function escape(source: string, inline = false) {\n    const result\n      = (source ?? '').replace(/&/g, '&amp;')\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;')\n    return inline\n      ? result.replace(/\"/g, '&quot;')\n      : result\n  }\n\n  export function unescape(source: string) {\n    return source\n      .replace(/&lt;/g, '<')\n      .replace(/&gt;/g, '>')\n      .replace(/&quot;/g, '\"')\n      .replace(/&#(\\d+);/g, (_, code) => code === '38' ? _ : String.fromCharCode(+code))\n      .replace(/&#x([0-9a-f]+);/gi, (_, code) => code === '26' ? _ : String.fromCharCode(parseInt(code, 16)))\n      .replace(/&(amp|#38|#x26);/g, '&')\n  }\n\n  export interface FindOptions {\n    type?: string\n    caret?: boolean\n  }\n\n  /** @deprecated use `Element.select()` instead */\n  export function from(source: string, options: FindOptions = {}): Element {\n    const elements = parse(source)\n    if (options.caret) {\n      if (options.type && elements[0]?.type !== options.type) return\n      return elements[0]\n    }\n    return select(elements, options.type || '*')[0]\n  }\n\n  type Combinator = ' ' | '>' | '+' | '~'\n\n  export interface Selector {\n    type: string\n    combinator: Combinator\n  }\n\n  const combRegExp = / *([ >+~]) */g\n\n  export function parseSelector(input: string): Selector[][] {\n    return input.split(',').map((query) => {\n      const selectors: Selector[] = []\n      query = query.trim()\n      let combCap: RegExpExecArray, combinator: Combinator = ' '\n      while ((combCap = combRegExp.exec(query))) {\n        selectors.push({ type: query.slice(0, combCap.index), combinator })\n        combinator = combCap[1] as Combinator\n        query = query.slice(combCap.index + combCap[0].length)\n      }\n      selectors.push({ type: query, combinator })\n      return selectors\n    })\n  }\n\n  export function select(source: string | Element[], query: string | Selector[][]): Element[] {\n    if (!source || !query) return []\n    if (typeof source === 'string') source = parse(source)\n    if (typeof query === 'string') query = parseSelector(query)\n    if (!query.length) return []\n    let adjacent: Selector[][] = []\n    const results: Element[] = []\n    for (const [index, element] of source.entries()) {\n      const inner: Selector[][] = []\n      const local = [...query, ...adjacent]\n      adjacent = []\n      let matched = false\n      for (const group of local) {\n        const { type, combinator } = group[0]\n        if (type === element.type || type === '*') {\n          if (group.length === 1) {\n            matched = true\n          } else if ([' ', '>'].includes(group[1].combinator)) {\n            inner.push(group.slice(1))\n          } else if (group[1].combinator === '+') {\n            adjacent.push(group.slice(1))\n          } else {\n            query.push(group.slice(1))\n          }\n        }\n        if (combinator === ' ') {\n          inner.push(group)\n        }\n      }\n      if (matched) results.push(source[index])\n      results.push(...select(element.children, inner))\n    }\n    return results\n  }\n\n  export function interpolate(expr: string, context: any) {\n    expr = expr.trim()\n    if (!/^[\\w.]+$/.test(expr)) {\n      return evaluate(expr, context) ?? ''\n    }\n    let value = context\n    for (const part of expr.split('.')) {\n      value = value[part]\n      if (isNullable(value)) return ''\n    }\n    return value ?? ''\n  }\n\n  const tagRegExp1 = /(?<comment><!--[\\s\\S]*?-->)|(?<tag><(\\/?)([^!\\s>/]*)([^>]*?)\\s*(\\/?)>)/\n  const tagRegExp2 = /(?<comment><!--[\\s\\S]*?-->)|(?<tag><(\\/?)([^!\\s>/]*)([^>]*?)\\s*(\\/?)>)|(?<curly>\\{(?<derivative>[@:/#][^\\s}]*)?[\\s\\S]*?\\})/\n  const attrRegExp1 = /([^\\s=]+)(?:=\"(?<value1>[^\"]*)\"|='(?<value2>[^']*)')?/g\n  const attrRegExp2 = /([^\\s=]+)(?:=\"(?<value1>[^\"]*)\"|='(?<value2>[^']*)'|=\\{(?<curly>[^}]+)\\})?/g\n\n  const enum Position {\n    OPEN,\n    CLOSE,\n    EMPTY,\n    CONTINUE,\n  }\n\n  interface Token {\n    type: 'angle' | 'curly'\n    name: string\n    position: Position\n    source: string\n    extra: string\n    children?: Dict<(string | Token)[]>\n  }\n\n  export function parse(source: string, context?: any) {\n    const tokens: (string | Token)[] = []\n    function pushText(content: string) {\n      if (content) tokens.push(content)\n    }\n\n    const tagRegExp = context ? tagRegExp2 : tagRegExp1\n    let tagCap: RegExpExecArray\n    let trimStart = true\n    while ((tagCap = tagRegExp.exec(source))) {\n      const trimEnd = !tagCap.groups.curly\n      parseContent(source.slice(0, tagCap.index), trimStart, trimEnd)\n      trimStart = trimEnd\n      source = source.slice(tagCap.index + tagCap[0].length)\n      const [_, , , close, type, extra, empty] = tagCap\n      if (tagCap.groups.comment) continue\n      if (tagCap.groups.curly) {\n        let name = '', position = Position.EMPTY\n        if (tagCap.groups.derivative) {\n          name = tagCap.groups.derivative.slice(1)\n          position = {\n            '@': Position.EMPTY,\n            '#': Position.OPEN,\n            '/': Position.CLOSE,\n            ':': Position.CONTINUE,\n          }[tagCap.groups.derivative[0]]\n        }\n        tokens.push({\n          type: 'curly',\n          name,\n          position,\n          source: tagCap.groups.curly,\n          extra: tagCap.groups.curly.slice(1 + (tagCap.groups.derivative ?? '').length, -1),\n        })\n        continue\n      }\n      tokens.push({\n        type: 'angle',\n        source: _,\n        name: type || Fragment,\n        position: close ? Position.CLOSE : empty ? Position.EMPTY : Position.OPEN,\n        extra,\n      })\n    }\n\n    parseContent(source, trimStart, true)\n    function parseContent(source: string, trimStart: boolean, trimEnd: boolean) {\n      source = unescape(source)\n      if (trimStart) source = source.replace(/^\\s*\\n\\s*/, '')\n      if (trimEnd) source = source.replace(/\\s*\\n\\s*$/, '')\n      pushText(source)\n    }\n\n    return parseTokens(foldTokens(tokens), context)\n  }\n\n  function foldTokens(tokens: (string | Token)[]) {\n    const stack: [Token, string][] = [[{\n      type: 'angle',\n      name: Fragment,\n      position: Position.OPEN,\n      source: '',\n      extra: '',\n      children: { default: [] },\n    }, 'default']]\n\n    function pushToken(...tokens: (string | Token)[]) {\n      const [token, slot] = stack[0]\n      token.children[slot].push(...tokens)\n    }\n\n    for (const token of tokens) {\n      if (typeof token === 'string') {\n        pushToken(token)\n        continue\n      }\n      const { name, position } = token\n      if (position === Position.CLOSE) {\n        if (stack[0][0].name === name) {\n          stack.shift()\n        }\n      } else if (position === Position.CONTINUE) {\n        stack[0][0].children[name] = []\n        stack[0][1] = name\n      } else if (position === Position.OPEN) {\n        pushToken(token)\n        token.children = { default: [] }\n        stack.unshift([token, 'default'])\n      } else {\n        pushToken(token)\n      }\n    }\n\n    return stack[stack.length - 1][0].children.default\n  }\n\n  function parseTokens(tokens: (string | Token)[], context?: any) {\n    const result: Element[] = []\n    for (const token of tokens) {\n      if (typeof token === 'string') {\n        result.push(Element('text', { content: token }))\n      } else if (token.type === 'angle') {\n        const attrs = {}\n        const attrRegExp = context ? attrRegExp2 : attrRegExp1\n        let attrCap: RegExpExecArray\n        while ((attrCap = attrRegExp.exec(token.extra))) {\n          const [, key, v1, v2 = v1, v3] = attrCap\n          if (v3) {\n            attrs[key] = interpolate(v3, context)\n          } else if (!isNullable(v2)) {\n            attrs[key] = unescape(v2)\n          } else if (key.startsWith('no-')) {\n            attrs[key.slice(3)] = false\n          } else {\n            attrs[key] = true\n          }\n        }\n        result.push(Element(token.name, attrs, token.children && parseTokens(token.children.default, context)))\n      } else if (!token.name) {\n        result.push(...toElementArray(interpolate(token.extra, context)))\n      } else if (token.name === 'if') {\n        if (evaluate(token.extra, context)) {\n          result.push(...parseTokens(token.children.default, context))\n        } else {\n          result.push(...parseTokens(token.children.else || [], context))\n        }\n      } else if (token.name === 'each') {\n        const [expr, ident] = token.extra.split(/\\s+as\\s+/)\n        const items = interpolate(expr, context)\n        if (!items || !items[Symbol.iterator]) continue\n        for (const item of items) {\n          result.push(...parseTokens(token.children.default, { ...context, [ident]: item }))\n        }\n      }\n    }\n    return result\n  }\n\n  function visit<S>(element: Element, rules: Visitor<S>, session: S) {\n    const { type, attrs, children } = element\n    if (typeof rules === 'function') {\n      return rules(element, session)\n    } else {\n      let result: any = rules[typeof type === 'string' ? type : ''] ?? rules.default ?? true\n      if (typeof result === 'function') {\n        result = result(attrs, children, session)\n      }\n      return result\n    }\n  }\n\n  export function transform<S = never>(source: string, rules: SyncVisitor<S>, session?: S): string\n  export function transform<S = never>(source: Element[], rules: SyncVisitor<S>, session?: S): Element[]\n  export function transform<S>(source: string | Element[], rules: SyncVisitor<S>, session?: S) {\n    const elements = typeof source === 'string' ? parse(source) : source\n    const output: Element[] = []\n    elements.forEach((element) => {\n      const { type, attrs, children } = element\n      const result = visit(element, rules, session)\n      if (result === true) {\n        output.push(Element(type, attrs, transform(children, rules, session)))\n      } else if (result !== false) {\n        output.push(...toElementArray(result))\n      }\n    })\n    return typeof source === 'string' ? output.join('') : output\n  }\n\n  export async function transformAsync<S = never>(source: string, rules: Visitor<S>, session?: S): Promise<string>\n  export async function transformAsync<S = never>(source: Element[], rules: Visitor<S>, session?: S): Promise<Element[]>\n  export async function transformAsync<S>(source: string | Element[], rules: Visitor<S>, session?: S) {\n    const elements = typeof source === 'string' ? parse(source) : source\n    const children = (await Promise.all(elements.map(async (element) => {\n      const { type, attrs, children } = element\n      const result = await visit(element, rules, session)\n      if (result === true) {\n        return [Element(type, attrs, await transformAsync(children, rules, session))]\n      } else if (result !== false) {\n        return toElementArray(result)\n      } else {\n        return []\n      }\n    }))).flat(1)\n    return typeof source === 'string' ? children.join('') : children\n  }\n\n  export type Factory<R extends any[]> = (...args: [...rest: R, attrs?: Dict]) => Element\n\n  function createFactory<R extends any[] = any[]>(type: string, ...keys: string[]): Factory<R> {\n    return (...args: any[]) => {\n      const element = Element(type)\n      keys.forEach((key, index) => {\n        if (!isNullable(args[index])) {\n          element.attrs[key] = args[index]\n        }\n      })\n      if (args[keys.length]) {\n        Object.assign(element.attrs, args[keys.length])\n      }\n      return element\n    }\n  }\n\n  // eslint-disable-next-line prefer-const\n  export let warn: (message: string) => void = () => { }\n\n  function createAssetFactory(type: string): Factory<[data: string] | [data: Buffer | ArrayBuffer | ArrayBufferView, type: string]> {\n    return (src, ...args) => {\n      let prefix = 'base64://'\n      if (typeof args[0] === 'string') {\n        prefix = `data:${args.shift()};base64,`\n      }\n      if (is('Buffer', src)) {\n        src = prefix + src.toString('base64')\n      } else if (is('ArrayBuffer', src)) {\n        src = prefix + arrayBufferToBase64(src)\n      } else if (ArrayBuffer.isView(src)) {\n        src = prefix + arrayBufferToBase64(src.buffer)\n      }\n      if (src.startsWith('base64://')) {\n        warn(`protocol \"base64:\" is deprecated and will be removed in the future, please use \"data:\" instead`)\n      }\n      return Element(type, { ...args[0] as {}, src })\n    }\n  }\n\n  export const text = createFactory<[content: any]>('text', 'content')\n  export const at = createFactory<[id: any]>('at', 'id')\n  export const sharp = createFactory<[id: any]>('sharp', 'id')\n  export const quote = createFactory<[id: any]>('quote', 'id')\n  export const image = createAssetFactory('img')\n  export const img = createAssetFactory('img')\n  export const video = createAssetFactory('video')\n  export const audio = createAssetFactory('audio')\n  export const file = createAssetFactory('file')\n\n  export function i18n(path: string | Dict, children?: any[]) {\n    return Element('i18n', typeof path === 'string' ? { path } : path, children)\n  }\n}\n\nexport = Element\n", "var __defProp = Object.defineProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\n\n// src/index.ts\nfunction Field(name) {\n  return { name };\n}\n__name(Field, \"Field\");\nfunction Method(name, fields, isForm = false) {\n  return { name, fields: fields.map(Field), isForm };\n}\n__name(Method, \"Method\");\nvar Methods = {\n  \"channel.get\": Method(\"getChannel\", [\"channel_id\", \"guild_id\"]),\n  \"channel.list\": Method(\"getChannelList\", [\"guild_id\", \"next\"]),\n  \"channel.create\": Method(\"createChannel\", [\"guild_id\", \"data\"]),\n  \"channel.update\": Method(\"updateChannel\", [\"channel_id\", \"data\"]),\n  \"channel.delete\": Method(\"deleteChannel\", [\"channel_id\"]),\n  \"channel.mute\": Method(\"muteChannel\", [\"channel_id\", \"guild_id\", \"enable\"]),\n  \"message.create\": Method(\"createMessage\", [\"channel_id\", \"content\"]),\n  \"message.update\": Method(\"editMessage\", [\"channel_id\", \"message_id\", \"content\"]),\n  \"message.delete\": Method(\"deleteMessage\", [\"channel_id\", \"message_id\"]),\n  \"message.get\": Method(\"getMessage\", [\"channel_id\", \"message_id\"]),\n  \"message.list\": Method(\"getMessageList\", [\"channel_id\", \"next\", \"direction\", \"limit\", \"order\"]),\n  \"reaction.create\": Method(\"createReaction\", [\"channel_id\", \"message_id\", \"emoji\"]),\n  \"reaction.delete\": Method(\"deleteReaction\", [\"channel_id\", \"message_id\", \"emoji\", \"user_id\"]),\n  \"reaction.clear\": Method(\"clearReaction\", [\"channel_id\", \"message_id\", \"emoji\"]),\n  \"reaction.list\": Method(\"getReactionList\", [\"channel_id\", \"message_id\", \"emoji\", \"next\"]),\n  \"upload.create\": Method(\"createUpload\", [], true),\n  \"guild.get\": Method(\"getGuild\", [\"guild_id\"]),\n  \"guild.list\": Method(\"getGuildList\", [\"next\"]),\n  \"guild.member.get\": Method(\"getGuildMember\", [\"guild_id\", \"user_id\"]),\n  \"guild.member.list\": Method(\"getGuildMemberList\", [\"guild_id\", \"next\"]),\n  \"guild.member.kick\": Method(\"kickGuildMember\", [\"guild_id\", \"user_id\", \"permanent\"]),\n  \"guild.member.mute\": Method(\"muteGuildMember\", [\"guild_id\", \"user_id\", \"duration\", \"reason\"]),\n  \"guild.member.role.set\": Method(\"setGuildMemberRole\", [\"guild_id\", \"user_id\", \"role_id\"]),\n  \"guild.member.role.unset\": Method(\"unsetGuildMemberRole\", [\"guild_id\", \"user_id\", \"role_id\"]),\n  \"guild.role.list\": Method(\"getGuildRoleList\", [\"guild_id\", \"next\"]),\n  \"guild.role.create\": Method(\"createGuildRole\", [\"guild_id\", \"data\"]),\n  \"guild.role.update\": Method(\"updateGuildRole\", [\"guild_id\", \"role_id\", \"data\"]),\n  \"guild.role.delete\": Method(\"deleteGuildRole\", [\"guild_id\", \"role_id\"]),\n  \"login.get\": Method(\"getLogin\", []),\n  \"user.get\": Method(\"getUser\", [\"user_id\"]),\n  \"user.channel.create\": Method(\"createDirectChannel\", [\"user_id\", \"guild_id\"]),\n  \"friend.list\": Method(\"getFriendList\", [\"next\"]),\n  \"friend.delete\": Method(\"deleteFriend\", [\"user_id\"]),\n  \"friend.approve\": Method(\"handleFriendRequest\", [\"message_id\", \"approve\", \"comment\"]),\n  \"guild.approve\": Method(\"handleGuildRequest\", [\"message_id\", \"approve\", \"comment\"]),\n  \"guild.member.approve\": Method(\"handleGuildMemberRequest\", [\"message_id\", \"approve\", \"comment\"])\n};\nvar Channel;\n((Channel2) => {\n  let Type;\n  ((Type2) => {\n    Type2[Type2[\"TEXT\"] = 0] = \"TEXT\";\n    Type2[Type2[\"DIRECT\"] = 1] = \"DIRECT\";\n    Type2[Type2[\"CATEGORY\"] = 2] = \"CATEGORY\";\n    Type2[Type2[\"VOICE\"] = 3] = \"VOICE\";\n  })(Type = Channel2.Type || (Channel2.Type = {}));\n})(Channel || (Channel = {}));\nvar Status = /* @__PURE__ */ ((Status2) => {\n  Status2[Status2[\"OFFLINE\"] = 0] = \"OFFLINE\";\n  Status2[Status2[\"ONLINE\"] = 1] = \"ONLINE\";\n  Status2[Status2[\"CONNECT\"] = 2] = \"CONNECT\";\n  Status2[Status2[\"DISCONNECT\"] = 3] = \"DISCONNECT\";\n  Status2[Status2[\"RECONNECT\"] = 4] = \"RECONNECT\";\n  return Status2;\n})(Status || {});\nvar Opcode = /* @__PURE__ */ ((Opcode2) => {\n  Opcode2[Opcode2[\"EVENT\"] = 0] = \"EVENT\";\n  Opcode2[Opcode2[\"PING\"] = 1] = \"PING\";\n  Opcode2[Opcode2[\"PONG\"] = 2] = \"PONG\";\n  Opcode2[Opcode2[\"IDENTIFY\"] = 3] = \"IDENTIFY\";\n  Opcode2[Opcode2[\"READY\"] = 4] = \"READY\";\n  Opcode2[Opcode2[\"META\"] = 5] = \"META\";\n  return Opcode2;\n})(Opcode || {});\nvar WebSocket;\n((WebSocket2) => {\n  WebSocket2.CONNECTING = 0;\n  WebSocket2.OPEN = 1;\n  WebSocket2.CLOSING = 2;\n  WebSocket2.CLOSED = 3;\n})(WebSocket || (WebSocket = {}));\nexport {\n  Channel,\n  Methods,\n  Opcode,\n  Status,\n  WebSocket\n};\n", "const peq = new Uint32Array(0x10000);\nconst myers_32 = (a, b) => {\n    const n = a.length;\n    const m = b.length;\n    const lst = 1 << (n - 1);\n    let pv = -1;\n    let mv = 0;\n    let sc = n;\n    let i = n;\n    while (i--) {\n        peq[a.charCodeAt(i)] |= 1 << i;\n    }\n    for (i = 0; i < m; i++) {\n        let eq = peq[b.charCodeAt(i)];\n        const xv = eq | mv;\n        eq |= ((eq & pv) + pv) ^ pv;\n        mv |= ~(eq | pv);\n        pv &= eq;\n        if (mv & lst) {\n            sc++;\n        }\n        if (pv & lst) {\n            sc--;\n        }\n        mv = (mv << 1) | 1;\n        pv = (pv << 1) | ~(xv | mv);\n        mv &= xv;\n    }\n    i = n;\n    while (i--) {\n        peq[a.charCodeAt(i)] = 0;\n    }\n    return sc;\n};\nconst myers_x = (b, a) => {\n    const n = a.length;\n    const m = b.length;\n    const mhc = [];\n    const phc = [];\n    const hsize = Math.ceil(n / 32);\n    const vsize = Math.ceil(m / 32);\n    for (let i = 0; i < hsize; i++) {\n        phc[i] = -1;\n        mhc[i] = 0;\n    }\n    let j = 0;\n    for (; j < vsize - 1; j++) {\n        let mv = 0;\n        let pv = -1;\n        const start = j * 32;\n        const vlen = Math.min(32, m) + start;\n        for (let k = start; k < vlen; k++) {\n            peq[b.charCodeAt(k)] |= 1 << k;\n        }\n        for (let i = 0; i < n; i++) {\n            const eq = peq[a.charCodeAt(i)];\n            const pb = (phc[(i / 32) | 0] >>> i) & 1;\n            const mb = (mhc[(i / 32) | 0] >>> i) & 1;\n            const xv = eq | mv;\n            const xh = ((((eq | mb) & pv) + pv) ^ pv) | eq | mb;\n            let ph = mv | ~(xh | pv);\n            let mh = pv & xh;\n            if ((ph >>> 31) ^ pb) {\n                phc[(i / 32) | 0] ^= 1 << i;\n            }\n            if ((mh >>> 31) ^ mb) {\n                mhc[(i / 32) | 0] ^= 1 << i;\n            }\n            ph = (ph << 1) | pb;\n            mh = (mh << 1) | mb;\n            pv = mh | ~(xv | ph);\n            mv = ph & xv;\n        }\n        for (let k = start; k < vlen; k++) {\n            peq[b.charCodeAt(k)] = 0;\n        }\n    }\n    let mv = 0;\n    let pv = -1;\n    const start = j * 32;\n    const vlen = Math.min(32, m - start) + start;\n    for (let k = start; k < vlen; k++) {\n        peq[b.charCodeAt(k)] |= 1 << k;\n    }\n    let score = m;\n    for (let i = 0; i < n; i++) {\n        const eq = peq[a.charCodeAt(i)];\n        const pb = (phc[(i / 32) | 0] >>> i) & 1;\n        const mb = (mhc[(i / 32) | 0] >>> i) & 1;\n        const xv = eq | mv;\n        const xh = ((((eq | mb) & pv) + pv) ^ pv) | eq | mb;\n        let ph = mv | ~(xh | pv);\n        let mh = pv & xh;\n        score += (ph >>> (m - 1)) & 1;\n        score -= (mh >>> (m - 1)) & 1;\n        if ((ph >>> 31) ^ pb) {\n            phc[(i / 32) | 0] ^= 1 << i;\n        }\n        if ((mh >>> 31) ^ mb) {\n            mhc[(i / 32) | 0] ^= 1 << i;\n        }\n        ph = (ph << 1) | pb;\n        mh = (mh << 1) | mb;\n        pv = mh | ~(xv | ph);\n        mv = ph & xv;\n    }\n    for (let k = start; k < vlen; k++) {\n        peq[b.charCodeAt(k)] = 0;\n    }\n    return score;\n};\nconst distance = (a, b) => {\n    if (a.length < b.length) {\n        const tmp = b;\n        b = a;\n        a = tmp;\n    }\n    if (b.length === 0) {\n        return a.length;\n    }\n    if (a.length <= 32) {\n        return myers_32(a, b);\n    }\n    return myers_x(a, b);\n};\nconst closest = (str, arr) => {\n    let min_distance = Infinity;\n    let min_index = 0;\n    for (let i = 0; i < arr.length; i++) {\n        const dist = distance(str, arr[i]);\n        if (dist < min_distance) {\n            min_distance = dist;\n            min_index = i;\n        }\n    }\n    return arr[min_index];\n};\nexport { closest, distance };\n", "// make sure the signature is compatible with @intlify/core-base\nimport { deduplicate } from 'cosmokit'\n\nexport type LocaleTree = { [key in string]: LocaleTree }\n\nexport namespace LocaleTree {\n  export function from(locales: string[]) {\n    const tree: LocaleTree = {}\n    for (const locale of locales.filter(Boolean)) {\n      const tokens = locale.split('-')\n      let current = tree\n      for (let i = 0; i < tokens.length; i++) {\n        const locale = tokens.slice(0, i + 1).join('-')\n        current = current[locale] = current[locale] || {}\n      }\n    }\n    return tree\n  }\n}\n\ntype LocaleEntry = readonly [string, LocaleEntry[]]\n\nfunction toLocaleEntry(key: string, tree: LocaleTree): LocaleEntry {\n  return [key, [[key, []], ...Object.entries(tree).map(([key, value]) => toLocaleEntry(key, value))]]\n}\n\nfunction* traverse([key, children]: LocaleEntry, ignored: LocaleEntry[]): Generator<string> {\n  if (!children.length) {\n    return yield key\n  }\n  for (const child of children) {\n    if (ignored.includes(child)) continue\n    yield* traverse(child, ignored)\n  }\n}\n\nexport function fallback(tree: LocaleTree, locales: string[]): string[] {\n  const root = toLocaleEntry('', tree)\n  const ignored: LocaleEntry[] = []\n  for (const locale of deduplicate(locales).filter(Boolean).reverse()) {\n    let prefix = '', children = root[1]\n    const tokens = locale ? locale.split('-') : []\n    for (let i = 0; i < tokens.length; i++) {\n      const token = tokens[i]!\n      const current = prefix + token\n      const index = children.findIndex(([key]) => key === current)\n      if (index < 0) break\n      const entry = children[index]\n      if (index > 0) {\n        children.splice(index, 1)\n        children.unshift(entry)\n      }\n      children = entry[1]\n      prefix = current + '-'\n      if (current === locale) {\n        ignored.unshift(entry)\n      }\n    }\n  }\n  ignored.push(root)\n  const results: string[] = []\n  for (const entry of ignored) {\n    results.push(...traverse(entry, ignored))\n  }\n  return results\n}\n", "// @ts-ignore\nimport { version } from '../package.json'\n\nexport * from '@koishijs/utils'\nexport * from 'minato'\nexport * from './context'\nexport * from './database'\nexport * from './filter'\nexport * from './i18n'\nexport * from './middleware'\nexport * from './schema'\nexport * from './session'\nexport * from './permission'\nexport * from './command'\n\nexport { Tables, Types } from './database'\n\nexport { version }\n", "import { defineProperty, Promisify, Time } from 'cosmokit'\nimport { HTTP, Schema } from '@satorijs/core'\nimport { GetEvents, Parameters, ReturnType, ThisType } from 'cordis'\nimport * as satori from '@satorijs/core'\nimport * as cordis from 'cordis'\nimport * as minato from 'minato'\nimport { Computed, FilterService } from './filter'\nimport { Commander } from './command'\nimport { I18n } from './i18n'\nimport SessionMixin, { Session } from './session'\nimport { Processor } from './middleware'\nimport { Permissions } from './permission'\nimport DatabaseMixin from './database'\nimport BotMixin from './bot'\nimport { SchemaService } from './schema'\n\nexport type EffectScope = cordis.EffectScope<Context>\nexport type ForkScope = cordis.ForkScope<Context>\nexport type MainScope = cordis.MainScope<Context>\n\nexport { Adapter, Bot, Element, h, HTTP, Logger, MessageEncoder, Messenger, Quester, Schema, segment, Universal, z } from '@satorijs/core'\nexport type { Component, Fragment, Render } from '@satorijs/core'\n\nexport { resolveConfig } from 'cordis'\n\nexport type { Disposable, ScopeStatus, Plugin } from 'cordis'\n\ndeclare module 'cordis' {\n  namespace Plugin {\n    interface Object {\n      filter?: boolean\n    }\n  }\n}\n\nexport interface EnvData {}\n\ntype OmitSubstring<S extends string, T extends string> = S extends `${infer L}${T}${infer R}` ? `${L}${R}` : never\ntype BeforeEventName = OmitSubstring<keyof Events & string, 'before-'>\ntype BeforeEventMap = { [E in keyof Events & string as OmitSubstring<E, 'before-'>]: Events[E] }\n\nexport interface Events<C extends Context = Context> extends cordis.Events<C> {}\n\nexport interface Context {\n  [Context.events]: Events<this>\n  [Context.session]: Session<never, never, this>\n  koishi: Koishi\n}\n\nexport class Context extends satori.Context {\n  static shadow = Symbol.for('session.shadow')\n\n  constructor(config: Context.Config = {}) {\n    super(config)\n    this.mixin('$processor', ['match', 'middleware'])\n    this.mixin('$filter', [\n      'any', 'never', 'union', 'intersect', 'exclude',\n      'user', 'self', 'guild', 'channel', 'platform', 'private',\n    ])\n    this.mixin('$commander', ['command'])\n    this.provide('$filter', new FilterService(this), true)\n    this.provide('schema', new SchemaService(this), true)\n    this.provide('$processor', new Processor(this), true)\n    this.provide('i18n', new I18n(this, this.config.i18n), true)\n    this.provide('permissions', new Permissions(this), true)\n    this.provide('model', undefined, true)\n    this.provide('http', undefined, true)\n    this.provide('$commander', new Commander(this, this.config), true)\n    this.plugin(minato.Database)\n    this.plugin(Koishi, this.config)\n  }\n\n  /** @deprecated use `ctx.root` instead */\n  get app() {\n    return this.root\n  }\n\n  /** @deprecated use `koishi.config` instead */\n  get options() {\n    return this.root.config\n  }\n\n  /* eslint-disable max-len */\n  /** @deprecated */\n  waterfall<K extends keyof GetEvents<this>>(name: K, ...args: Parameters<GetEvents<this>[K]>): Promisify<ReturnType<GetEvents<this>[K]>>\n  waterfall<K extends keyof GetEvents<this>>(thisArg: ThisType<GetEvents<this>[K]>, name: K, ...args: Parameters<GetEvents<this>[K]>): Promisify<ReturnType<GetEvents<this>[K]>>\n  async waterfall(...args: [any, ...any[]]) {\n    const thisArg = typeof args[0] === 'object' || typeof args[0] === 'function' ? args.shift() : null\n    const name = args.shift()\n    for (const hook of this.lifecycle.filterHooks(this.lifecycle._hooks[name] || [], thisArg)) {\n      const result = await hook.callback.apply(thisArg, args)\n      args[0] = result\n    }\n    return args[0]\n  }\n\n  /** @deprecated */\n  chain<K extends keyof GetEvents<this>>(name: K, ...args: Parameters<GetEvents<this>[K]>): ReturnType<GetEvents<this>[K]>\n  chain<K extends keyof GetEvents<this>>(thisArg: ThisType<GetEvents<this>[K]>, name: K, ...args: Parameters<GetEvents<this>[K]>): ReturnType<GetEvents<this>[K]>\n  chain(...args: [any, ...any[]]) {\n    const thisArg = typeof args[0] === 'object' || typeof args[0] === 'function' ? args.shift() : null\n    const name = args.shift()\n    for (const hook of this.lifecycle.filterHooks(this.lifecycle._hooks[name] || [], thisArg)) {\n      const result = hook.callback.apply(thisArg, args)\n      args[0] = result\n    }\n    return args[0]\n  }\n  /* eslint-enable max-len */\n\n  before<K extends BeforeEventName>(name: K, listener: BeforeEventMap[K], append = false) {\n    const seg = (name as string).split('/')\n    seg[seg.length - 1] = 'before-' + seg[seg.length - 1]\n    return this.on(seg.join('/') as any, listener, !append)\n  }\n}\n\nexport default class Koishi extends cordis.Service<Context.Config, Context> {\n  bot = new BotMixin(this.ctx)\n  database = new DatabaseMixin(this.ctx)\n  session = new SessionMixin(this.ctx)\n\n  constructor(ctx: Context, public config: Context.Config) {\n    super(ctx, 'koishi', true)\n  }\n}\n\nsatori.Session.prototype[Context.filter] = function (this: Session, ctx: Context) {\n  return ctx.filter(this)\n}\n\nexport namespace Context {\n  export interface Config extends Config.Basic, Config.Advanced {\n    i18n?: I18n.Config\n    delay?: Config.Delay\n    request?: HTTP.Config\n  }\n\n  export const Config = Schema.intersect([\n    Schema.object({}),\n  ]) as Config.Static\n\n  export namespace Config {\n    export interface Basic extends Commander.Config {\n      nickname?: string | string[]\n      autoAssign?: Computed<boolean>\n      autoAuthorize?: Computed<number>\n      minSimilarity?: number\n    }\n\n    export interface Delay {\n      character?: number\n      message?: number\n      cancel?: number\n      broadcast?: number\n      prompt?: number\n    }\n\n    export interface Advanced {\n      maxListeners?: number\n    }\n\n    export interface Static extends Schema<Config> {\n      Basic: Schema<Basic>\n      I18n: Schema<I18n>\n      Delay: Schema<Delay>\n      Advanced: Schema<Advanced>\n    }\n  }\n}\n\ndefineProperty(Context.Config, 'Basic', Schema.object({\n  prefix: Schema.array(Schema.string().default('')).default(['']).role('table').computed().description('指令前缀字符构成的数组。将被用于指令的匹配。'),\n  prefixMode: Schema.union([\n    Schema.const('auto').description('默认：当存在称呼时允许无前缀触发。'),\n    Schema.const('strict').description('严格：只有在指令前缀匹配时才允许触发。'),\n  ]).experimental().role('radio').default('auto').description('指令前缀匹配模式。'),\n  nickname: Schema.array(String).role('table').computed().description('机器人昵称构成的数组。将被用于指令的匹配。'),\n  autoAssign: Schema.boolean().default(true).computed().description('当获取不到频道数据时，是否使用接受者作为受理人。'),\n  autoAuthorize: Schema.natural().default(1).computed().description('当获取不到用户数据时默认使用的权限等级。'),\n  minSimilarity: Schema.percent().default(1).description('用于模糊匹配的相似系数，应该是一个 0 到 1 之间的数值。数值越高，模糊匹配越严格。设置为 1 可以完全禁用模糊匹配。'),\n}).description('基础设置'))\n\ndefineProperty(Context.Config, 'I18n', I18n.Config)\n\ndefineProperty(Context.Config, 'Delay', Schema.object({\n  character: Schema.natural().role('ms').default(0).description('调用 `session.sendQueued()` 时消息间发送的最小延迟，按前一条消息的字数计算。'),\n  message: Schema.natural().role('ms').default(0.1 * Time.second).description('调用 `session.sendQueued()` 时消息间发送的最小延迟，按固定值计算。'),\n  cancel: Schema.natural().role('ms').default(0).description('调用 `session.cancelQueued()` 时默认的延迟。'),\n  broadcast: Schema.natural().role('ms').default(0.5 * Time.second).description('调用 `bot.broadcast()` 时默认的延迟。'),\n  prompt: Schema.natural().role('ms').default(Time.minute).description('调用 `session.prompt()` 时默认的等待时间。'),\n}))\n\ndefineProperty(Context.Config, 'Advanced', Schema.object({\n  maxListeners: Schema.natural().default(64).description('每种监听器的最大数量。如果超过这个数量，Koishi 会认定为发生了内存泄漏，将产生一个警告。'),\n}).description('高级设置'))\n\nContext.Config.list.push(Context.Config.Basic)\nContext.Config.list.push(Schema.object({\n  i18n: I18n.Config,\n}))\nContext.Config.list.push(Schema.object({\n  delay: Context.Config.Delay,\n}).description('延迟设置'))\nContext.Config.list.push(Context.Config.Advanced)\nContext.Config.list.push(Schema.object({\n  request: HTTP.Config,\n}))\n\nexport abstract class Service<T = any, C extends Context = Context> extends satori.Service<T, C> {\n  [satori.Service.setup]() {\n    this.ctx = new Context() as C\n  }\n}\n\n// for backward compatibility\nexport { Context as App }\n\nexport function defineConfig(config: Context.Config) {\n  return config\n}\n", "import { defineProperty } from 'cosmokit'\nimport { Eval } from 'minato'\nimport { Channel, User } from './database'\nimport { Context } from './context'\nimport { Session } from './session'\n\nexport namespace Computed {\n  export interface Options {\n    userFields?: User.Field[]\n    channelFields?: Channel.Field[]\n  }\n}\n\nexport type Computed<T> = T | Eval.Expr<T> | ((session: Session) => T)\nexport type Filter = (session: Session) => boolean\n\ndeclare module './context' {\n  interface Context {\n    $filter: FilterService\n    filter: Filter\n    any(): this\n    never(): this\n    union(arg: Filter | this): this\n    intersect(arg: Filter | this): this\n    exclude(arg: Filter | this): this\n    user(...values: string[]): this\n    self(...values: string[]): this\n    guild(...values: string[]): this\n    channel(...values: string[]): this\n    platform(...values: string[]): this\n    private(...values: string[]): this\n  }\n}\n\nfunction property<K extends keyof Session>(ctx: Context, key: K, ...values: Session[K][]) {\n  return ctx.intersect((session: Session) => {\n    return values.length ? values.includes(session[key]) : !!session[key]\n  })\n}\n\nexport class FilterService {\n  constructor(private ctx: Context) {\n    defineProperty(this, Context.current, ctx)\n\n    ctx.filter = () => true\n    ctx.on('internal/runtime', (runtime) => {\n      if (!runtime.uid) return\n      runtime.ctx.filter = (session) => {\n        return runtime.children.some(p => p.ctx.filter(session))\n      }\n    })\n  }\n\n  any() {\n    return this.ctx.extend({ filter: () => true })\n  }\n\n  never() {\n    return this.ctx.extend({ filter: () => false })\n  }\n\n  union(arg: Filter | Context) {\n    const filter = typeof arg === 'function' ? arg : arg.filter\n    return this.ctx.extend({ filter: s => this.ctx.filter(s) || filter(s) })\n  }\n\n  intersect(arg: Filter | Context) {\n    const filter = typeof arg === 'function' ? arg : arg.filter\n    return this.ctx.extend({ filter: s => this.ctx.filter(s) && filter(s) })\n  }\n\n  exclude(arg: Filter | Context) {\n    const filter = typeof arg === 'function' ? arg : arg.filter\n    return this.ctx.extend({ filter: s => this.ctx.filter(s) && !filter(s) })\n  }\n\n  user(...values: string[]) {\n    return property(this.ctx, 'userId', ...values)\n  }\n\n  self(...values: string[]) {\n    return property(this.ctx, 'selfId', ...values)\n  }\n\n  guild(...values: string[]) {\n    return property(this.ctx, 'guildId', ...values)\n  }\n\n  channel(...values: string[]) {\n    return property(this.ctx, 'channelId', ...values)\n  }\n\n  platform(...values: string[]) {\n    return property(this.ctx, 'platform', ...values)\n  }\n\n  private() {\n    return this.ctx.intersect((session) => session.isDirect)\n  }\n}\n", "import { Awaitable, defineProperty, Time } from 'cosmokit'\nimport { Bot, Fragment, h, Schema, Universal } from '@satorijs/core'\nimport { Command } from './command'\nimport { Argv } from './parser'\nimport validate from './validate'\nimport { Channel, User } from '../database'\nimport { Computed } from '../filter'\nimport { Context } from '../context'\nimport { Session } from '../session'\n\nexport * from './command'\nexport * from './parser'\nexport * from './validate'\n\ndeclare module '../context' {\n  interface Context {\n    $commander: Commander\n    command<D extends string>(def: D, config?: Command.Config): Command<never, never, Argv.ArgumentType<D>>\n    command<D extends string>(def: D, desc: string, config?: Command.Config): Command<never, never, Argv.ArgumentType<D>>\n  }\n\n  interface Events {\n    'before-parse'(content: string, session: Session): Argv\n    'command-added'(command: Command): void\n    'command-updated'(command: Command): void\n    'command-removed'(command: Command): void\n    'command-error'(argv: Argv, error: any): void\n    'command/before-execute'(argv: Argv): Awaitable<void | Fragment>\n    'command/before-attach-channel'(argv: Argv, fields: Set<Channel.Field>): void\n    'command/before-attach-user'(argv: Argv, fields: Set<User.Field>): void\n  }\n}\n\n// https://github.com/microsoft/TypeScript/issues/17002\n// it never got fixed so we have to do this\nconst isArray = Array.isArray as (arg: any) => arg is readonly any[]\n\nconst BRACKET_REGEXP = /<[^>]+>|\\[[^\\]]+\\]/g\n\ninterface DeclarationList extends Array<Argv.Declaration> {\n  stripped: string\n}\n\nexport namespace Commander {\n  export interface Config {\n    prefix?: Computed<string | string[]>\n    prefixMode?: 'auto' | 'strict'\n  }\n}\n\nexport class Commander {\n  _commandList: Command[] = []\n\n  constructor(private ctx: Context, private config: Commander.Config = {}) {\n    defineProperty(this, Context.current, ctx)\n    ctx.plugin(validate)\n\n    ctx.before('parse', (content, session) => {\n      // we need to make sure that the user truly has the intension to call a command\n      const { isDirect, stripped: { prefix, appel } } = session\n      if (!isDirect && typeof prefix !== 'string' && !appel) return\n      return Argv.parse(content)\n    })\n\n    ctx.on('interaction/command', (session) => {\n      if (session.event?.argv) {\n        const { name, options, arguments: args } = session.event.argv\n        session.execute({ name, args, options })\n      } else {\n        session.stripped.hasAt = true\n        session.stripped.appel = true\n        session.stripped.atSelf = true\n        session.stripped.prefix = ''\n        defineProperty(session, 'argv', ctx.bail('before-parse', session.content, session))\n        if (!session.argv) {\n          ctx.logger('command').warn('failed to parse interaction command:', session.content)\n          return\n        }\n        session.argv.root = true\n        session.argv.session = session\n        session.execute(session.argv)\n      }\n    })\n\n    ctx.before('attach', (session) => {\n      const { hasAt, appel } = session.stripped\n      if (!appel && hasAt) return\n\n      // strip prefix\n      let content = session.stripped.content\n      for (const prefix of this._resolvePrefixes(session)) {\n        if (!content.startsWith(prefix)) continue\n        session.stripped.prefix = prefix\n        content = content.slice(prefix.length)\n        break\n      }\n      defineProperty(session, 'argv', ctx.bail('before-parse', content, session))\n      if (!session.argv) return\n      session.argv.root = true\n      session.argv.session = session\n    })\n\n    ctx.middleware((session, next) => {\n      // execute command\n      if (!this.resolveCommand(session.argv)) return next()\n      return session.execute(session.argv, next)\n    })\n\n    ctx.middleware((session, next) => {\n      // use `!prefix` instead of `prefix === null` to prevent from blocking other middlewares\n      // we need to make sure that the user truly has the intension to call a command\n      const { argv, quote, isDirect, stripped: { prefix, appel } } = session\n      if (argv?.command || !isDirect && !prefix && !appel) return next()\n      const content = session.stripped.content.slice((prefix ?? '').length)\n      const actual = content.split(/\\s/, 1)[0].toLowerCase()\n      if (!actual) return next()\n\n      return next(async (next) => {\n        const cache = new Map<string, Promise<boolean>>()\n        const name = await session.suggest({\n          actual,\n          expect: this.available(session),\n          suffix: session.text('internal.suggest-command'),\n          filter: (name) => {\n            name = this.resolve(name)!.name\n            return ctx.permissions.test(`command:${name}`, session, cache)\n          },\n        })\n        if (!name) return next()\n        const message = name + content.slice(actual.length) + (quote?.content ? ' ' + quote.content : '')\n        return session.execute(message, next)\n      })\n    })\n\n    ctx.schema.extend('command', Command.Config, 1000)\n    ctx.schema.extend('command-option', Schema.object({\n      permissions: Schema.array(String).role('perms').default(['authority:0']).description('权限继承。'),\n      dependencies: Schema.array(String).role('perms').description('权限依赖。'),\n    }), 1000)\n\n    ctx.on('ready', () => {\n      const bots = ctx.bots.filter(v => v.status === Universal.Status.ONLINE && v.updateCommands)\n      bots.forEach(bot => this.updateCommands(bot))\n    })\n\n    ctx.on('bot-status-updated', async (bot) => {\n      if (bot.status !== Universal.Status.ONLINE || !bot.updateCommands) return\n      this.updateCommands(bot)\n    })\n\n    this.domain('el', source => h.parse(source), { greedy: true })\n    this.domain('elements', source => h.parse(source), { greedy: true })\n    this.domain('string', source => h.unescape(source))\n    this.domain('text', source => h.unescape(source), { greedy: true })\n    this.domain('rawtext', source => h('', h.parse(source)).toString(true), { greedy: true })\n    this.domain('boolean', () => true)\n\n    this.domain('number', (source, session) => {\n      // support `,` and `_` as delimiters\n      // https://github.com/koishijs/koishi/issues/1386\n      const value = +source.replace(/[,_]/g, '')\n      if (Number.isFinite(value)) return value\n      throw new Error('internal.invalid-number')\n    }, { numeric: true })\n\n    this.domain('integer', (source, session) => {\n      const value = +source.replace(/[,_]/g, '')\n      if (value * 0 === 0 && Math.floor(value) === value) return value\n      throw new Error('internal.invalid-integer')\n    }, { numeric: true })\n\n    this.domain('posint', (source, session) => {\n      const value = +source.replace(/[,_]/g, '')\n      if (value * 0 === 0 && Math.floor(value) === value && value > 0) return value\n      throw new Error('internal.invalid-posint')\n    }, { numeric: true })\n\n    this.domain('natural', (source, session) => {\n      const value = +source.replace(/[,_]/g, '')\n      if (value * 0 === 0 && Math.floor(value) === value && value >= 0) return value\n      throw new Error('internal.invalid-natural')\n    }, { numeric: true })\n\n    this.domain('bigint', (source, session) => {\n      try {\n        return BigInt(source.replace(/[,_]/g, ''))\n      } catch {\n        throw new Error('internal.invalid-integer')\n      }\n    }, { numeric: true })\n\n    this.domain('date', (source, session) => {\n      const timestamp = Time.parseDate(source)\n      if (+timestamp) return timestamp\n      throw new Error('internal.invalid-date')\n    })\n\n    this.domain('user', (source, session) => {\n      if (source.startsWith('@')) {\n        source = source.slice(1)\n        if (source.includes(':')) return source\n        return `${session.platform}:${source}`\n      }\n      const code = h.from(source)\n      if (code && code.type === 'at') {\n        return `${session.platform}:${code.attrs.id}`\n      }\n      throw new Error('internal.invalid-user')\n    })\n\n    this.domain('channel', (source, session) => {\n      if (source.startsWith('#')) {\n        source = source.slice(1)\n        if (source.includes(':')) return source\n        return `${session.platform}:${source}`\n      }\n      const code = h.from(source)\n      if (code && code.type === 'sharp') {\n        return `${session.platform}:${code.attrs.id}`\n      }\n      throw new Error('internal.invalid-channel')\n    })\n\n    this.defineElementDomain('image', 'image', 'img')\n    this.defineElementDomain('img', 'image', 'img')\n    this.defineElementDomain('audio')\n    this.defineElementDomain('video')\n    this.defineElementDomain('file')\n  }\n\n  private defineElementDomain(name: keyof Argv.Domain, key = name, type = name) {\n    this.domain(name, (source, session) => {\n      const code = h.from(source, { type })\n      if (code && code.type === type) {\n        return code.attrs\n      }\n      throw new Error(`internal.invalid-${key}`)\n    })\n  }\n\n  get(name: string, session?: Session) {\n    return this._commandList.find((cmd) => {\n      const alias = cmd._aliases[name]\n      return alias && (session?.resolve(alias.filter) ?? true)\n    })\n  }\n\n  updateCommands(bot: Bot) {\n    return bot.updateCommands(this._commandList\n      .filter(cmd => !cmd.name.includes('.') && cmd.config.slash)\n      .map(cmd => cmd.toJSON()))\n  }\n\n  private _resolvePrefixes(session: Session) {\n    const value = session.resolve(this.config.prefix)\n    const result = Array.isArray(value) ? value : [value || '']\n    return result.map(source => h.escape(source)).sort().reverse()\n  }\n\n  available(session: Session) {\n    return this._commandList\n      .filter(cmd => cmd.match(session))\n      .flatMap(cmd => Object.keys(cmd._aliases))\n  }\n\n  resolve(key: string) {\n    return this._resolve(key).command\n  }\n\n  _resolve(key: string) {\n    if (!key) return {}\n    const segments = Command.normalize(key).split('.')\n    let i = 1, name = segments[0], command: Command\n    while ((command = this.get(name)) && i < segments.length) {\n      name = command.name + '.' + segments[i++]\n    }\n    return { command, name }\n  }\n\n  inferCommand(argv: Argv) {\n    if (!argv) return\n    if (argv.command) return argv.command\n    if (argv.name) return argv.command = this.resolve(argv.name)\n\n    const { stripped, isDirect, quote } = argv.session\n    // guild message should have prefix or appel to be interpreted as a command call\n    const isStrict = this.config.prefixMode === 'strict' || !isDirect && !stripped.appel\n    if (argv.root && stripped.prefix === null && isStrict) return\n    const segments: string[] = []\n    while (argv.tokens.length) {\n      const { content } = argv.tokens[0]\n      segments.push(content)\n      const { name, command } = this._resolve(segments.join('.'))\n      if (!command) break\n      argv.tokens.shift()\n      argv.command = command\n      argv.args = command._aliases[name].args\n      argv.options = command._aliases[name].options\n      if (command._arguments.length) break\n    }\n    // https://github.com/koishijs/koishi/issues/1432\n    // https://github.com/koishijs/koishi/issues/1441\n    if (argv.root && argv.command?.config.captureQuote !== false && quote?.content) {\n      argv.tokens.push({\n        content: quote.content,\n        quoted: true,\n        inters: [],\n        terminator: '',\n      })\n    }\n    return argv.command\n  }\n\n  resolveCommand(argv: Argv) {\n    if (!this.inferCommand(argv)) return\n    if (argv.tokens?.every(token => !token.inters.length)) {\n      const { options, args, error } = argv.command.parse(argv)\n      argv.options = options\n      argv.args = args\n      argv.error = error\n    }\n    return argv.command\n  }\n\n  command(def: string, ...args: [Command.Config?] | [string, Command.Config?]) {\n    const desc = typeof args[0] === 'string' ? args.shift() as string : ''\n    const config = args[0] as Command.Config\n    const path = Command.normalize(def.split(' ', 1)[0])\n    const decl = def.slice(path.length)\n    const segments = path.split(/(?=[./])/g)\n\n    /** parent command in the chain */\n    let parent: Command\n    /** the first created command */\n    let root: Command\n    const created: Command[] = []\n    segments.forEach((segment, index) => {\n      const code = segment.charCodeAt(0)\n      const name = code === 46 ? parent.name + segment : code === 47 ? segment.slice(1) : segment\n      let command = this.get(name)\n      if (command) {\n        if (parent) {\n          if (command === parent) {\n            throw new Error(`cannot set a command (${command.name}) as its own subcommand`)\n          }\n          if (command.parent) {\n            if (command.parent !== parent) {\n              throw new Error(`cannot create subcommand ${path}: ${command.parent.name}/${command.name} already exists`)\n            }\n          } else {\n            command.parent = parent\n          }\n        }\n        return parent = command\n      }\n      const isLast = index === segments.length - 1\n      command = new Command(name, isLast ? decl : '', this.ctx, isLast ? config : {})\n      command._disposables.push(this.ctx.i18n.define('', {\n        [`commands.${command.name}.$`]: '',\n        [`commands.${command.name}.description`]: isLast ? desc : '',\n      }))\n      created.push(command)\n      root ||= command\n      if (parent) {\n        command.parent = parent\n      }\n      parent = command\n    })\n\n    Object.assign(parent.config, config)\n    // Make sure `command.config` is set before emitting any events\n    created.forEach(command => this.ctx.emit('command-added', command))\n    parent[Context.current] = this.ctx\n    if (root) this.ctx.collect(`command <${root.name}>`, () => root.dispose())\n    return parent\n  }\n\n  domain<K extends keyof Argv.Domain>(name: K): Argv.DomainConfig<Argv.Domain[K]>\n  domain<K extends keyof Argv.Domain>(name: K, transform: Argv.Transform<Argv.Domain[K]>, options?: Argv.DomainConfig<Argv.Domain[K]>): () => void\n  domain<K extends keyof Argv.Domain>(name: K, transform?: Argv.Transform<Argv.Domain[K]>, options?: Argv.DomainConfig<Argv.Domain[K]>) {\n    const service = 'domain:' + name\n    if (!transform) return this.ctx.get(service)\n    return this.ctx.set(service, { transform, ...options })\n  }\n\n  resolveDomain(type: Argv.Type) {\n    if (typeof type === 'function') {\n      return { transform: type }\n    } else if (type instanceof RegExp) {\n      const transform = (source: string) => {\n        if (type.test(source)) return source\n        throw new Error()\n      }\n      return { transform }\n    } else if (isArray(type)) {\n      const transform = (source: string) => {\n        if (type.includes(source)) return source\n        throw new Error()\n      }\n      return { transform }\n    } else if (typeof type === 'object') {\n      return type ?? {}\n    }\n    return this.ctx.get(`domain:${type}`) ?? {}\n  }\n\n  parseValue(source: string, kind: string, argv: Argv, decl: Argv.Declaration = {}) {\n    const { name, type = 'string' } = decl\n\n    // apply domain callback\n    const domain = this.resolveDomain(type)\n    try {\n      return domain.transform(source, argv.session)\n    } catch (err) {\n      if (!argv.session) {\n        argv.error = `internal.invalid-${kind}`\n      } else {\n        const message = argv.session.text(err['message'] || 'internal.check-syntax')\n        argv.error = argv.session.text(`internal.invalid-${kind}`, [name, message])\n      }\n    }\n  }\n\n  parseDecl(source: string) {\n    let cap: RegExpExecArray\n    const result = [] as DeclarationList\n    // eslint-disable-next-line no-cond-assign\n    while (cap = BRACKET_REGEXP.exec(source)) {\n      let rawName = cap[0].slice(1, -1)\n      let variadic = false\n      if (rawName.startsWith('...')) {\n        rawName = rawName.slice(3)\n        variadic = true\n      }\n      const [name, rawType] = rawName.split(':')\n      const type = rawType ? rawType.trim() as Argv.DomainType : undefined\n      result.push({\n        name,\n        variadic,\n        type,\n        required: cap[0][0] === '<',\n      })\n    }\n    result.stripped = source.replace(/:[\\w-]+(?=[>\\]])/g, str => {\n      const domain = this.ctx.get(`domain:${str.slice(1)}`)\n      return domain?.greedy ? '...' : ''\n    }).trimEnd()\n    return result\n  }\n}\n", "import { Awaitable, camelize, Dict, isNullable, remove } from 'cosmokit'\nimport { coerce } from '@koishijs/utils'\nimport { Fragment, Logger, Schema, Universal } from '@satorijs/core'\nimport { Argv } from './parser'\nimport { Next, SessionError } from '../middleware'\nimport { Channel, User } from '../database'\nimport { FieldCollector, Session } from '../session'\nimport { Permissions } from '../permission'\nimport { Context } from '../context'\nimport { Computed } from '../filter'\n\nconst logger = new Logger('command')\n\nexport type Extend<O extends {}, K extends string, T> = {\n  [P in K | keyof O]?: (P extends keyof O ? O[P] : unknown) & (P extends K ? T : unknown)\n}\n\nexport namespace Command {\n  export interface Alias {\n    options?: Dict\n    args?: string[]\n    filter?: Computed<boolean>\n  }\n\n  export interface Shortcut {\n    i18n?: boolean\n    name?: string | RegExp\n    command?: Command\n    prefix?: boolean\n    fuzzy?: boolean\n    args?: string[]\n    options?: Dict\n  }\n\n  export type Action<U extends User.Field = never, G extends Channel.Field = never, A extends any[] = any[], O extends {} = {}>\n    = (argv: Argv<U, G, A, O>, ...args: A) => Awaitable<void | Fragment>\n\n  export type Usage<U extends User.Field = never, G extends Channel.Field = never>\n    = string | ((session: Session<U, G>) => Awaitable<string>)\n}\n\nexport class Command<\n  U extends User.Field = never,\n  G extends Channel.Field = never,\n  A extends any[] = any[],\n  O extends {} = {},\n> extends Argv.CommandBase<Command.Config> {\n  children: Command[] = []\n\n  _parent: Command = null\n  _aliases: Dict<Command.Alias> = Object.create(null)\n  _examples: string[] = []\n  _usage?: Command.Usage\n\n  private _userFields: FieldCollector<'user'>[] = [['locales']]\n  private _channelFields: FieldCollector<'channel'>[] = [['locales']]\n  private _actions: Command.Action[] = []\n  private _checkers: Command.Action[] = [async (argv) => {\n    return this.ctx.serial(argv.session, 'command/before-execute', argv)\n  }]\n\n  constructor(name: string, decl: string, ctx: Context, config: Command.Config) {\n    super(name, decl, ctx, {\n      showWarning: true,\n      handleError: true,\n      slash: true,\n      ...config,\n    })\n    this.config.permissions ??= [`authority:${config?.authority ?? 1}`]\n    this._registerAlias(name)\n    ctx.$commander._commandList.push(this)\n  }\n\n  get caller(): Context {\n    return this[Context.current] || this.ctx\n  }\n\n  get displayName() {\n    return Object.keys(this._aliases)[0]\n  }\n\n  set displayName(name) {\n    this._registerAlias(name, true)\n  }\n\n  get parent() {\n    return this._parent\n  }\n\n  set parent(parent: Command) {\n    if (this._parent === parent) return\n    if (this._parent) {\n      remove(this._parent.children, this)\n    }\n    this._parent = parent\n    if (parent) {\n      parent.children.push(this)\n    }\n  }\n\n  static normalize(name: string) {\n    return name.toLowerCase().replace(/_/g, '-')\n  }\n\n  private _registerAlias(name: string, prepend = false, options: Command.Alias = {}) {\n    name = Command.normalize(name)\n    if (name.startsWith('.')) name = this.parent.name + name\n\n    // check global\n    const previous = this.ctx.$commander.get(name)\n    if (previous && previous !== this) {\n      throw new Error(`duplicate command names: \"${name}\"`)\n    }\n\n    // add to list\n    const existing = this._aliases[name]\n    if (existing) {\n      if (prepend) {\n        this._aliases = { [name]: existing, ...this._aliases }\n      }\n    } else if (prepend) {\n      this._aliases = { [name]: options, ...this._aliases }\n    } else {\n      this._aliases[name] = options\n    }\n  }\n\n  [Symbol.for('nodejs.util.inspect.custom')]() {\n    return `Command <${this.name}>`\n  }\n\n  userFields<T extends User.Field>(fields: FieldCollector<'user', T, A, O>): Command<U | T, G, A, O> {\n    this._userFields.push(fields)\n    return this as any\n  }\n\n  channelFields<T extends Channel.Field>(fields: FieldCollector<'channel', T, A, O>): Command<U, G | T, A, O> {\n    this._channelFields.push(fields)\n    return this as any\n  }\n\n  alias(...names: string[]): this\n  alias(name: string, options: Command.Alias): this\n  alias(...args: any[]) {\n    if (typeof args[1] === 'object') {\n      this._registerAlias(args[0], false, args[1])\n    } else {\n      for (const name of args) {\n        this._registerAlias(name)\n      }\n    }\n    this.caller.emit('command-updated', this)\n    return this\n  }\n\n  _escape(source: any) {\n    if (typeof source !== 'string') return source\n    return source\n      .replace(/\\$\\$/g, '@@__PLACEHOLDER__@@')\n      .replace(/\\$\\d/g, s => `{${s[1]}}`)\n      .replace(/@@__PLACEHOLDER__@@/g, '$')\n  }\n\n  /** @deprecated please use `cmd.alias()` instead */\n  shortcut(pattern: string | RegExp, config?: Command.Shortcut & { i18n?: false }): this\n  /** @deprecated please use `cmd.alias()` instead */\n  shortcut(pattern: string, config: Command.Shortcut & { i18n: true }): this\n  shortcut(pattern: string | RegExp, config: Command.Shortcut = {}) {\n    let content = this.displayName\n    for (const key in config.options || {}) {\n      content += ` --${camelize(key)}`\n      const value = config.options[key]\n      if (value !== true) {\n        content += ' ' + this._escape(value)\n      }\n    }\n    for (const arg of config.args || []) {\n      content += ' ' + this._escape(arg)\n    }\n    if (config.fuzzy) content += ' {1}'\n    const regex = config.i18n\n    if (typeof pattern === 'string') {\n      if (config.i18n) {\n        pattern = `commands.${this.name}.shortcuts.${pattern}`\n      } else {\n        config.i18n = true\n        const key = `commands.${this.name}.shortcuts._${Math.random().toString(36).slice(2)}`\n        this.ctx.i18n.define('', key, pattern)\n        pattern = key\n      }\n    }\n    const dispose = this.ctx.match(pattern, `<execute>${content}</execute>`, {\n      appel: config.prefix,\n      fuzzy: config.fuzzy,\n      i18n: config.i18n as never,\n      regex,\n    })\n    this._disposables.push(dispose)\n    return this\n  }\n\n  subcommand<D extends string>(def: D, config?: Command.Config): Command<never, never, Argv.ArgumentType<D>>\n  subcommand<D extends string>(def: D, desc: string, config?: Command.Config): Command<never, never, Argv.ArgumentType<D>>\n  subcommand(def: string, ...args: any[]) {\n    def = this.name + (def.charCodeAt(0) === 46 ? '' : '/') + def\n    const desc = typeof args[0] === 'string' ? args.shift() as string : ''\n    const config = args[0] as Command.Config || {}\n    return this.ctx.command(def, desc, config)\n  }\n\n  usage(text: Command.Usage<U, G>) {\n    this._usage = text\n    return this\n  }\n\n  example(example: string) {\n    this._examples.push(example)\n    return this\n  }\n\n  option<K extends string>(name: K, desc: string, config: Argv.TypedOptionConfig<RegExp>): Command<U, G, A, Extend<O, K, string>>\n  option<K extends string, R>(name: K, desc: string, config: Argv.TypedOptionConfig<(source: string) => R>): Command<U, G, A, Extend<O, K, R>>\n  option<K extends string, R extends string>(name: K, desc: string, config: Argv.TypedOptionConfig<R[]>): Command<U, G, A, Extend<O, K, R>>\n  option<K extends string, D extends string>(name: K, desc: D, config?: Argv.OptionConfig): Command<U, G, A, Extend<O, K, Argv.OptionType<D>>>\n  option(name: string, ...args: [Argv.OptionConfig?] | [string, Argv.OptionConfig?]) {\n    let desc = ''\n    if (typeof args[0] === 'string') {\n      desc = args.shift() as string\n    }\n    const config = { ...args[0] as Argv.OptionConfig }\n    config.permissions ??= [`authority:${config.authority ?? 0}`]\n    this._createOption(name, desc, config)\n    this.caller.emit('command-updated', this)\n    this.caller.collect('option', () => this.removeOption(name))\n    return this\n  }\n\n  match(session: Session) {\n    return this.ctx.filter(session)\n  }\n\n  check(callback: Command.Action<U, G, A, O>, append = false) {\n    return this.before(callback, append)\n  }\n\n  before(callback: Command.Action<U, G, A, O>, append = false) {\n    if (append) {\n      this._checkers.push(callback)\n    } else {\n      this._checkers.unshift(callback)\n    }\n    this.caller.scope.disposables?.push(() => remove(this._checkers, callback))\n    return this\n  }\n\n  action(callback: Command.Action<U, G, A, O>, prepend = false) {\n    if (prepend) {\n      this._actions.unshift(callback)\n    } else {\n      this._actions.push(callback)\n    }\n    this.caller.scope.disposables?.push(() => remove(this._actions, callback))\n    return this\n  }\n\n  /** @deprecated */\n  use<T extends Command, R extends any[]>(callback: (command: this, ...args: R) => T, ...args: R): T {\n    return callback(this, ...args)\n  }\n\n  async execute(argv: Argv<U, G, A, O>, fallback: Next = Next.compose): Promise<Fragment> {\n    argv.command ??= this\n    argv.args ??= [] as any\n    argv.options ??= {} as any\n\n    const { args, options, error } = argv\n    if (error) return error\n    if (logger.level >= 3) logger.debug(argv.source ||= this.stringify(args, options))\n\n    // before hooks\n    for (const validator of this._checkers) {\n      const result = await validator.call(this, argv, ...args)\n      if (!isNullable(result)) return result\n    }\n\n    // FIXME empty actions will cause infinite loop\n    if (!this._actions.length) return ''\n\n    let index = 0\n    const queue: Next.Queue = this._actions.map(action => async () => {\n      return await action.call(this, argv, ...args)\n    })\n\n    queue.push(fallback)\n    const length = queue.length\n    argv.next = async (callback) => {\n      if (callback !== undefined) {\n        queue.push(next => Next.compose(callback, next))\n        if (queue.length > Next.MAX_DEPTH) {\n          throw new Error(`middleware stack exceeded ${Next.MAX_DEPTH}`)\n        }\n      }\n      return queue[index++]?.(argv.next)\n    }\n\n    try {\n      const result = await argv.next()\n      if (!isNullable(result)) return result\n    } catch (error) {\n      if (index === length) throw error\n      if (error instanceof SessionError) {\n        return argv.session.text(error.path, error.param)\n      }\n      const stack = coerce(error)\n      logger.warn(`${argv.source ||= this.stringify(args, options)}\\n${stack}`)\n      this.ctx.emit(argv.session, 'command-error', argv, error)\n      if (typeof this.config.handleError === 'function') {\n        const result = await this.config.handleError(error, argv)\n        if (!isNullable(result)) return result\n      } else if (this.config.handleError) {\n        return argv.session.text('internal.error-encountered')\n      }\n    }\n\n    return ''\n  }\n\n  dispose() {\n    this._disposables.splice(0).forEach(dispose => dispose())\n    this.ctx.emit('command-removed', this)\n    for (const cmd of this.children.slice()) {\n      cmd.dispose()\n    }\n    remove(this.ctx.$commander._commandList, this)\n    this.parent = null\n  }\n\n  toJSON(): Universal.Command {\n    return {\n      name: this.name,\n      description: this.ctx.i18n.get(`commands.${this.name}.description`),\n      arguments: this._arguments.map(arg => ({\n        name: arg.name,\n        type: toStringType(arg.type),\n        description: this.ctx.i18n.get(`commands.${this.name}.arguments.${arg.name}`),\n        required: arg.required,\n      })),\n      options: Object.entries(this._options).map(([name, option]) => ({\n        name,\n        type: toStringType(option.type),\n        description: this.ctx.i18n.get(`commands.${this.name}.options.${name}`),\n        required: option.required,\n      })),\n      children: this.children\n        .filter(child => child.name.includes('.'))\n        .map(child => child.toJSON()),\n    }\n  }\n}\n\nfunction toStringType(type: Argv.Type) {\n  return typeof type === 'string' ? type : 'string'\n}\n\nexport namespace Command {\n  export interface Config extends Argv.CommandBase.Config, Permissions.Config {\n    captureQuote?: boolean\n    /** disallow unknown options */\n    checkUnknown?: boolean\n    /** check argument count */\n    checkArgCount?: boolean\n    /** show command warnings */\n    showWarning?: boolean\n    /** handle error */\n    handleError?: boolean | ((error: Error, argv: Argv) => Awaitable<void | Fragment>)\n    /** enable slash command */\n    slash?: boolean\n  }\n\n  export const Config: Schema<Config> = Schema.object({\n    permissions: Schema.array(String).role('perms').default(['authority:1']).description('权限继承。'),\n    dependencies: Schema.array(String).role('perms').description('权限依赖。'),\n    slash: Schema.boolean().description('启用斜线指令功能。').default(true),\n    captureQuote: Schema.boolean().description('是否捕获引用文本。').default(true).hidden(),\n    checkUnknown: Schema.boolean().description('是否检查未知选项。').default(false).hidden(),\n    checkArgCount: Schema.boolean().description('是否检查参数数量。').default(false).hidden(),\n    showWarning: Schema.boolean().description('是否显示警告。').default(true).hidden(),\n    handleError: Schema.union([Schema.boolean(), Schema.function()]).description('是否处理错误。').default(true).hidden(),\n  })\n}\n", "import { camelCase, Dict, paramCase } from 'cosmokit'\nimport { escapeRegExp } from '@koishijs/utils'\nimport { h } from '@satorijs/core'\nimport { Command } from './command'\nimport { Channel, User } from '../database'\nimport { Next } from '../middleware'\nimport { Permissions } from '../permission'\nimport { Disposable } from 'cordis'\nimport { Session } from '../session'\nimport { Context } from '../context'\n\nexport interface Token {\n  rest?: string\n  content: string\n  quoted: boolean\n  terminator: string\n  inters: Argv[]\n}\n\nexport interface Argv<U extends User.Field = never, G extends Channel.Field = never, A extends any[] = any[], O extends {} = {}> {\n  args?: A\n  options?: O\n  error?: string\n  source?: string\n  initiator?: string\n  terminator?: string\n  session?: Session<U, G>\n  command?: Command<U, G, A, O>\n  rest?: string\n  pos?: number\n  root?: boolean\n  tokens?: Token[]\n  name?: string\n  next?: Next\n}\n\nconst leftQuotes = `\"'“‘`\nconst rightQuotes = `\"'”’`\n\nexport namespace Argv {\n  export interface Interpolation {\n    terminator?: string\n    parse?(source: string): Argv\n  }\n\n  const bracs: Dict<Interpolation> = {}\n\n  export function interpolate(initiator: string, terminator: string, parse?: (source: string) => Argv) {\n    bracs[initiator] = { terminator, parse }\n  }\n\n  interpolate('$(', ')')\n\n  export namespace whitespace {\n    export const unescape = (source: string) => source\n      .replace(/@__KOISHI_SPACE__@/g, ' ')\n      .replace(/@__KOISHI_NEWLINE__@/g, '\\n')\n      .replace(/@__KOISHI_RETURN__@/g, '\\r')\n      .replace(/@__KOISHI_TAB__@/g, '\\t')\n\n    export const escape = (source: string) => source\n      .replace(/ /g, '@__KOISHI_SPACE__@')\n      .replace(/\\n/g, '@__KOISHI_NEWLINE__@')\n      .replace(/\\r/g, '@__KOISHI_RETURN__@')\n      .replace(/\\t/g, '@__KOISHI_TAB__@')\n  }\n\n  export class Tokenizer {\n    private bracs: Dict<Interpolation>\n\n    constructor() {\n      this.bracs = Object.create(bracs)\n    }\n\n    interpolate(initiator: string, terminator: string, parse?: (source: string) => Argv) {\n      this.bracs[initiator] = { terminator, parse }\n    }\n\n    parseToken(source: string, stopReg = '$'): Token {\n      const parent = { inters: [] } as Token\n      const index = leftQuotes.indexOf(source[0])\n      const quote = rightQuotes[index]\n      let content = ''\n      if (quote) {\n        source = source.slice(1)\n        stopReg = `${quote}(?=${stopReg})|$`\n      }\n      stopReg += `|${Object.keys({ ...this.bracs, ...bracs }).map(escapeRegExp).join('|')}`\n      const regExp = new RegExp(stopReg)\n      while (true) {\n        const capture = regExp.exec(source)\n        content += whitespace.unescape(source.slice(0, capture.index))\n        if (capture[0] in this.bracs) {\n          source = source.slice(capture.index + capture[0].length).trimStart()\n          const { parse, terminator } = this.bracs[capture[0]]\n          const argv = parse?.(source) || this.parse(source, terminator)\n          source = argv.rest\n          parent.inters.push({ ...argv, pos: content.length, initiator: capture[0] })\n        } else {\n          const quoted = capture[0] === quote\n          const rest = source.slice(capture.index + +quoted)\n          parent.rest = rest.trimStart()\n          parent.quoted = quoted\n          parent.terminator = capture[0]\n          if (quoted) {\n            parent.terminator += rest.slice(0, -parent.rest.length)\n          } else if (quote) {\n            content = leftQuotes[index] + content\n            parent.inters.forEach(inter => inter.pos += 1)\n          }\n          parent.content = content\n          if (quote === \"'\") Argv.revert(parent)\n          return parent\n        }\n      }\n    }\n\n    parse(source: string, terminator = ''): Argv {\n      const tokens: Token[] = []\n      source = h.parse(source).map((el) => {\n        return el.type === 'text' ? el.toString() : whitespace.escape(el.toString())\n      }).join('')\n      let rest = source, term = ''\n      const stopReg = `\\\\s+|[${escapeRegExp(terminator)}]|$`\n      // eslint-disable-next-line no-unmodified-loop-condition\n      while (rest && !(terminator && rest.startsWith(terminator))) {\n        const token = this.parseToken(rest, stopReg)\n        tokens.push(token)\n        rest = token.rest\n        term = token.terminator\n        delete token.rest\n      }\n      if (rest.startsWith(terminator)) rest = rest.slice(1)\n      source = source.slice(0, -(rest + term).length)\n      rest = whitespace.unescape(rest)\n      source = whitespace.unescape(source)\n      return { tokens, rest, source }\n    }\n\n    stringify(argv: Argv) {\n      const output = argv.tokens.reduce((prev, token) => {\n        if (token.quoted) prev += leftQuotes[rightQuotes.indexOf(token.terminator[0])] || ''\n        return prev + token.content + token.terminator\n      }, '')\n      if (argv.rest && !rightQuotes.includes(output[output.length - 1]) || argv.initiator) {\n        return output.slice(0, -1)\n      }\n      return output\n    }\n  }\n\n  const defaultTokenizer = new Tokenizer()\n\n  export function parse(source: string, terminator = '') {\n    return defaultTokenizer.parse(source, terminator)\n  }\n\n  export function stringify(argv: Argv) {\n    return defaultTokenizer.stringify(argv)\n  }\n\n  export function revert(token: Token) {\n    while (token.inters.length) {\n      const { pos, source, initiator } = token.inters.pop()\n      token.content = token.content.slice(0, pos)\n        + initiator + source + bracs[initiator].terminator\n        + token.content.slice(pos)\n    }\n  }\n\n  // builtin domains\n  export interface Domain {\n    el: h[]\n    elements: h[]\n    string: string\n    number: number\n    boolean: boolean\n    text: string\n    rawtext: string\n    user: string\n    channel: string\n    integer: number\n    posint: number\n    natural: number\n    bigint: bigint\n    date: Date\n    img: JSX.IntrinsicElements['img']\n    image: JSX.IntrinsicElements['img']\n    audio: JSX.IntrinsicElements['audio']\n    video: JSX.IntrinsicElements['video']\n    file: JSX.IntrinsicElements['file']\n  }\n\n  export type DomainType = keyof Domain\n\n  type ParamType<S extends string, F>\n    = S extends `${any}:${infer T}` ? T extends DomainType ? Domain[T] : F : F\n\n  type Replace<S extends string, X extends string, Y extends string>\n    = S extends `${infer L}${X}${infer R}` ? `${L}${Y}${Replace<R, X, Y>}` : S\n\n  type ExtractAll<S extends string, F>\n    = S extends `${infer L}]${infer R}` ? [ParamType<L, F>, ...ExtractAll<R, F>] : []\n\n  type ExtractFirst<S extends string, F>\n    = S extends `${infer L}]${any}` ? ParamType<L, F> : boolean\n\n  type ExtractSpread<S extends string> = S extends `${infer L}...${infer R}`\n    ? [...ExtractAll<L, string>, ...ExtractFirst<R, string>[]]\n    : [...ExtractAll<S, string>, ...string[]]\n\n  export type ArgumentType<S extends string> = ExtractSpread<Replace<S, '>', ']'>>\n\n  export type OptionType<S extends string> = ExtractFirst<Replace<S, '>', ']'>, any>\n\n  export type Type = DomainType | RegExp | readonly string[] | Transform<any> | DomainConfig<any>\n\n  export interface Declaration {\n    name?: string\n    type?: Type\n    fallback?: any\n    variadic?: boolean\n    required?: boolean\n  }\n\n  export type Transform<T> = (source: string, session: Session) => T\n\n  export interface DomainConfig<T = any> {\n    transform?: Transform<T>\n    greedy?: boolean\n    numeric?: boolean\n  }\n\n  export interface OptionConfig<T extends Type = Type> extends Permissions.Config {\n    aliases?: string[]\n    symbols?: string[]\n    value?: any\n    fallback?: any\n    type?: T\n    descPath?: string\n  }\n\n  export interface TypedOptionConfig<T extends Type> extends OptionConfig<T> {\n    type: T\n  }\n\n  export interface OptionVariant extends OptionConfig {\n    syntax: string\n  }\n\n  export interface OptionDeclaration extends Declaration, OptionVariant {\n    values: Dict<any>\n    /** @deprecated */\n    valuesSyntax: Dict<string>\n    variants: Dict<OptionVariant>\n  }\n\n  type OptionDeclarationMap = Dict<OptionDeclaration>\n\n  export namespace CommandBase {\n    export interface Config {\n      strictOptions?: boolean\n    }\n  }\n\n  // do not use lookbehind assertion for Safari compatibility\n  const SYNTAX = /(?:-[\\w\\x80-\\uffff-]*|[^,\\s\\w\\x80-\\uffff]+)/.source\n  const BRACKET = /((?:\\s*\\[[^\\]]+?\\]|\\s*<[^>]+?>)*)/.source\n  const OPTION_REGEXP = new RegExp(`^(${SYNTAX}(?:,\\\\s*${SYNTAX})*(?=\\\\s|$))?${BRACKET}(.*)$`)\n\n  export class CommandBase<T extends CommandBase.Config = CommandBase.Config> {\n    public declaration: string\n\n    public _arguments: Declaration[]\n    public _options: OptionDeclarationMap = {}\n    public _disposables: Disposable[] = []\n\n    private _namedOptions: OptionDeclarationMap = {}\n    private _symbolicOptions: OptionDeclarationMap = {}\n\n    constructor(public readonly name: string, declaration: string, public ctx: Context, public config: T) {\n      if (!name) throw new Error('expect a command name')\n      const declList = this._arguments = ctx.$commander.parseDecl(declaration)\n      this.declaration = declList.stripped\n      for (const decl of declList) {\n        this._disposables.push(this.ctx.i18n.define('', `commands.${this.name}.arguments.${decl.name}`, decl.name))\n      }\n    }\n\n    _createOption(name: string, def: string, config: OptionConfig) {\n      const cap = OPTION_REGEXP.exec(def)\n      const param = paramCase(name)\n      let syntax = cap[1] || '--' + param\n      const bracket = cap[2] || ''\n      const desc = cap[3].trim()\n\n      const aliases: string[] = config.aliases ?? []\n      const symbols: string[] = config.symbols ?? []\n      for (let param of syntax.trim().split(',')) {\n        param = param.trimStart()\n        const name = param.replace(/^-+/, '')\n        if (!name || !param.startsWith('-')) {\n          symbols.push(h.escape(param))\n        } else {\n          aliases.push(name)\n        }\n      }\n\n      if (!('value' in config) && !aliases.includes(param)) {\n        syntax += ', --' + param\n      }\n\n      const declList = this.ctx.$commander.parseDecl(bracket.trimStart())\n      if (declList.stripped) syntax += ' ' + declList.stripped\n      const option = this._options[name] ||= {\n        ...declList[0],\n        ...config,\n        name,\n        values: {},\n        valuesSyntax: {},\n        variants: {},\n        syntax,\n      }\n\n      let path = `commands.${this.name}.options.${name}`\n      const fallbackType = typeof option.fallback\n      if ('value' in config) {\n        path += '.' + config.value\n        option.variants[config.value] = { ...config, syntax }\n        option.valuesSyntax[config.value] = syntax\n        aliases.forEach(name => option.values[name] = config.value)\n      } else if (!bracket.trim()) {\n        option.type = 'boolean'\n      } else if (!option.type && (fallbackType === 'string' || fallbackType === 'number')) {\n        option.type = fallbackType\n      }\n\n      this._disposables.push(this.ctx.i18n.define('', path, desc))\n      this._assignOption(option, aliases, this._namedOptions)\n      this._assignOption(option, symbols, this._symbolicOptions)\n      if (!this._namedOptions[param]) {\n        this._namedOptions[param] = option\n      }\n    }\n\n    private _assignOption(option: OptionDeclaration, names: readonly string[], optionMap: OptionDeclarationMap) {\n      for (const name of names) {\n        if (name in optionMap) {\n          throw new Error(`duplicate option name \"${name}\" for command \"${this.name}\"`)\n        }\n        optionMap[name] = option\n      }\n    }\n\n    removeOption<K extends string>(name: K) {\n      if (!this._options[name]) return false\n      const option = this._options[name]\n      delete this._options[name]\n      for (const key in this._namedOptions) {\n        if (this._namedOptions[key] === option) {\n          delete this._namedOptions[key]\n        }\n      }\n      for (const key in this._symbolicOptions) {\n        if (this._symbolicOptions[key] === option) {\n          delete this._symbolicOptions[key]\n        }\n      }\n      return true\n    }\n\n    parse(argv: string | Argv, terminator?: string): Argv {\n      if (typeof argv === 'string') {\n        argv = Argv.parse(argv, terminator)\n      }\n      const args = [...argv.args || []]\n      const options = { ...argv.options }\n\n      if (!argv.source && argv.tokens) {\n        argv.source = this.name + ' ' + Argv.stringify(argv)\n      }\n\n      let lastArgDecl: Declaration\n\n      while (!argv.error && argv.tokens?.length) {\n        const token = argv.tokens[0]\n        let { content, quoted } = token\n\n        // variadic argument\n        const argDecl = this._arguments[args.length] || lastArgDecl || {}\n        if (args.length === this._arguments.length - 1 && argDecl.variadic) {\n          lastArgDecl = argDecl\n        }\n\n        // greedy argument\n        if (content[0] !== '-' && this.ctx.$commander.resolveDomain(argDecl.type).greedy) {\n          args.push(this.ctx.$commander.parseValue(Argv.stringify(argv), 'argument', argv, argDecl))\n          break\n        }\n\n        // parse token\n        argv.tokens.shift()\n        let option: OptionDeclaration\n        let names: string | string[]\n        let param: string\n        // symbolic option\n        if (!quoted && (option = this._symbolicOptions[content])) {\n          names = [paramCase(option.name)]\n        } else {\n          // normal argument\n          if (content[0] !== '-' || quoted || (+content) * 0 === 0 && this.ctx.$commander.resolveDomain(argDecl.type).numeric) {\n            args.push(this.ctx.$commander.parseValue(content, 'argument', argv, argDecl))\n            continue\n          }\n\n          // find -\n          let i = 0\n          for (; i < content.length; ++i) {\n            if (content.charCodeAt(i) !== 45) break\n          }\n\n          // find =\n          let j = i + 1\n          for (; j < content.length; j++) {\n            if (content.charCodeAt(j) === 61) break\n          }\n          const name = content.slice(i, j)\n          if (this.config.strictOptions && !this._namedOptions[name]) {\n            if (this.ctx.$commander.resolveDomain(argDecl.type).greedy) {\n              argv.tokens.unshift(token)\n              args.push(this.ctx.$commander.parseValue(Argv.stringify(argv), 'argument', argv, argDecl))\n              break\n            }\n            args.push(this.ctx.$commander.parseValue(content, 'argument', argv, argDecl))\n            continue\n          }\n          if (i > 1 && name.startsWith('no-') && !this._namedOptions[name]) {\n            options[camelCase(name.slice(3))] = false\n            continue\n          }\n          names = i > 1 ? [name] : name\n          param = content.slice(++j)\n          option = this._namedOptions[names[names.length - 1]]\n        }\n\n        // get parameter from next token\n        quoted = false\n        if (!param) {\n          const { type, values } = option || {}\n          if (this.ctx.$commander.resolveDomain(type).greedy) {\n            param = Argv.stringify(argv)\n            quoted = true\n            argv.tokens = []\n          } else {\n            // Option has bounded value or option is boolean.\n            const isValued = names[names.length - 1] in (values || {}) || type === 'boolean'\n            if (!isValued && argv.tokens.length && (type || argv.tokens[0]?.content !== '-')) {\n              const token = argv.tokens.shift()\n              param = token.content\n              quoted = token.quoted\n            }\n          }\n        }\n\n        // handle each name\n        for (let j = 0; j < names.length; j++) {\n          const name = names[j]\n          const optDecl = this._namedOptions[name]\n          const key = optDecl ? optDecl.name : camelCase(name)\n          if (optDecl && name in optDecl.values) {\n            options[key] = optDecl.values[name]\n          } else {\n            const source = j + 1 < names.length ? '' : param\n            options[key] = this.ctx.$commander.parseValue(source, 'option', argv, optDecl)\n          }\n          if (argv.error) break\n        }\n      }\n\n      // assign default values\n      for (const { name, fallback } of Object.values(this._options)) {\n        if (fallback !== undefined && !(name in options)) {\n          options[name] = fallback\n        }\n      }\n\n      delete argv.tokens\n      return { ...argv, options, args, error: argv.error || '', command: this as any }\n    }\n\n    private stringifyArg(value: any) {\n      value = '' + value\n      return value.includes(' ') ? `\"${value}\"` : value\n    }\n\n    stringify(args: readonly string[], options: any) {\n      let output = this.name\n      for (const key in options) {\n        const value = options[key]\n        if (value === true) {\n          output += ` --${key}`\n        } else if (value === false) {\n          output += ` --no-${key}`\n        } else {\n          output += ` --${key} ${this.stringifyArg(value)}`\n        }\n      }\n      for (const arg of args) {\n        output += ' ' + this.stringifyArg(arg)\n      }\n      return output\n    }\n  }\n}\n", "import { coerce, makeArray, Random } from '@koishijs/utils'\nimport { Awaitable, defineProperty, Dict, Time } from 'cosmokit'\nimport { EventOptions, Fragment, h, Hook } from '@satorijs/core'\nimport { Session } from './session'\nimport { Context } from './context'\nimport { Channel, User } from './database'\n\ndeclare module './context' {\n  interface Context {\n    $processor: Processor\n    middleware<S extends Session = Session>(middleware: Middleware<S>, prepend?: boolean): () => boolean\n    match(pattern: string | RegExp, response: Fragment, options?: Matcher.Options & { i18n?: false }): () => boolean\n    match(pattern: string, response: string, options: Matcher.Options & { i18n: true }): () => boolean\n  }\n\n  interface Events {\n    'before-attach-channel'(session: Session, fields: Set<Channel.Field>): void\n    'attach-channel'(session: Session): Awaitable<void | boolean>\n    'before-attach-user'(session: Session, fields: Set<User.Field>): void\n    'attach-user'(session: Session): Awaitable<void | boolean>\n    'before-attach'(session: Session): void\n    'attach'(session: Session): void\n    'middleware'(session: Session): void\n  }\n}\n\nexport class SessionError extends Error {\n  constructor(public path: string | string[], public param?: Dict) {\n    super(makeArray(path)[0])\n  }\n}\n\nexport type Next = (next?: Next.Callback) => Promise<void | Fragment>\nexport type Middleware<S extends Session = Session> = (session: S, next: Next) => Awaitable<void | Fragment>\n\nexport namespace Next {\n  export const MAX_DEPTH = 64\n\n  export type Queue = ((next?: Next) => Awaitable<void | Fragment>)[]\n  export type Callback = void | string | ((next?: Next) => Awaitable<void | Fragment>)\n\n  export async function compose(callback: Callback, next?: Next) {\n    return typeof callback === 'function' ? callback(next) : callback\n  }\n}\n\nexport interface Matcher extends Matcher.Options {\n  context: Context\n  pattern: string | RegExp\n  response: Matcher.Response\n}\n\nexport namespace Matcher {\n  export type Response = Fragment | ((session: Session, params: [string, ...string[]]) => Awaitable<Fragment>)\n\n  export interface Options {\n    i18n?: boolean\n    appel?: boolean\n    fuzzy?: boolean\n    regex?: boolean\n  }\n}\n\nexport class Processor {\n  _hooks: Hook[] = []\n  _sessions: Dict<Session> = Object.create(null)\n  _userCache = new SharedCache<User.Observed<keyof User>>()\n  _channelCache = new SharedCache<Channel.Observed<keyof Channel>>()\n  _matchers = new Set<Matcher>()\n\n  constructor(private ctx: Context) {\n    defineProperty(this, Context.current, ctx)\n\n    // bind built-in event listeners\n    this.middleware(this.attach.bind(this), true)\n    ctx.on('message', this._handleMessage.bind(this))\n\n    ctx.before('attach-user', (session, fields) => {\n      session.collect('user', session.argv, fields)\n    })\n\n    ctx.before('attach-channel', (session, fields) => {\n      session.collect('channel', session.argv, fields)\n    })\n\n    ctx.component('execute', async (attrs, children, session) => {\n      return session.execute(children.join(''), true)\n    }, { session: true })\n\n    ctx.component('prompt', async (attrs, children, session) => {\n      await session.send(children)\n      return session.prompt()\n    }, { session: true })\n\n    ctx.component('i18n', async (attrs, children, session) => {\n      return session.i18n(attrs.path, children)\n    }, { session: true })\n\n    ctx.component('random', async (attrs, children) => {\n      return Random.pick(children)\n    })\n\n    ctx.component('plural', async (attrs, children) => {\n      const path = attrs.count in children ? attrs.count : children.length - 1\n      return children[path]\n    })\n\n    const units = ['day', 'hour', 'minute', 'second'] as const\n\n    ctx.component('i18n:time', (attrs, children, session) => {\n      let ms = +attrs.value\n      for (let index = 0; index < 3; index++) {\n        const major = Time[units[index]]\n        const minor = Time[units[index + 1]]\n        if (ms >= major - minor / 2) {\n          ms += minor / 2\n          let result = Math.floor(ms / major) + ' ' + session.text('general.' + units[index])\n          if (ms % major > minor) {\n            result += ` ${Math.floor(ms % major / minor)} ` + session.text('general.' + units[index + 1])\n          }\n          return result\n        }\n      }\n      return Math.round(ms / Time.second) + ' ' + session.text('general.second')\n    }, { session: true })\n\n    ctx.before('attach', (session) => {\n      for (const matcher of this._matchers) {\n        this._executeMatcher(session, matcher)\n        if (session.response) return\n      }\n    })\n  }\n\n  middleware(middleware: Middleware, options?: boolean | EventOptions) {\n    if (typeof options !== 'object') {\n      options = { prepend: options }\n    }\n    return this.ctx.lifecycle.register('middleware', this._hooks, middleware, options)\n  }\n\n  match(pattern: string | RegExp, response: Matcher.Response, options: Matcher.Options) {\n    const matcher: Matcher = { ...options, context: this.ctx, pattern, response }\n    this._matchers.add(matcher)\n    return this.ctx.collect('shortcut', () => {\n      return this._matchers.delete(matcher)\n    })\n  }\n\n  private _executeMatcher(session: Session, matcher: Matcher) {\n    const { stripped, quote } = session\n    const { appel, context, i18n, regex, fuzzy, pattern, response } = matcher\n    if ((appel || stripped.hasAt) && !stripped.appel) return\n    if (!context.filter(session)) return\n    let content = stripped.content\n    if (quote?.content) content += ' ' + quote.content\n\n    let params: [string, ...string[]] = null\n    const match = (pattern: any) => {\n      if (!pattern) return\n      if (typeof pattern === 'string') {\n        if (!fuzzy && content !== pattern || !content.startsWith(pattern)) return\n        params = [content, content.slice(pattern.length)]\n        if (fuzzy && !stripped.appel && params[1].match(/^\\S/)) {\n          params = null\n        }\n      } else {\n        params = pattern.exec(content)\n      }\n    }\n\n    if (!i18n) {\n      match(pattern)\n    } else {\n      for (const locale of this.ctx.i18n.fallback([])) {\n        const store = this.ctx.i18n._data[locale]\n        let value = store?.[pattern as string] as string | RegExp\n        if (!value) continue\n        if (regex) {\n          const rest = fuzzy ? `(?:${stripped.appel ? '' : '\\\\s+'}([\\\\s\\\\S]*))?` : ''\n          value = new RegExp(`^(?:${value})${rest}$`)\n        }\n        match(value)\n        if (!params) continue\n        session.locales = [locale]\n        break\n      }\n    }\n\n    if (!params) return\n    session.response = async () => {\n      const output = await session.resolve(response, params)\n      return h.normalize(output, params.map(source => source ? h.parse(source) : ''))\n    }\n  }\n\n  private async attach(session: Session, next: Next) {\n    this.ctx.emit(session, 'before-attach', session)\n\n    if (this.ctx.database) {\n      if (!session.isDirect) {\n        // attach group data\n        const channelFields = new Set<Channel.Field>(['flag', 'assignee', 'guildId', 'permissions', 'locales'])\n        this.ctx.emit('before-attach-channel', session, channelFields)\n        const channel = await session.observeChannel(channelFields)\n        // for backwards compatibility\n        channel.guildId = session.guildId\n\n        // emit attach event\n        if (await this.ctx.serial(session, 'attach-channel', session)) return\n\n        // ignore some group calls\n        if (channel.flag & Channel.Flag.ignore) return\n        if (channel.assignee !== session.selfId && !session.stripped.atSelf) return\n      }\n\n      // attach user data\n      // authority is for suggestion\n      const userFields = new Set<User.Field>(['id', 'flag', 'authority', 'permissions', 'locales'])\n      this.ctx.emit('before-attach-user', session, userFields)\n      const user = await session.observeUser(userFields)\n\n      // emit attach event\n      if (await this.ctx.serial(session, 'attach-user', session)) return\n\n      // ignore some user calls\n      if (user.flag & User.Flag.ignore) return\n    }\n\n    this.ctx.emit(session, 'attach', session)\n    if (session.response) return session.response()\n    return next()\n  }\n\n  private async _handleMessage(session: Session) {\n    // ignore self messages\n    if (session.selfId === session.userId) return\n\n    // preparation\n    this._sessions[session.id] = session\n    const queue: Next.Queue = this.ctx.lifecycle\n      .filterHooks(this._hooks, session)\n      .map(({ callback }) => callback.bind(null, session))\n\n    // execute middlewares\n    let index = 0\n    const next: Next = async (callback) => {\n      try {\n        if (!this._sessions[session.id]) {\n          throw new Error('isolated next function detected')\n        }\n        if (callback !== undefined) {\n          queue.push(next => Next.compose(callback, next))\n          if (queue.length > Next.MAX_DEPTH) {\n            throw new Error(`middleware stack exceeded ${Next.MAX_DEPTH}`)\n          }\n        }\n        return await queue[index++]?.(next)\n      } catch (error) {\n        if (error instanceof SessionError) {\n          return session.text(error.path, error.param)\n        }\n        const stack = coerce(error)\n        this.ctx.logger('session').warn(`${session.content}\\n${stack}`)\n      }\n    }\n\n    try {\n      const result = await next()\n      if (result) await session.send(result)\n    } finally {\n      // update session map\n      delete this._sessions[session.id]\n      this._userCache.delete(session.id)\n      this._channelCache.delete(session.id)\n\n      // flush user & group data\n      await session.user?.$update()\n      await session.channel?.$update()\n      await session.guild?.$update()\n      this.ctx.emit(session, 'middleware', session)\n    }\n  }\n}\n\nexport namespace SharedCache {\n  export interface Entry<T> {\n    value: T\n    key: string\n    refs: Set<number>\n  }\n}\n\nexport class SharedCache<T> {\n  #keyMap = new Map<string, SharedCache.Entry<T>>()\n\n  get(ref: number, key: string) {\n    const entry = this.#keyMap.get(key)\n    if (!entry) return\n    entry.refs.add(ref)\n    return entry.value\n  }\n\n  set(ref: number, key: string, value: T) {\n    let entry = this.#keyMap.get(key)\n    if (entry) {\n      entry.value = value\n    } else {\n      entry = { value, key, refs: new Set() }\n      this.#keyMap.set(key, entry)\n    }\n    entry.refs.add(ref)\n  }\n\n  delete(ref: number) {\n    for (const key of [...this.#keyMap.keys()]) {\n      const { refs } = this.#keyMap.get(key)\n      refs.delete(ref)\n      if (!refs.size) {\n        this.#keyMap.delete(key)\n      }\n    }\n  }\n}\n", "import * as utils from '@koishijs/utils'\nimport { Dict, MaybeArray } from 'cosmokit'\nimport { Driver, FlatKeys, FlatPick, Update } from 'minato'\nimport * as minato from 'minato'\nimport { Fragment, Universal } from '@satorijs/core'\nimport { Context } from './context'\n\ndeclare module './context' {\n  interface Context {\n    [minato.Types]: Types\n    [minato.Tables]: Tables\n    [Context.Database]: Context.Database<this>\n    broadcast(content: Fragment, forced?: boolean): Promise<string[]>\n    broadcast(channels: readonly string[], content: Fragment, forced?: boolean): Promise<string[]>\n  }\n\n  namespace Context {\n    // https://github.com/typescript-eslint/typescript-eslint/issues/6720\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    interface Database<C extends Context = Context> {\n      getUser<K extends FlatKeys<User>>(platform: string, pid: string, modifier?: Driver.Cursor<K>): Promise<FlatPick<User, K>>\n      setUser(platform: string, pid: string, data: Update<User>): Promise<void>\n      createUser(platform: string, pid: string, data: Partial<User>): Promise<User>\n      getChannel<K extends FlatKeys<Channel>>(platform: string, id: string, modifier?: Driver.Cursor<K>): Promise<FlatPick<Channel, K | 'id' | 'platform'>>\n      getChannel<K extends FlatKeys<Channel>>(platform: string, ids: string[], modifier?: Driver.Cursor<K>): Promise<FlatPick<Channel, K>[]>\n      getAssignedChannels<K extends Channel.Field>(fields?: K[], selfIdMap?: Dict<string[]>): Promise<Pick<Channel, K>[]>\n      setChannel(platform: string, id: string, data: Update<Channel>): Promise<void>\n      createChannel(platform: string, id: string, data: Partial<Channel>): Promise<Channel>\n    }\n  }\n}\n\nexport interface Types extends minato.Types {}\n\nexport interface Tables extends minato.Tables {\n  user: User\n  binding: Binding\n  channel: Channel\n}\n\nexport interface User {\n  id: number\n  name: string\n  /** @deprecated */\n  flag: number\n  authority: number\n  locales: string[]\n  permissions: string[]\n  createdAt: Date\n}\n\nexport namespace User {\n  export enum Flag {\n    ignore = 1,\n  }\n\n  export type Field = keyof User\n  export type Observed<K extends Field = Field> = utils.Observed<Pick<User, K>, Promise<void>>\n}\n\nexport interface Binding {\n  aid: number\n  bid: number\n  pid: string\n  platform: string\n}\n\nexport interface Channel {\n  id: string\n  platform: string\n  /** @deprecated */\n  flag: number\n  assignee: string\n  guildId: string\n  locales: string[]\n  permissions: string[]\n  createdAt: Date\n}\n\nexport namespace Channel {\n  export enum Flag {\n    ignore = 1,\n    silent = 4,\n  }\n\n  export type Field = keyof Channel\n  export type Observed<K extends Field = Field> = utils.Observed<Pick<Channel, K>, Promise<void>>\n}\n\ninterface KoishiDatabase extends minato.Database<Tables, Types, Context> {}\n\nclass KoishiDatabase {\n  constructor(public ctx: Context) {\n    ctx.mixin(this, {\n      getUser: 'database.getUser',\n      setUser: 'database.setUser',\n      createUser: 'database.createUser',\n      getChannel: 'database.getChannel',\n      getAssignedChannels: 'database.getAssignedChannels',\n      setChannel: 'database.setChannel',\n      createChannel: 'database.createChannel',\n      broadcast: 'database.broadcast',\n    })\n\n    ctx.mixin('database', ['broadcast'] as never[])\n\n    ctx.model.extend('user', {\n      id: 'unsigned(8)',\n      name: { type: 'string', length: 255 },\n      flag: 'unsigned(8)',\n      authority: 'unsigned(4)',\n      locales: 'list(255)',\n      permissions: 'list',\n      createdAt: 'timestamp',\n    }, {\n      autoInc: true,\n    })\n\n    ctx.model.extend('binding', {\n      aid: 'unsigned(8)',\n      bid: 'unsigned(8)',\n      pid: 'string(255)',\n      platform: 'string(255)',\n    }, {\n      primary: ['pid', 'platform'],\n    })\n\n    ctx.model.extend('channel', {\n      id: 'string(255)',\n      platform: 'string(255)',\n      flag: 'unsigned(8)',\n      assignee: 'string(255)',\n      guildId: 'string(255)',\n      locales: 'list(255)',\n      permissions: 'list',\n      createdAt: 'timestamp',\n    }, {\n      primary: ['id', 'platform'],\n    })\n\n    ctx.on('login-added', ({ platform }) => {\n      if (platform in ctx.model.tables.user.fields) return\n      ctx.model.migrate('user', { [platform]: 'string(255)' }, async (db) => {\n        const users = await db.get('user', { [platform]: { $exists: true } }, ['id', platform as never])\n        await db.upsert('binding', users.filter(u => u[platform]).map((user) => ({\n          aid: user.id,\n          bid: user.id,\n          pid: user[platform],\n          platform,\n        })))\n      })\n    })\n  }\n\n  async getUser<K extends FlatKeys<User>>(platform: string, pid: string, modifier?: Driver.Cursor<K>): Promise<FlatPick<User, K>> {\n    const [binding] = await this.get('binding', { platform, pid }, ['aid'])\n    if (!binding) return\n    const [user] = await this.get('user', { id: binding.aid }, modifier)\n    return user\n  }\n\n  async setUser(platform: string, pid: string, data: Update<User>) {\n    const [binding] = await this.get('binding', { platform, pid }, ['aid'])\n    if (!binding) throw new Error('user not found')\n    return this.set('user', binding.aid, data)\n  }\n\n  async createUser(platform: string, pid: string, data: Partial<User>) {\n    const user = await this.create('user', data)\n    await this.create('binding', { aid: user.id, bid: user.id, pid, platform })\n    return user\n  }\n\n  getChannel<K extends FlatKeys<Channel>>(platform: string, id: string, modifier?: Driver.Cursor<K>): Promise<FlatPick<Channel, K | 'id' | 'platform'>>\n  getChannel<K extends FlatKeys<Channel>>(platform: string, ids: string[], modifier?: Driver.Cursor<K>): Promise<FlatPick<Channel, K>[]>\n  async getChannel(platform: string, id: MaybeArray<string>, modifier?: any) {\n    const data = await this.get('channel', { platform, id }, modifier)\n    if (Array.isArray(id)) return data\n    if (data[0]) Object.assign(data[0], { platform, id })\n    return data[0]\n  }\n\n  getSelfIds(platforms?: string[]): Dict<string[]> {\n    const selfIdMap: Dict<string[]> = Object.create(null)\n    for (const bot of this.ctx.bots) {\n      if (platforms && !platforms.includes(bot.platform)) continue\n      (selfIdMap[bot.platform] ||= []).push(bot.selfId)\n    }\n    return selfIdMap\n  }\n\n  getAssignedChannels<K extends Channel.Field>(fields?: K[], selfIdMap?: Dict<string[]>): Promise<Pick<Channel, K>[]>\n  async getAssignedChannels(fields?: Channel.Field[], selfIdMap: Dict<string[]> = this.getSelfIds()) {\n    return this.get('channel', {\n      $or: Object.entries(selfIdMap).map(([platform, assignee]) => ({ platform, assignee })),\n    }, fields)\n  }\n\n  setChannel(platform: string, id: string, data: Update<Channel>) {\n    return this.set('channel', { platform, id }, data)\n  }\n\n  createChannel(platform: string, id: string, data: Partial<Channel>) {\n    return this.create('channel', { platform, id, ...data })\n  }\n\n  async broadcast(...args: [Fragment, boolean?] | [readonly string[], Fragment, boolean?]) {\n    let channels: string[], platforms: string[]\n    if (Array.isArray(args[0])) {\n      channels = args.shift() as any\n      platforms = channels.map(c => c.split(':')[0])\n    }\n    const [content, forced] = args as [Fragment, boolean]\n    if (!content) return []\n\n    const selfIdMap = this.getSelfIds(platforms)\n    const data = await this.getAssignedChannels(['id', 'assignee', 'flag', 'platform', 'guildId', 'locales'], selfIdMap)\n    const assignMap: Dict<Dict<Pick<Channel, 'id' | 'guildId' | 'locales'>[]>> = {}\n    for (const channel of data) {\n      const { platform, id, assignee, flag } = channel\n      if (channels) {\n        const index = channels?.indexOf(`${platform}:${id}`)\n        if (index < 0) continue\n        channels.splice(index, 1)\n      }\n      if (!forced && (flag & Channel.Flag.silent)) continue\n      ((assignMap[platform] ||= {})[assignee] ||= []).push(channel)\n    }\n\n    if (channels?.length) {\n      this.ctx.logger('app').warn('broadcast', 'channel not found: ', channels.join(', '))\n    }\n\n    return (await Promise.all(this.ctx.bots.map((bot) => {\n      const targets = assignMap[bot.platform]?.[bot.selfId]\n      if (!targets) return Promise.resolve([])\n      const sessions = targets.map(({ id, guildId, locales }) => {\n        const session = bot.session({\n          type: 'message',\n          channel: { id, type: Universal.Channel.Type.TEXT },\n          guild: { id: guildId },\n        })\n        session.locales = locales\n        return session\n      })\n      return bot.broadcast(sessions, content)\n    }))).flat(1)\n  }\n}\n\nexport default KoishiDatabase\n", "import { isNullable } from 'cosmokit'\nimport { Context } from '../context'\nimport { Argv } from './parser'\n\nexport default function validate(ctx: Context) {\n  ctx.permissions.define('command:(name)', {\n    depends: ({ name }) => {\n      const command = ctx.$commander.get(name)\n      if (!command) return\n      const depends = [...command.config.dependencies ?? []]\n      if (command.parent) depends.push(`command:${command.parent.name}`)\n      return depends\n    },\n    inherits: ({ name }) => {\n      return ctx.$commander.get(name)?.config.permissions\n    },\n    list: () => {\n      return ctx.$commander._commandList.map(command => `command:${command.name}`)\n    },\n  })\n\n  ctx.permissions.define('command:(name):option:(name2)', {\n    depends: ({ name, name2 }) => {\n      return ctx.$commander.get(name)?._options[name2]?.dependencies\n    },\n    inherits: ({ name, name2 }) => {\n      return ctx.$commander.get(name)?._options[name2]?.permissions\n    },\n    list: () => {\n      return ctx.$commander._commandList.flatMap(command => {\n        return Object.keys(command._options).map(name => `command:${command.name}:option:${name}`)\n      })\n    },\n  })\n\n  // check user\n  ctx.before('command/execute', async (argv: Argv<'authority'>) => {\n    const { session, options, command } = argv\n    if (!session.user) return\n\n    function sendHint(message: string, ...param: any[]) {\n      return command.config.showWarning ? session.text(message, param) : ''\n    }\n\n    // check permissions\n    const permissions = [`command:${command.name}`]\n    for (const option of Object.values(command._options)) {\n      if (option.name in options) {\n        permissions.push(`command:${command.name}:option:${option.name}`)\n      }\n    }\n    if (!await ctx.permissions.test(permissions, session)) {\n      return sendHint('internal.low-authority')\n    }\n  }, true)\n\n  // check argv\n  ctx.before('command/execute', async (argv: Argv) => {\n    const { args, options, command, session } = argv\n    function sendHint(message: string, ...param: any[]) {\n      return command.config.showWarning ? session.text(message, param) : ''\n    }\n\n    // check argument count\n    if (command.config.checkArgCount) {\n      let index = args.length\n      while (command._arguments[index]?.required) {\n        const decl = command._arguments[index]\n        await session.send(session.text('internal.prompt-argument', [\n          session.text(`commands.${command.name}.arguments.${decl.name}`),\n        ]))\n        const source = await session.prompt()\n        if (isNullable(source)) {\n          return sendHint('internal.insufficient-arguments', decl.name)\n        }\n        args.push(ctx.$commander.parseValue(source, 'argument', argv, decl))\n        index++\n      }\n      const finalArg = command._arguments[command._arguments.length - 1] || {}\n      if (args.length > command._arguments.length && !finalArg.variadic) {\n        return sendHint('internal.redunant-arguments')\n      }\n    }\n\n    // check unknown options\n    if (command.config.checkUnknown) {\n      const unknown = Object.keys(options).filter(key => !command._options[key])\n      if (unknown.length) {\n        return sendHint('internal.unknown-option', unknown.join(', '))\n      }\n    }\n  }, true)\n}\n", "import { distance } from 'fastest-levenshtein'\nimport { Dict, isNullable } from 'cosmokit'\nimport { fallback, LocaleTree } from '@koishijs/i18n-utils'\nimport { h, Logger, Schema } from '@satorijs/core'\nimport { Context } from './context'\nimport zhCN from './locales/zh-CN.yml'\nimport enUS from './locales/en-US.yml'\n\nconst logger = new Logger('i18n')\nconst kTemplate = Symbol('template')\n\ndeclare module './context' {\n  interface Context {\n    i18n: I18n\n  }\n\n  interface Events {\n    'internal/i18n'(): void\n  }\n}\n\ntype GroupNames<P extends string, K extends string = never> =\n  | P extends `${string}(${infer R})${infer S}`\n  ? GroupNames<S, K | R>\n  : K\n\nexport type MatchResult<P extends string = never> = Record<GroupNames<P>, string>\n\nexport function createMatch<P extends string>(pattern: P): (string: string) => undefined | MatchResult<P> {\n  const groups: string[] = []\n  const source = pattern.replace(/\\(([^)]+)\\)/g, (_, name) => {\n    groups.push(name)\n    return '(.+)'\n  })\n  const regexp = new RegExp(`^${source}$`)\n  return (string: string) => {\n    const capture = regexp.exec(string)\n    if (!capture) return\n    const data: any = {}\n    for (let i = 0; i < groups.length; i++) {\n      data[groups[i]] = capture[i + 1]\n    }\n    return data\n  }\n}\n\nexport interface CompareOptions {\n  minSimilarity?: number\n}\n\nexport namespace I18n {\n  export type Node = string | Store\n\n  export interface Store {\n    [kTemplate]?: string\n    [K: string]: Node\n  }\n\n  export type Formatter = (value: any, args: string[], locale: string) => string\n  export type Renderer = (dict: Dict, params: any, locale: string) => string\n\n  export interface FindOptions extends CompareOptions {}\n\n  export interface FindResult<P extends string> {\n    locale: string\n    data: MatchResult<P>\n    similarity: number\n  }\n}\n\nexport class I18n {\n  _data: Dict<Dict<string>> = {}\n  _presets: Dict<I18n.Renderer> = {}\n\n  locales: LocaleTree\n\n  constructor(public ctx: Context, config: I18n.Config) {\n    this.locales = LocaleTree.from(config.locales)\n\n    this.define('', { '': '' })\n    this.define('zh-CN', zhCN)\n    this.define('en-US', enUS)\n  }\n\n  fallback(locales: string[]) {\n    return fallback(this.locales, locales)\n  }\n\n  compare(expect: string, actual: string, options: CompareOptions = {}) {\n    const value = 1 - distance(expect, actual) / expect.length\n    const threshold = options.minSimilarity ?? this.ctx.root.config.minSimilarity\n    return value >= threshold ? value : 0\n  }\n\n  get(key: string, locales: string[] = []): Dict<string> {\n    const result: Dict<string> = {}\n    for (const locale of this.fallback(locales)) {\n      const value = this._data[locale]?.[key]\n      if (value) result[locale] = value\n    }\n    return result\n  }\n\n  private* set(locale: string, prefix: string, value: I18n.Node): Generator<string> {\n    if (typeof value === 'object' && value && !prefix.includes('@')) {\n      for (const key in value) {\n        if (key.startsWith('_')) continue\n        yield* this.set(locale, prefix + key + '.', value[key])\n      }\n    } else if (prefix.includes('@')) {\n      throw new Error('preset is deprecated')\n    } else if (typeof value === 'string') {\n      const dict = this._data[locale]\n      const path = prefix.slice(0, -1)\n      if (!isNullable(dict[path]) && !locale.startsWith('$') && dict[path] !== value) {\n        logger.warn('override', locale, path)\n      }\n      dict[path] = value\n      yield path\n    } else {\n      delete this._data[locale][prefix.slice(0, -1)]\n    }\n  }\n\n  define(locale: string, dict: I18n.Store): () => void\n  define(locale: string, key: string, value: I18n.Node): () => void\n  define(locale: string, ...args: [I18n.Store] | [string, I18n.Node]) {\n    const dict = this._data[locale] ||= {}\n    const paths = [...typeof args[0] === 'string'\n      ? this.set(locale, args[0] + '.', args[1])\n      : this.set(locale, '', args[0])]\n    this.ctx.emit('internal/i18n')\n    return this.ctx.collect('i18n', () => {\n      for (const path of paths) {\n        delete dict[path]\n      }\n      this.ctx.emit('internal/i18n')\n    })\n  }\n\n  find<P extends string>(pattern: P, actual: string, options: I18n.FindOptions = {}): I18n.FindResult<P>[] {\n    if (!actual) return []\n    const match = createMatch(pattern)\n    const results: I18n.FindResult<P>[] = []\n    for (const locale in this._data) {\n      for (const path in this._data[locale]) {\n        const data = match(path)\n        if (!data) continue\n        const expect = this._data[locale][path]\n        if (typeof expect !== 'string') continue\n        const similarity = this.compare(expect, actual, options)\n        if (!similarity) continue\n        results.push({ locale, data, similarity })\n      }\n    }\n    return results\n  }\n\n  _render(value: I18n.Node, params: any, locale: string) {\n    if (value === undefined) return\n\n    if (typeof value !== 'string') {\n      const preset = value[kTemplate]\n      const render = this._presets[preset]\n      if (!render) throw new Error(`Preset \"${preset}\" not found`)\n      return [h.text(render(value, params, locale))]\n    }\n\n    return h.parse(value, params)\n  }\n\n  /** @deprecated */\n  text(locales: string[], paths: string[], params: object) {\n    return this.render(locales, paths, params).join('')\n  }\n\n  render(locales: string[], paths: string[], params: object) {\n    locales = this.fallback(locales)\n\n    // try every locale\n    for (const path of paths) {\n      for (const locale of locales) {\n        for (const key of ['$' + locale, locale]) {\n          const value = this._data[key]?.[path]\n          if (value === undefined || !value && !locale && path !== '') continue\n          return this._render(value, params, locale)\n        }\n      }\n    }\n\n    // path not found\n    logger.warn('missing', paths[0])\n    return [h.text(paths[0])]\n  }\n}\n\nexport namespace I18n {\n  export interface Config {\n    locales?: string[]\n    output?: 'prefer-user' | 'prefer-channel'\n    match?: 'strict' | 'prefer-input' | 'prefer-output'\n  }\n\n  export const Config: Schema<Config> = Schema.object({\n    locales: Schema.array(String).role('table').default(['zh-CN', 'en-US', 'fr-FR', 'ja-JP', 'de-DE', 'ru-RU']).description('可用的语言列表。按照回退顺序排列。'),\n    output: Schema.union([\n      Schema.const('prefer-user').description('优先使用用户语言'),\n      Schema.const('prefer-channel').description('优先使用频道语言'),\n    ]).default('prefer-channel').description('输出语言偏好设置。'),\n  }).description('国际化设置')\n}\n", "general:\n  $: 通用设置\n  name: 中文\n  paren: '（{0}）'\n  quote: '“{0}”'\n  comma: ，\n  and: 和\n  or: 或\n  day: 天\n  hour: 小时\n  minute: 分钟\n  second: 秒\n\ninternal:\n  $: 核心文本\n  error-encountered: 发生未知错误。\n  low-authority: 权限不足。\n  prompt-argument: 请发送{0}。\n  insufficient-arguments: 缺少参数，输入帮助以查看用法。\n  redunant-arguments: 存在多余参数，输入帮助以查看用法。\n  invalid-argument: 参数 {0} 输入无效，{1}\n  unknown-option: 存在未知选项 {0}，输入帮助以查看用法。\n  invalid-option: 选项 {0} 输入无效，{1}\n  check-syntax: 输入帮助以查看用法。\n  invalid-number: 请提供一个数字。\n  invalid-integer: 请提供一个整数。\n  invalid-posint: 请提供一个正整数。\n  invalid-natural: 请提供一个非负整数。\n  invalid-date: 请输入合法的时间。\n  invalid-user: 请指定正确的用户。\n  invalid-channel: 请指定正确的频道。\n  invalid-image: 请上传图片。\n  invalid-audio: 请上传音频。\n  invalid-video: 请上传视频。\n  invalid-file: 请上传文件。\n  suggest-hint: 您要找的是不是{0}？\n  suggest-command: 回复句号以使用推测的指令。\n\ncommands:\n  $: 指令系统\n", "general:\n  $: General Settings\n  name: English\n  paren: ' ({0}) '\n  quote: '\"{0}\"'\n  comma: '，'\n  and: and\n  or: or\n  day: day\n  hour: hour\n  minute: minute\n  second: second\ninternal:\n  $: Internal Text\n  error-encountered: An unknown error has occurred.\n  low-authority: Low authority.\n  prompt-argument: 请发送{0}。\n  insufficient-arguments: Insufficient arguments, type help to see usage.\n  redunant-arguments: Redunant arguments, type help to see usage.\n  invalid-argument: Invalid argument {0}, {1}\n  unknown-option: Unknown option {0}, type help to see usage.\n  invalid-option: Invalid option {0}, {1}\n  check-syntax: Type help to see usage.\n  invalid-number: Expect a number.\n  invalid-integer: Expect an integer.\n  invalid-posint: Expect a positive integer.\n  invalid-natural: Expect a non-negative integer.\n  invalid-date: Expect a valid date.\n  invalid-user: Expect a valid user.\n  invalid-channel: Expect a valid channel.\n  invalid-image: Expect an image.\n  invalid-audio: Expect an audio.\n  invalid-video: Expect a video.\n  invalid-file: Expect a file.\n  suggest-hint: Do you mean {0}?\n  suggest-command: Send a period to apply the suggestion.\ncommands:\n  $: Command System\n", "import { observe } from '@koishijs/utils'\nimport { Awaitable, isNullable, makeArray } from 'cosmokit'\nimport { Fragment, h, Logger, Universal } from '@satorijs/core'\nimport { Eval, executeEval, isEvalExpr } from 'minato'\nimport * as satori from '@satorijs/core'\nimport { Argv } from './command'\nimport { Context } from './context'\nimport { Channel, Tables, User } from './database'\nimport { Middleware, Next } from './middleware'\nimport { CompareOptions } from './i18n'\n\nconst logger = new Logger('session')\n\nexport interface PromptOptions {\n  timeout?: number\n}\n\nexport interface SuggestOptions extends CompareOptions {\n  actual?: string\n  expect: readonly string[]\n  filter?: (name: string) => Awaitable<boolean>\n  prefix?: string\n  suffix: string\n  timeout?: number\n}\n\nexport interface Stripped {\n  content: string\n  prefix: string\n  appel: boolean\n  hasAt: boolean\n  atSelf: boolean\n}\n\ninterface Task {\n  delay: number\n  content: Fragment\n  resolve(ids: string[]): void\n  reject(reason: any): void\n}\n\nexport type FieldCollector<T extends keyof Tables, K = keyof Tables[T], A extends any[] = any[], O extends {} = {}> =\n  | Iterable<K>\n  | ((argv: Argv<never, never, A, O>, fields: Set<keyof Tables[T]>) => void)\n\nfunction collectFields<T extends keyof Tables>(argv: Argv, collectors: FieldCollector<T>[], fields: Set<any>) {\n  for (const collector of collectors) {\n    if (typeof collector === 'function') {\n      collector(argv, fields)\n      continue\n    }\n    for (const field of collector) {\n      fields.add(field)\n    }\n  }\n  return fields\n}\n\nexport interface Session<U extends User.Field = never, G extends Channel.Field = never, C extends Context = Context> extends satori.Session<C> {\n  argv?: Argv<U, G>\n  user?: User.Observed<U>\n  channel?: Channel.Observed<G>\n  guild?: Channel.Observed<G>\n  permissions: string[]\n  scope?: string\n  response?: () => Promise<Fragment>\n  resolve<T, R extends any[]>(source: T | Eval.Expr | ((session: this, ...args: R) => T), ...args: R):\n    | T extends Eval.Expr ? Eval<T>\n    : T extends (...args: any[]) => any ? ReturnType<T>\n    : T\n  stripped: Stripped\n  username: string\n  send(fragment: Fragment, options?: Universal.SendOptions): Promise<string[]>\n  cancelQueued(delay?: number): void\n  sendQueued(content: Fragment, delay?: number): Promise<string[]>\n  getChannel<K extends Channel.Field = never>(id?: string, fields?: K[]): Promise<Channel>\n  observeChannel<T extends Channel.Field = never>(fields: Iterable<T>): Promise<Channel.Observed<T | G>>\n  getUser<K extends User.Field = never>(userId?: string, fields?: K[]): Promise<User>\n  observeUser<T extends User.Field = never>(fields: Iterable<T>): Promise<User.Observed<T | U>>\n  withScope(scope: string, callback: () => Awaitable<h[]>): Promise<h[]>\n  resolveScope(path: string): string\n  text(path: string | string[], params?: object): string\n  i18n(path: string | string[], params?: object): h[]\n  collect<T extends 'user' | 'channel'>(key: T, argv: Argv, fields?: Set<keyof Tables[T]>): Set<keyof Tables[T]>\n  execute(content: string | Argv, next?: true | Next): Promise<h[]>\n  middleware(middleware: Middleware<this>): () => boolean\n  prompt(timeout?: number): Promise<string>\n  prompt<T>(callback: (session: this) => Awaitable<T>, options?: PromptOptions): Promise<T>\n  suggest(options: SuggestOptions): Promise<string>\n}\n\ninterface KoishiSession<U extends User.Field, G extends Channel.Field, C extends Context> extends Session<U, G, C> {\n  // DO NOT set class properties here,\n  // because they will override the actual properties in the instance.\n  _stripped: Stripped\n  _queuedTasks: Task[]\n  _queuedTimeout: NodeJS.Timeout\n}\n\nclass KoishiSession<U, G, C> {\n  constructor(ctx: C) {\n    ctx.mixin(this, {\n      resolve: 'session.resolve',\n      stripped: 'session.stripped',\n      username: 'session.username',\n      send: 'session.send',\n      cancelQueued: 'session.cancelQueued',\n      sendQueued: 'session.sendQueued',\n      getChannel: 'session.getChannel',\n      observeChannel: 'session.observeChannel',\n      getUser: 'session.getUser',\n      observeUser: 'session.observeUser',\n      withScope: 'session.withScope',\n      resolveScope: 'session.resolveScope',\n      text: 'session.text',\n      i18n: 'session.i18n',\n      collect: 'session.collect',\n      execute: 'session.execute',\n      middleware: 'session.middleware',\n      prompt: 'session.prompt',\n      suggest: 'session.suggest',\n    })\n  }\n\n  resolve<T, R extends any[]>(source: T | Eval.Expr | ((session: this, ...args: R) => T), ...args: R):\n    | T extends Eval.Expr ? Eval<T>\n    : T extends (...args: any[]) => any ? ReturnType<T>\n    : T\n\n  resolve(source: any, ...params: any[]) {\n    if (typeof source === 'function') {\n      return Reflect.apply(source, null, [this, ...params])\n    }\n    if (!isEvalExpr(source)) return source\n    return executeEval({ _: this }, source)\n  }\n\n  _stripNickname(content: string) {\n    if (content.startsWith('@')) content = content.slice(1)\n    for (const nickname of this.resolve(this.app.koishi.config.nickname) ?? []) {\n      if (!content.startsWith(nickname)) continue\n      const rest = content.slice(nickname.length)\n      const capture = /^([,，]\\s*|\\s+)/.exec(rest)\n      if (!capture) continue\n      return rest.slice(capture[0].length)\n    }\n  }\n\n  /** @deprecated */\n  get parsed() {\n    return this.stripped\n  }\n\n  get stripped() {\n    if (this._stripped) return this._stripped\n    if (!this.elements) return {} as Stripped\n\n    // strip mentions\n    let atSelf = false, appel = false\n    let hasAt = false\n    const elements = this.elements.slice()\n    while (elements[0]?.type === 'at') {\n      const { attrs } = elements.shift()\n      if (attrs.id === this.selfId) {\n        atSelf = appel = true\n      }\n      // quote messages may contain mentions\n      if (!this.quote?.user?.id || this.quote.user.id !== attrs.id) {\n        hasAt = true\n      }\n      // @ts-ignore\n      if (elements[0]?.type === 'text' && !elements[0].attrs.content.trim()) {\n        elements.shift()\n      }\n    }\n\n    let content = elements.join('').trim()\n    if (!hasAt) {\n      // strip nickname\n      const result = this._stripNickname(content)\n      if (result) {\n        appel = true\n        content = result\n      }\n    }\n\n    return this._stripped = { hasAt, content, appel, atSelf, prefix: null }\n  }\n\n  get username(): string {\n    return this.user && this.user['name']\n      ? this.user['name']\n      : this.author.nick || this.author.name || this.userId\n  }\n\n  async send(fragment: Fragment, options: Universal.SendOptions = {}) {\n    if (!fragment) return\n    options.session = this\n    return this.bot.sendMessage(this.channelId, fragment, this.guildId, options).catch<string[]>((error) => {\n      logger.warn(error)\n      return []\n    })\n  }\n\n  cancelQueued(delay = this.app.koishi.config.delay.cancel) {\n    clearTimeout(this._queuedTimeout)\n    this._queuedTasks = []\n    this._queuedTimeout = setTimeout(() => this._next(), delay)\n  }\n\n  _next() {\n    const task = this._queuedTasks?.shift()\n    if (!task) {\n      this._queuedTimeout = null\n      return\n    }\n    this.send(task.content).then(task.resolve, task.reject)\n    this._queuedTimeout = setTimeout(() => this._next(), task.delay)\n  }\n\n  async sendQueued(content: Fragment, delay?: number) {\n    const text = h.normalize(content).join('')\n    if (!text) return\n    if (isNullable(delay)) {\n      const { message, character } = this.app.koishi.config.delay\n      delay = Math.max(message, character * text.length)\n    }\n    return new Promise<string[]>((resolve, reject) => {\n      (this._queuedTasks ??= []).push({ content, delay, resolve, reject })\n      if (!this._queuedTimeout) this._next()\n    })\n  }\n\n  async getChannel<K extends Channel.Field = never>(id = this.channelId, fields: K[] = []) {\n    const { app, platform, guildId } = this\n    if (!fields.length) return { platform, id, guildId } as Channel\n    const channel = await app.database.getChannel(platform, id, fields)\n    if (channel) return channel\n    const assignee = this.resolve(app.koishi.config.autoAssign) ? this.selfId : ''\n    if (assignee) {\n      return app.database.createChannel(platform, id, { assignee, guildId, createdAt: new Date() })\n    } else {\n      const channel = app.model.tables.channel.create()\n      Object.assign(channel, { platform, id, guildId, $detached: true })\n      return channel\n    }\n  }\n\n  async _observeChannelLike<K extends Channel.Field = never>(channelId: string, fields: Iterable<K> = []) {\n    const fieldSet = new Set<Channel.Field>(fields)\n    const { platform } = this\n    const key = `${platform}:${channelId}`\n\n    let cache = this.app.$processor._channelCache.get(this.id, key)\n    if (cache) {\n      for (const key in cache) {\n        fieldSet.delete(key as any)\n      }\n      if (!fieldSet.size) return cache\n    }\n\n    const data = await this.getChannel(channelId, [...fieldSet])\n    cache = this.app.$processor._channelCache.get(this.id, key)\n    if (cache) {\n      cache.$merge(data)\n    } else {\n      cache = observe(data, async (diff) => {\n        // https://github.com/koishijs/koishi/issues/1267\n        if (data['$detached']) return\n        await this.app.database.setChannel(platform, channelId, diff as any)\n      }, `channel ${key}`)\n      this.app.$processor._channelCache.set(this.id, key, cache)\n    }\n    return cache\n  }\n\n  async observeChannel<T extends Channel.Field = never>(fields: Iterable<T>): Promise<Channel.Observed<T | G>> {\n    const tasks = [this._observeChannelLike(this.channelId, fields)]\n    if (this.channelId !== this.guildId) {\n      tasks.push(this._observeChannelLike(this.guildId, fields))\n    }\n    const [channel, guild = channel] = await Promise.all(tasks)\n    this.guild = guild\n    this.channel = channel\n    return channel\n  }\n\n  async getUser<K extends User.Field = never>(userId = this.userId, fields: K[] = []) {\n    const { app, platform } = this\n    if (!fields.length) return {} as User\n    const user = await app.database.getUser(platform, userId, fields)\n    if (user) return user\n    const authority = this.resolve(app.koishi.config.autoAuthorize)\n    const data = { locales: this.locales, authority, createdAt: new Date() }\n    if (authority) {\n      return app.database.createUser(platform, userId, data)\n    } else {\n      const user = app.model.tables.user.create()\n      Object.assign(user, { ...data, $detached: true })\n      return user\n    }\n  }\n\n  async observeUser<T extends User.Field = never>(fields: Iterable<T>): Promise<User.Observed<T | U>> {\n    const fieldSet = new Set<User.Field>(fields)\n    const { userId } = this\n\n    let cache = this.user || this.app.$processor._userCache.get(this.id, this.uid)\n    if (cache) {\n      for (const key in cache) {\n        fieldSet.delete(key as any)\n      }\n      if (!fieldSet.size) return this.user = cache as any\n    }\n\n    if (this.author?.['anonymous']) {\n      const fallback = this.app.model.tables.user.create()\n      fallback.authority = this.resolve(this.app.koishi.config.autoAuthorize)\n      const user = observe(fallback, () => Promise.resolve())\n      return this.user = user\n    }\n\n    const data = await this.getUser(userId, [...fieldSet])\n    cache = this.user || this.app.$processor._userCache.get(this.id, this.uid)\n    if (cache) {\n      cache.$merge(data)\n    } else {\n      cache = observe(data, async (diff) => {\n        // https://github.com/koishijs/koishi/issues/1267\n        if (data['$detached']) return\n        await this.app.database.setUser(this.platform, userId, diff as any)\n      }, `user ${this.uid}`)\n      this.app.$processor._userCache.set(this.id, this.uid, cache as any)\n    }\n    return this.user = cache as any\n  }\n\n  async withScope(scope: string, callback: () => Awaitable<h[]>): Promise<h[]> {\n    const oldScope = this.scope\n    try {\n      this.scope = scope\n      const result = await callback()\n      return h.transform(result, {\n        i18n: (params, children) => h.i18n({\n          ...params,\n          path: this.resolveScope(params.path),\n        }, children),\n      }, this)\n    } finally {\n      this.scope = oldScope\n    }\n  }\n\n  resolveScope(path: string) {\n    if (!path.startsWith('.')) return path\n    if (!this.scope) {\n      this.app.logger('i18n').warn(new Error(`missing scope for \"${path}\"`))\n      return ''\n    }\n    return this.scope + path\n  }\n\n  text(path: string | string[], params: object = {}) {\n    return this.i18n(path, params).join('')\n  }\n\n  i18n(path: string | string[], params: object = {}) {\n    const locales: string[] = [\n      ...(this.channel as Channel.Observed)?.locales || [],\n      ...(this.guild as Channel.Observed)?.locales || [],\n    ]\n    if (this.app.koishi.config.i18n.output === 'prefer-user') {\n      locales.unshift(...(this.user as User.Observed)?.locales || [])\n    } else {\n      locales.push(...(this.user as User.Observed)?.locales || [])\n    }\n    locales.unshift(...this.locales || [])\n    const paths = makeArray(path).map((path) => this.resolveScope(path))\n    return this.app.i18n.render(locales, paths, params)\n  }\n\n  collect<T extends 'user' | 'channel'>(key: T, argv: Argv, fields = new Set<keyof Tables[T]>()): Set<keyof Tables[T]> {\n    const collect = (argv: Argv) => {\n      argv.session = this\n      if (argv.tokens) {\n        for (const { inters } of argv.tokens) {\n          inters.forEach(collect)\n        }\n      }\n      if (!this.app.$commander.resolveCommand(argv)) return\n      ;(this.app as Context).emit(argv.session, `command/before-attach-${key}` as any, argv, fields)\n      collectFields(argv, argv.command[`_${key}Fields` as any], fields)\n    }\n    if (argv) collect(argv)\n    return fields\n  }\n\n  async execute(argv: string | Argv, next?: true | Next) {\n    if (typeof argv === 'string') argv = Argv.parse(argv)\n\n    argv.session = this\n    if (argv.tokens) {\n      for (const arg of argv.tokens) {\n        const { inters } = arg\n        const output: string[] = []\n        for (let i = 0; i < inters.length; ++i) {\n          const execution = await this.execute(inters[i], true)\n          const transformed = await this.transform(execution)\n          output.push(transformed.join(''))\n        }\n        for (let i = inters.length - 1; i >= 0; --i) {\n          const { pos } = inters[i]\n          arg.content = arg.content.slice(0, pos) + output[i] + arg.content.slice(pos)\n        }\n        arg.inters = []\n      }\n      if (!this.app.$commander.resolveCommand(argv)) return []\n    } else {\n      argv.command ||= this.app.$commander.get(argv.name)\n      if (!argv.command) {\n        logger.warn(new Error(`cannot find command ${argv.name}`))\n        return []\n      }\n    }\n\n    const { command } = argv\n    if (!command.ctx.filter(this)) return []\n\n    if (this.app.database) {\n      if (!this.isDirect) {\n        await this.observeChannel(this.collect('channel', argv, new Set(['permissions', 'locales'])))\n      }\n      await this.observeUser(this.collect('user', argv, new Set(['authority', 'permissions', 'locales'])))\n    }\n\n    let shouldEmit = true\n    if (next === true) {\n      shouldEmit = false\n      next = undefined as Next\n    }\n\n    return this.withScope(`commands.${command.name}.messages`, async () => {\n      const result = await command.execute(argv as Argv, next as Next)\n      if (!shouldEmit) return h.normalize(result)\n      await this.send(result)\n      return []\n    })\n  }\n\n  middleware(middleware: Middleware<this>) {\n    const id = this.fid\n    return this.app.middleware<this>(async (session, next) => {\n      if (id && session.fid !== id) return next()\n      return middleware(session, next)\n    }, true)\n  }\n\n  prompt(timeout?: number): Promise<string>\n  prompt<T>(callback: (session: this) => Awaitable<T>, options?: PromptOptions): Promise<T>\n  prompt(...args: any[]) {\n    const callback: (session: this) => any = typeof args[0] === 'function'\n      ? args.shift()\n      : (session) => {\n        // Trim leading <at> element\n        const elements = session.elements.slice()\n        if (elements[0]?.type === 'at' && elements[0].attrs.id === session.selfId) {\n          elements.shift()\n        }\n        return elements.join('').trim()\n      }\n    const options: PromptOptions = typeof args[0] === 'number'\n      ? { timeout: args[0] }\n      : args[0] ?? {}\n    return new Promise<string>((resolve) => {\n      const dispose = this.middleware(async (session, next) => {\n        clearTimeout(timer)\n        dispose()\n        const value = await callback(session)\n        resolve(value)\n        if (isNullable(value)) return next()\n      })\n      const timer = setTimeout(() => {\n        dispose()\n        resolve(undefined)\n      }, options.timeout ?? this.app.koishi.config.delay.prompt)\n    })\n  }\n\n  async suggest(options: SuggestOptions) {\n    let { expect, filter, prefix = '' } = options\n    if (options.actual) {\n      expect = expect.filter((name) => {\n        return name && this.app.i18n.compare(name, options.actual, options)\n      })\n      if (filter) {\n        expect = (await Promise.all(expect\n          .map(async (name) => [name, await filter(name)] as const)))\n          .filter(([, result]) => result)\n          .map(([name]) => name)\n      }\n    }\n    if (!expect.length) {\n      await this.send(prefix)\n      return\n    }\n\n    prefix += this.text('internal.suggest-hint', [expect.map(text => {\n      return this.text('general.quote', [text])\n    }).join(this.text('general.or'))])\n    if (expect.length > 1) {\n      await this.send(prefix)\n      return\n    }\n\n    await this.send(prefix + options.suffix)\n    return this.prompt((session) => {\n      const { content, atSelf, hasAt } = session.stripped\n      if (!atSelf && hasAt) return\n      if (content === '.' || content === '。') {\n        return expect[0]\n      }\n    }, options)\n  }\n}\n\nexport default KoishiSession\n", "import { Logger } from '@satorijs/core'\nimport { Awaitable, defineProperty, remove } from 'cosmokit'\nimport { Context } from './context'\nimport { createMatch, MatchResult } from './i18n'\nimport { Session } from './session'\n\nconst logger = new Logger('app')\n\ndeclare module './context' {\n  interface Context {\n    permissions: Permissions\n  }\n\n  interface Events {\n    'internal/permission'(): void\n  }\n}\n\nexport namespace Permissions {\n  export type Links<P extends string> = undefined | string[] | ((data: MatchResult<P>) => undefined | string[])\n  export type Check<P extends string> = (data: MatchResult<P>, session: Partial<Session>) => Awaitable<boolean>\n\n  export interface Options<P extends string = string> {\n    list?: () => string[]\n    check?: Check<P>\n    depends?: Links<P>\n    inherits?: Links<P>\n  }\n\n  export interface Entry extends Options {\n    match: (string: string) => undefined | MatchResult\n  }\n\n  export interface Config {\n    authority?: number\n    permissions?: string[]\n    dependencies?: string[]\n  }\n}\n\nexport class Permissions {\n  public store: Permissions.Entry[] = []\n\n  constructor(public ctx: Context) {\n    defineProperty(this, Context.current, ctx)\n    ctx.alias('permissions', ['perms'])\n\n    this.define('authority:(value)', {\n      check: ({ value }, { user }: Partial<Session<'authority'>>) => {\n        return !user || user.authority >= +value\n      },\n      list: () => Array(5).fill(0).map((_, i) => `authority:${i}`),\n    })\n\n    this.provide('(name)', ({ name }, session) => {\n      return session.bot?.checkPermission(name, session)\n    })\n\n    this.provide('(name)', ({ name }, session: Partial<Session<'permissions', 'permissions'>>) => {\n      return session.permissions?.includes(name)\n        || session.user?.permissions?.includes(name)\n        || session.channel?.permissions?.includes(name)\n    })\n  }\n\n  define<P extends string>(pattern: P, options: Permissions.Options<P>) {\n    const entry: Permissions.Entry = {\n      ...options,\n      match: createMatch(pattern),\n    }\n    if (!pattern.includes('(')) entry.list ||= () => [pattern]\n    return this.ctx.effect(() => {\n      this.store.push(entry)\n      return () => remove(this.store, entry)\n    })\n  }\n\n  provide<P extends string>(pattern: P, check: Permissions.Check<P>) {\n    return this.define(pattern, { check })\n  }\n\n  inherit<P extends string>(pattern: P, inherits: Permissions.Links<P>) {\n    return this.define(pattern, { inherits })\n  }\n\n  depend<P extends string>(pattern: P, depends: Permissions.Links<P>) {\n    return this.define(pattern, { depends })\n  }\n\n  list(result = new Set<string>()) {\n    for (const { list } of this.store) {\n      if (!list) continue\n      for (const name of list()) {\n        result.add(name)\n      }\n    }\n    return [...result]\n  }\n\n  async check(name: string, session: Partial<Session>) {\n    const results = await Promise.all(this.store.map(async ({ match, check }) => {\n      if (!check) return false\n      const data = match(name)\n      if (!data) return false\n      try {\n        return await check(data, session)\n      } catch (error) {\n        logger.warn(error)\n        return false\n      }\n    }))\n    return results.some(Boolean)\n  }\n\n  subgraph(type: 'inherits' | 'depends', parents: Iterable<string>, result = new Set<string>()): Set<string> {\n    let name: string\n    const queue = [...parents]\n    while ((name = queue.shift())) {\n      if (result.has(name)) continue\n      result.add(name)\n      for (const entry of this.store) {\n        const data = entry.match(name)\n        if (!data) continue\n        let links = entry[type]\n        if (typeof links === 'function') links = links(data)\n        if (Array.isArray(links)) queue.push(...links)\n      }\n    }\n    return result\n  }\n\n  async test(names: Iterable<string>, session: Partial<Session> = {}, cache: Map<string, Promise<boolean>> = new Map()) {\n    session = session[Context.shadow] || session\n    if (typeof names === 'string') names = [names]\n    for (const name of this.subgraph('depends', names)) {\n      const parents = [...this.subgraph('inherits', [name])]\n      const results = await Promise.all(parents.map(parent => {\n        let result = cache.get(parent)\n        if (!result) {\n          result = this.check(parent, session)\n          cache.set(parent, result)\n        }\n        return result\n      }))\n      if (results.some(result => result)) continue\n      return false\n    }\n    return true\n  }\n}\n", "import { sleep } from '@koishijs/utils'\nimport { defineProperty, Dict } from 'cosmokit'\nimport { Adapter, Bot, Fragment } from '@satorijs/core'\nimport { Context } from './context'\nimport { Session } from './session'\n\ndeclare module '@satorijs/core' {\n  interface Bot {\n    /** @deprecated */\n    getGuildMemberMap(guildId: string): Promise<Dict<string>>\n    broadcast(channels: (string | [string, string] | Session)[], content: Fragment, delay?: number): Promise<string[]>\n  }\n}\n\n// adapter plugins usually do not respect filters\ndefineProperty(Bot, 'filter', false)\ndefineProperty(Adapter, 'filter', false)\n\ninterface KoishiBot extends Bot<Context> {}\n\nclass KoishiBot {\n  constructor(ctx: Context) {\n    ctx.mixin(this, {\n      getGuildMemberMap: 'bot.getGuildMemberMap',\n      broadcast: 'bot.broadcast',\n    })\n  }\n\n  async getGuildMemberMap(guildId: string) {\n    const result: Dict<string> = {}\n    for await (const member of this.getGuildMemberIter(guildId)) {\n      result[member.user.id] = member.name || member.user.name\n    }\n    return result\n  }\n\n  async broadcast(channels: (string | [string, string] | Session)[], content: Fragment, delay = this.ctx.root.config.delay.broadcast) {\n    const ids: string[] = []\n    for (let index = 0; index < channels.length; index++) {\n      if (index && delay) await sleep(delay)\n      try {\n        const value = channels[index]\n        ids.push(...typeof value === 'string'\n          ? await this.sendMessage(value, content)\n          : Array.isArray(value)\n            ? await this.sendMessage(value[0], content, value[1])\n            : await this.sendMessage(value.channelId, content, value.guildId, { session: value }))\n      } catch (error) {\n        this.ctx.logger('bot').warn(error)\n      }\n    }\n    return ids\n  }\n}\n\nexport default KoishiBot\n", "import { Dict, remove } from 'cosmokit'\nimport { Schema } from '@satorijs/core'\nimport { Computed } from './filter'\nimport { Context } from './context'\n\ndeclare global {\n  interface Schemastery<S, T> {\n    computed(options?: Computed.Options): Schema<Computed<S>, Computed<T>>\n  }\n\n  namespace Schemastery {\n    interface Static {\n      path(options?: Path.Options): Schema<string>\n      filter(): Schema<Computed<boolean>>\n      computed<X>(inner: X, options?: Computed.Options): Schema<Computed<TypeS<X>>, Computed<TypeT<X>>>\n      dynamic(name: string): Schema\n    }\n\n    namespace Path {\n      interface Options {\n        filters?: Filter[]\n        allowCreate?: boolean\n      }\n\n      type Filter = FileFilter | 'file' | 'directory'\n\n      interface FileFilter {\n        name: string\n        extensions: string[]\n      }\n    }\n  }\n}\n\nSchema.dynamic = function dynamic(name) {\n  return Schema.any().role('dynamic', { name }) as never\n}\n\nSchema.filter = function filter() {\n  return Schema.any().role('filter')\n}\n\nSchema.computed = function computed(inner, options = {}) {\n  return Schema.union([\n    Schema.from(inner),\n    Schema.object({\n      $switch: Schema.object({\n        branches: Schema.array(Schema.object({\n          case: Schema.any(),\n          then: Schema.from(inner),\n        })),\n        default: Schema.from(inner),\n      }),\n    }).hidden(),\n    Schema.any().hidden(),\n  ]).role('computed', options)\n}\n\nSchema.path = function path(options = {}) {\n  return Schema.string().role('path', options)\n}\n\nSchema.prototype.computed = function computed(this: Schema, options = {}) {\n  return Schema.computed(this, options).default(this.meta.default)\n}\n\nconst kSchemaOrder = Symbol('schema-order')\n\ndeclare module '@satorijs/core' {\n  interface Context {\n    schema: SchemaService\n  }\n\n  interface Events {\n    'internal/schema'(name: string): void\n  }\n}\n\nexport class SchemaService {\n  _data: Dict<Schema> = Object.create(null)\n\n  constructor(public ctx: Context) {\n    this.extend('intercept.http', Schema.object({\n      timeout: Schema.natural().role('ms').description('等待连接建立的最长时间。'),\n      proxyAgent: Schema.string().description('使用的代理服务器地址。'),\n      keepAlive: Schema.boolean().description('是否保持连接。'),\n    }))\n  }\n\n  extend(name: string, schema: Schema, order = 0) {\n    const caller = this[Context.current]\n    const target = this.get(name)\n    const index = target.list.findIndex(a => a[kSchemaOrder] < order)\n    schema[kSchemaOrder] = order\n    if (index >= 0) {\n      target.list.splice(index, 0, schema)\n    } else {\n      target.list.push(schema)\n    }\n    this.ctx.emit('internal/schema', name)\n    caller?.on('dispose', () => {\n      remove(target.list, schema)\n      this.ctx.emit('internal/schema', name)\n    })\n  }\n\n  get(name: string) {\n    return this._data[name] ||= Schema.intersect([])\n  }\n\n  set(name: string, schema: Schema) {\n    const caller = this[Context.current]\n    this._data[name] = schema\n    this.ctx.emit('internal/schema', name)\n    caller?.on('dispose', () => {\n      delete this._data[name]\n      this.ctx.emit('internal/schema', name)\n    })\n  }\n}\n"],
  "mappings": "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",
  "names": ["isArray", "inspect", "isPlainObject", "pathToRegexp", "value", "tokens", "path", "data", "match", "flatten", "regexp", "__commonJS", "__publicField", "__name", "filter", "value", "Binary", "a", "b", "Time", "template", "__name", "target", "__name", "target", "property", "_a", "value", "args", "thisArg", "arg", "defineProperty", "builtin", "filter", "ScopeStatus", "CordisError", "remove", "isNullable", "fallback", "hasUpdate", "ctx", "Inject", "__defProp", "__getOwnPropNames", "__name", "__commonJS", "__toESM", "_a", "_b", "_c", "logger", "require_browser", "inspect", "_a", "__name", "require_src", "__commonJS", "__name", "options", "refs", "_a", "pattern", "value", "extend", "fallback", "date", "property", "merge", "key", "_a", "lib_default", "__name", "_a", "__name", "Context", "_a", "_b", "__name", "Service", "Type", "__name", "_a", "isArray", "Relation", "key", "Field", "isNullable", "field", "defineProperty", "mapValues", "Eval", "fallback", "path", "Binary", "filterKeys", "Selection", "is", "_b", "makeArray", "fields", "_c", "sel", "_d", "target", "p", "receiver", "upsert", "update", "r", "Service", "Context", "remove", "model", "deepEqual", "query", "value", "__defProp", "__name", "__defProp", "__name", "v4", "_a", "_b", "mimedb", "lib_default", "require_src", "__commonJS", "_a", "__name", "evaluate", "Element", "interpolate", "Position", "source", "trimStart", "tokens", "children", "path", "lib_exports", "WebSocket", "__defProp", "__name", "Field", "Channel2", "Type", "Type2", "WebSocket2", "__defProp", "__name", "_a", "_b", "path", "_c", "lib_default", "logger", "mv", "pv", "start", "vlen", "LocaleTree", "locale", "__name", "key", "__name", "_a", "Context", "filter", "Argv", "interpolate", "parse", "whitespace", "lib_default", "symbols", "param", "name", "path", "_b", "token", "fallback", "User", "Flag", "Channel", "lib_exports", "Next", "defineProperty", "pattern", "h", "next", "_c", "error", "coerce", "Command", "isNullable", "Schema", "Universal", "Time", "segment", "logger", "Logger", "I18n", "_d", "channel", "key", "user", "makeArray", "argv", "remove", "Bot", "computed", "kSchemaOrder", "SchemaService", "Service"]
}
