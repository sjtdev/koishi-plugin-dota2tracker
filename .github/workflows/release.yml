# .github/workflows/release.yml

name: Create Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Extract Release Notes
        id: extract_release_notes
        run: |
          # 原始标签, 例如: v2.1.1
          RAW_TAG=${{ github.ref_name }}
          echo "Raw tag from GitHub: $RAW_TAG"

          # 【关键修正】移除 'v' 前缀, 得到干净的版本号, 例如: 2.1.1
          CLEAN_TAG=${RAW_TAG#v}
          echo "Cleaned version for search: $CLEAN_TAG"

          # 使用新的 CLEAN_TAG 变量进行精确查找
          # awk 的逻辑是：从找到 CLEAN_TAG 的行开始，到下一个版本标题行（/^### \[/）结束
          NOTES=$(awk "/^###.*$CLEAN_TAG/,/^### \[/" changelog.md | sed '1d' | sed '$d')

          # 备用方案，处理日志中只有一个版本（文件末尾）的情况
          if [ -z "$NOTES" ]; then
            NOTES=$(awk "/^###.*$CLEAN_TAG/,/./" changelog.md | sed '1d')
          fi

          # 将提取到的内容设置为输出
          echo "notes<<EOF" >> $GITHUB_OUTPUT
          echo "$NOTES" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          body: ${{ steps.extract_release_notes.outputs.notes }}
