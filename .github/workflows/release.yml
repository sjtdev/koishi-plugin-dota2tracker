# .github/workflows/release.yml

name: Create Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      # 步骤1: 检出代码
      - name: Checkout code
        uses: actions/checkout@v4
        # 必须设置 fetch-depth: 0 才能获取到历史 tag，为手动调试做准备
        with:
          fetch-depth: 0

      # 步骤2: 【全新】使用内置工具提取最新版本的发布说明
      - name: Extract Release Notes
        id: extract_release_notes
        run: |
          # 从触发工作流的 Git ref 中提取标签名, 例如 refs/tags/v2.1.0 -> v2.1.0
          CURRENT_TAG=${{ github.ref_name }}
          echo "Current tag is: $CURRENT_TAG"

          # 使用 awk 精确查找包含该标签名的版本块
          # sed '1d' 用于删除版本标题行自身, sed '$d' 用于删除匹配到的下一个版本标题行
          NOTES=$(awk "/^###.*$CURRENT_TAG/,/^### \[/" changelog.md | sed '1d' | sed '$d')

          # 如果 awk 没有找到第二个版本块（即这是文件中的最后一个版本），上面的 sed '$d' 会删除最后一行内容
          # 我们需要一个备用方案来处理这种情况
          if [ -z "$NOTES" ]; then
            NOTES=$(awk "/^###.*$CURRENT_TAG/,/./" changelog.md | sed '1d')
          fi

          echo "notes<<EOF" >> $GITHUB_OUTPUT
          echo "$NOTES" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      # 步骤3: 创建 GitHub Release
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          body: ${{ steps.extract_release_notes.outputs.notes }}
