name: Create Release

on:
  push:
    branches:
      - master
    paths:
      - "package.json"
  workflow_dispatch:

jobs:
  check-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
      
      - name: Install dependencies
        run: |
          sudo apt-get install jq
          sudo npm install -g @actions/core

      - name: Get version info
        id: version_info
        run: |
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          echo "package_version=${PACKAGE_VERSION}" >> $GITHUB_OUTPUT

      - name: Extract changelog
        id: extract_changelog
        run: |
          VERSION="${{ steps.version_info.outputs.package_version }}"
          SECTION=$(awk -v version="$VERSION" '
            BEGIN { 
              print_flag = 0 
              in_details = 0
            }
            # 检测<details>标签
            /^<details>/ { in_details = 1 }
            /^<\/details>/ { in_details = 0 }
            
            # 仅处理非折叠区域的内容
            in_details == 0 {
              if ($0 ~ "^# " version "(\\s|$)") {  # 严格匹配版本号
                print_flag = 1
                next
              }
              else if (print_flag == 1 && $0 ~ /^# [0-9]+\.[0-9]+/) {  # 遇到下个主版本停止
                print_flag = 0
                exit
              }
              if (print_flag == 1) {
                gsub(/^* \* /, "")  # 清理列表符号
                print
              }
            }
          ' changelog.md)
          
          ESCAPED_SECTION=$(echo "$SECTION" | jq -R -s -c .)
          echo "section=${ESCAPED_SECTION}" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.version_info.outputs.package_version }}
          name: v${{ steps.version_info.outputs.package_version }}
          body: |
            ${{ fromJSON(steps.extract_changelog.outputs.section) }}

            **自动更新说明**  
            请于 Koishi 的 `依赖管理` 中更新插件或 `插件市场` 中搜索安装
          prerelease: false
          draft: false
