name: Create Release

on:
  push:
    branches:
      - master
    paths:
      - "package.json"
  workflow_dispatch:

jobs:
  check-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
      
      - name: Install jq
        run: sudo apt-get install jq

      - name: Check version
        id: check_version
        run: |
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          PACKAGE_NAME=$(node -p "require('./package.json').name")
          echo "package_version=${PACKAGE_VERSION}" >> $GITHUB_OUTPUT
          echo "package_name=${PACKAGE_NAME}" >> $GITHUB_OUTPUT

          LATEST_RELEASE=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/releases/latest" \
            | jq -r '.tag_name // empty')

          if [ -z "$LATEST_RELEASE" ]; then
            echo "should_release=true" >> $GITHUB_OUTPUT
          else
            LATEST_VERSION=${LATEST_RELEASE#v}
            if [ "$PACKAGE_VERSION" != "$LATEST_VERSION" ]; then
              echo "should_release=true" >> $GITHUB_OUTPUT
            else
              echo "should_release=false" >> $GITHUB_OUTPUT
            fi
          fi

      - name: Create Release
        if: steps.check_version.outputs.should_release == 'true'
        run: |
          RELEASE_BODY=$(cat <<EOF
          🎉 这是一个自动生成的release，用于发布插件版本更新提醒。请于 \`koishi\` \`依赖管理\` 中更新插件或 \`插件市场\` 中搜索安装。

          📝 更新日志：https://github.com/${{ github.repository }}/blob/master/changelog.md


          🎉 This is an automatically generated release for plugin version update notifications. Please update in \`koishi\` \`Dependencies\` or search for installation in the \`Plugin market\`.

          📝 Changelog: https://github.com/${{ github.repository }}/blob/master/changelog.md
          EOF
          )

          curl -X POST \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/${{ github.repository }}/releases" \
            -d @- << EOF
          {
            "tag_name": "v${{ steps.check_version.outputs.package_version }}",
            "name": "v${{ steps.check_version.outputs.package_version }}",
            "body": $(echo "$RELEASE_BODY" | jq -R -s .),
            "draft": false,
            "prerelease": false
          }
          EOF
