<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Document</title>
    <%- `<style>` %>
    <%- include(`./match_1/style.css`) %>
    <% if (fontFamily && fontFamily.length > 0) { %>
    <%- `body { font-family: ${fontFamily.map(f => `${f}`).join(", ")}; }` %>
    <% } %>
    <%- "</style>" %>
    <style>
      .box {
        border-radius: 5px;
        border: 2px solid rgba(255, 255, 255, 0.25);
        overflow: hidden;
      }
    </style>
  </head>
  <% const match = data; %>
  <%
  const partyColor = ["#caffe5","#ffe484","#e19be2","#ccdaf4"]
  const facetColor = {
    Red: "from-[#9f3c3c] to-[#4a2026]",
    Yellow: "from-[#c8a45c] to-[#6f3d21]",
    Green: "from-[#a2b23e] to-[#2d5a18]",
    Blue: "from-[#547ea6] to-[#2a385e]",
    Purple: "from-[#675cae] to-[#261c44]",
    Gray: "from-[#adb6be] to-[#4e5557]",
    Black: "from-[#2d2d2d] to-[#000000]"
  }
  let kcndcStyle = {
    kc: function (num) {
      let red = (255 - (num * 255) / 100).toFixed(2);
      return `rgb(255,${red},${red})`;
    },
    dc: function (num) {
      let gray = ((50 - Math.min(num, 50)) * (255 / 50)).toFixed(2);
      return `rgb(${gray},${gray},${gray})`;
    },
  };
  // 对线结果的图标（来自免费SVG素材网）
  const laneSVG = {
    stomp: getImageUrl("lane_stomp", undefined, ImageFormat.svg),
    advantage: getImageUrl("lane_victory", undefined, ImageFormat.svg),
    disadvantage: getImageUrl("lane_fail", undefined, ImageFormat.svg),
    stomped: getImageUrl("lane_stomped", undefined, ImageFormat.svg),
    tie: getImageUrl("lane_tie", undefined, ImageFormat.svg),
    jungle: getImageUrl("lane_jungle", undefined, ImageFormat.svg),
  };
  %>
  <body class="bg-black w-[800px] text-white">
    <%- include(`./match_1/main.ejs`, { match, partyColor, facetColor, kcndcStyle, laneSVG }) %>
  </body>
</html>
