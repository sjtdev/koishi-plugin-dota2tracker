<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/normalize/8.0.1/normalize.min.css" />
        <title>Document</title>
        <style>
            html,
            body {
                background-color: black;
                color: white;
                width: 800px;
            }
            p {
                margin: 0;
            }
            img {
                width: 100%;
                vertical-align: middle;
            }
            .player.full {
                width: 100%;
                border: 1px #fff solid;
                border-radius: 5px;
                box-sizing: border-box;
            }

            .player.full .info {
                display: grid;
                grid-template-columns: 64px auto 64px;
                align-items: center;
                /* border-bottom: #fff 1px solid; */
                position: relative;
                padding-bottom: 1px;
            }
            .player.full .info > .name {
                line-height: 20px;
                display: grid;
                grid-template-rows: 24px 18px 14px;
                grid-template-columns: repeat(2, 1fr);
                gap: 2px;
                text-align: center;
                padding: 2px 0;
            }
            .player.full .info > .name > .nick_name {
                font-size: 20px;
                line-height: 24px;
                grid-column: 1/-1;
            }
            .player.full .info > .name > .name {
                line-height: 18px;
            }
            .player.full .info > .name > .id {
                font-size: 12px;
                line-height: 14px;
                color: #888;
            }
            .player.full .info > .name > p {
                display: flex;
                justify-content: space-around;
            }
            .player.full .info > .avatar.steam {
                position: relative;
            }
            .player.full .info > .avatar.steam > .rank {
                top: 0;
                right: 0;
                width: 32px;
                position: absolute;
            }
            .player.full .info > .avatar.steam > p {
                z-index: 1;
                position: absolute;
                bottom: 35px;
                left: 50%;
                width: 32px;
                text-align: center;
                font-size: 4px;
            }
            .player.full .last_match_date {
                position: relative;
                padding-top: 1px;
            }
            .player.full .last_match_date::before {
                content: "";
                position: absolute;
                left: 50%;
                transform: translateX(-50%);
                top: 0;
                width: 80%;
                height: 1px;
                background-color: #666;
            }

            .player.full .last10match {
                display: grid;
                gap: 5px;
                grid-template-columns: repeat(5, 1fr);
                grid-template-rows: repeat(2, 1fr);
                align-items: center;
                justify-items: center;
                margin: 4px;
            }

            .player.full .last10match .match {
                width: 150px;
                height: 36px;
                border-radius: 36px;
                padding: 0 6px;
                display: flex;
                box-sizing: border-box;
                align-items: center;
                flex-direction: row;
                justify-content: space-between;
            }
            .player.full .last10match .match.win {
                background-color: #006400;
            }
            .player.full .last10match .match.lose {
                background-color: #8b0000;
            }
            .player.full .last10match img {
                width: 32px;
            }
        </style>

        <% if (fontFamily && fontFamily.length > 0) { %>
        <%- "<style>" %>
        <%- `body { font-family: ${fontFamily.map(f => `${f}`).join(", ")}; }` %>
        <%- "</style>" %>
        <% } %>
    </head>
    <body>
        <% const users = data;
            users.forEach(player=>{
                player.rank = {
                    medal: parseInt(player.steamAccount.seasonRank?.toString().split("")[0] ?? 0),
                    star: parseInt(player.steamAccount.seasonRank?.toString().split("")[1] ?? 0),
                    leaderboard: player.steamAccount.seasonLeaderboardRank,
                    inTop100: player.steamAccount.seasonLeaderboardRank ? (player.steamAccount.seasonLeaderboardRank <= 10 ? "8c" : player.steamAccount.seasonLeaderboardRank <= 100 ? "8b" : undefined) : undefined,
        }});%>
        <%-users.map(user=>`
        <div class="player full">
            <div class="info">
                <img class="avatar user" src="${user?.user?.avatar}" alt="" />
                <div class="name">
                    <span class="nick_name">${eh(user.nickName)}</span>
                    <span class="user name">${eh(user.nick || user.user?.name)}</span>
                    <span class="steam name">${eh(user.steamAccount.name)}</span>
                    <span class="user id">${user.userId}</span>
                    <span class="steam id">${user.steamId}</span>
                </div>
                <div class="avatar steam">
                    <p>${user.steamAccount.seasonLeaderboardRank??""}</p>
                    <img class="rank" src="${utils.getImageUrl('star_' + user.rank.star)}" alt="" />
                    <img class="rank" src="${utils.getImageUrl('medal_' +(user.inTop100??user.rank.medal))}" alt="" />
                    <img class="avatar" src="${user.steamAccount.avatar}" alt="" />
                </div>
            </div>
            ${users.length<10?
            `<div class="last10match">
                ${user.matches.map(match=>{
                    let playerInMatch = match.players.find(player=>player.steamAccount.id==user.steamId)
                    return `
                <div class="match ${match.didRadiantWin==playerInMatch.isRadiant?"win":"lose"}">
                    <img src="${utils.getImageUrl(playerInMatch.hero.shortName,ImageType.HeroIcons)}" alt="" />
                    <span>${playerInMatch.kills}/${playerInMatch.deaths}/${playerInMatch.assists}</span>
                    <span>${(playerInMatch.imp > 0 ? "+" : "") + playerInMatch.imp}</span>
                </div>`}).join("")}
            </div>`:0}
            <div class="last_match_date">最近游戏: ${moment(new Date((user.matches[0]?.startDateTime ?? 0) * 1000)).format("YYYY-MM-DD HH:mm:ss")}</div>
        </div>`).join("")
        %>
    </body>
</html>
